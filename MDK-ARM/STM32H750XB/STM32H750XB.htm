<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [STM32H750XB\STM32H750XB.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image STM32H750XB\STM32H750XB.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Sep 06 13:40:11 2022
<BR><P>
<H3>Maximum Stack Usage =       1796 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
lv_meter_event &rArr; lv_draw_arc &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">SVC_Handler</a><BR>
 <LI><a href="#[8d]">ADC3_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8d]">ADC3_IRQHandler</a><BR>
 <LI><a href="#[47f]">obj_valid_child</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[47f]">obj_valid_child</a><BR>
 <LI><a href="#[4c7]">_lv_area_is_point_on</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4c7]">_lv_area_is_point_on</a><BR>
 <LI><a href="#[437]">event_send_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[437]">event_send_core</a><BR>
 <LI><a href="#[468]">lv_obj_get_style_prop</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[468]">lv_obj_get_style_prop</a><BR>
 <LI><a href="#[4d7]">refresh_children_style</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4d7]">refresh_children_style</a><BR>
 <LI><a href="#[4dd]">report_style_change_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4dd]">report_style_change_core</a><BR>
 <LI><a href="#[4b8]">lv_obj_move_children_by</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4b8]">lv_obj_move_children_by</a><BR>
 <LI><a href="#[548]">apply_theme</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[548]">apply_theme</a><BR>
 <LI><a href="#[49d]">lv_obj_construct</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[49d]">lv_obj_construct</a><BR>
 <LI><a href="#[4bb]">layout_update_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4bb]">layout_update_core</a><BR>
 <LI><a href="#[f]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">BusFault_Handler</a><BR>
 <LI><a href="#[10]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">UsageFault_Handler</a><BR>
 <LI><a href="#[45a]">lv_indev_search_obj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[45a]">lv_indev_search_obj</a><BR>
 <LI><a href="#[527]">obj_del_core</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[527]">obj_del_core</a><BR>
 <LI><a href="#[3be]">lv_draw_label</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3aa]">lv_draw_rect</a><BR>
 <LI><a href="#[56b]">lv_draw_line</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3aa]">lv_draw_rect</a><BR>
 <LI><a href="#[53d]">lv_draw_img</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3aa]">lv_draw_rect</a><BR>
 <LI><a href="#[53a]">lv_refr_get_top_obj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[53a]">lv_refr_get_top_obj</a><BR>
 <LI><a href="#[538]">lv_refr_obj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[538]">lv_refr_obj</a><BR>
 <LI><a href="#[61f]">lv_textarea_add_char</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[61e]">lv_textarea_add_text</a><BR>
 <LI><a href="#[72b]">insert_handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[61e]">lv_textarea_add_text</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[8d]">ADC3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[27]">ADC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[188]">AudioTask</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[8f]">BDMA_Channel0_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[90]">BDMA_Channel1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[91]">BDMA_Channel2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[92]">BDMA_Channel3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[93]">BDMA_Channel4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[94]">BDMA_Channel5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[95]">BDMA_Channel6_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[96]">BDMA_Channel7_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[f]">BusFault_Handler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[6e]">CEC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[97]">COMP1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[9d]">CRS_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[5f]">CRYP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[5e]">DCMI_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[7e]">DFSDM1_FLT0_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[7f]">DFSDM1_FLT1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[80]">DFSDM1_FLT2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[81]">DFSDM1_FLT3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[20]">DMA1_Stream0_IRQHandler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[21]">DMA1_Stream1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[22]">DMA1_Stream2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[23]">DMA1_Stream3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[24]">DMA1_Stream4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[25]">DMA1_Stream5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[26]">DMA1_Stream6_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[43]">DMA1_Stream7_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[6a]">DMA2D_IRQHandler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[4c]">DMA2_Stream0_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[4d]">DMA2_Stream1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[50]">DMA2_Stream4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[54]">DMA2_Stream5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[55]">DMA2_Stream6_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[56]">DMA2_Stream7_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[76]">DMAMUX1_OVR_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[8e]">DMAMUX2_OVR_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[12]">DebugMon_Handler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[9e]">ECC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[51]">ETH_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[52]">ETH_WKUP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[1b]">EXTI0_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[3d]">EXTI15_10_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[1c]">EXTI1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[1d]">EXTI2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[1e]">EXTI3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[1f]">EXTI4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[2c]">EXTI9_5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[28]">FDCAN1_IT0_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[2a]">FDCAN1_IT1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[29]">FDCAN2_IT0_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[2b]">FDCAN2_IT1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[53]">FDCAN_CAL_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[19]">FLASH_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[44]">FMC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[61]">FPU_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[2]">GT9147_Init</a> from gt9147.o(.text) referenced 2 times from gt9147.o(.data)
 <LI><a href="#[3]">GT9147_Scan</a> from gt9147.o(.text) referenced 2 times from gt9147.o(.data)
 <LI><a href="#[60]">HASH_RNG_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[7d]">HRTIM1_FLT_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[77]">HRTIM1_Master_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[78]">HRTIM1_TIMA_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[79]">HRTIM1_TIMB_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[7a]">HRTIM1_TIMC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[7b]">HRTIM1_TIMD_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[7c]">HRTIM1_TIME_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[8c]">HSEM1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[d]">HardFault_Handler</a> from context_rvds.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[35]">I2C1_ER_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[34]">I2C1_EV_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[37]">I2C2_ER_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[36]">I2C2_EV_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[59]">I2C3_ER_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[58]">I2C3_EV_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[70]">I2C4_ER_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[6f]">I2C4_EV_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[89]">JPEG_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[6d]">LPTIM1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[98]">LPTIM2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[99]">LPTIM3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[9a]">LPTIM4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[9b]">LPTIM5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[9c]">LPUART1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[69]">LTDC_ER_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[68]">LTDC_IRQHandler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[18b]">LedTask</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[18f]">LvglTask</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[88]">MDIOS_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[87]">MDIOS_WKUP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[8a]">MDMA_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[e]">MemManage_Handler</a> from context_rvds.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[129]">MyFileSystemCloseDirFunCallBack</a> from lvglbsp.o(.text) referenced from lvglbsp.o(.text)
 <LI><a href="#[122]">MyFileSystemCloseFunCallBack</a> from lvglbsp.o(.text) referenced from lvglbsp.o(.text)
 <LI><a href="#[127]">MyFileSystemOpenDirFunCallBack</a> from lvglbsp.o(.text) referenced from lvglbsp.o(.text)
 <LI><a href="#[121]">MyFileSystemOpenFunCallBack</a> from lvglbsp.o(.text) referenced from lvglbsp.o(.text)
 <LI><a href="#[128]">MyFileSystemReadDirFunCallBack</a> from lvglbsp.o(.text) referenced from lvglbsp.o(.text)
 <LI><a href="#[123]">MyFileSystemReadFunCallBack</a> from lvglbsp.o(.text) referenced from lvglbsp.o(.text)
 <LI><a href="#[120]">MyFileSystemReadyFunCallBack</a> from lvglbsp.o(.text) referenced from lvglbsp.o(.text)
 <LI><a href="#[125]">MyFileSystemSeekFunCallBack</a> from lvglbsp.o(.text) referenced from lvglbsp.o(.text)
 <LI><a href="#[126]">MyFileSystemTellFunCallBack</a> from lvglbsp.o(.text) referenced from lvglbsp.o(.text)
 <LI><a href="#[124]">MyFileSystemWriteFunCallBack</a> from lvglbsp.o(.text) referenced from lvglbsp.o(.text)
 <LI><a href="#[c]">NMI_Handler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[73]">OTG_FS_EP1_IN_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[72]">OTG_FS_EP1_OUT_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[75]">OTG_FS_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[74]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[5b]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[5a]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[5d]">OTG_HS_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[5c]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[16]">PVD_AVD_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[13]">PendSV_Handler</a> from context_rvds.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[a4]">QSPI_DMAAbortCplt</a> from stm32h7xx_hal_qspi.o(.text) referenced 2 times from stm32h7xx_hal_qspi.o(.text)
 <LI><a href="#[a6]">QSPI_DMAError</a> from stm32h7xx_hal_qspi.o(.text) referenced from stm32h7xx_hal_qspi.o(.text)
 <LI><a href="#[a7]">QSPI_DMARxCplt</a> from stm32h7xx_hal_qspi.o(.text) referenced from stm32h7xx_hal_qspi.o(.text)
 <LI><a href="#[a5]">QSPI_DMATxCplt</a> from stm32h7xx_hal_qspi.o(.text) referenced from stm32h7xx_hal_qspi.o(.text)
 <LI><a href="#[6c]">QUADSPI_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[1a]">RCC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[3e]">RTC_Alarm_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[18]">RTC_WKUP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[b]">Reset_Handler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[67]">SAI1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[6b]">SAI2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[82]">SAI3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[9f]">SAI4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[c2]">SAI_DMAAbort</a> from stm32h7xx_hal_sai.o(.text) referenced from stm32h7xx_hal_sai.o(.text)
 <LI><a href="#[bf]">SAI_DMAError</a> from stm32h7xx_hal_sai.o(.text) referenced from stm32h7xx_hal_sai.o(.text)
 <LI><a href="#[c1]">SAI_DMARxCplt</a> from stm32h7xx_hal_sai.o(.text) referenced from stm32h7xx_hal_sai.o(.text)
 <LI><a href="#[c0]">SAI_DMARxHalfCplt</a> from stm32h7xx_hal_sai.o(.text) referenced from stm32h7xx_hal_sai.o(.text)
 <LI><a href="#[be]">SAI_DMATxCplt</a> from stm32h7xx_hal_sai.o(.text) referenced from stm32h7xx_hal_sai.o(.text)
 <LI><a href="#[bd]">SAI_DMATxHalfCplt</a> from stm32h7xx_hal_sai.o(.text) referenced from stm32h7xx_hal_sai.o(.text)
 <LI><a href="#[bb]">SAI_Receive_IT16Bit</a> from stm32h7xx_hal_sai.o(.text) referenced from stm32h7xx_hal_sai.o(.text)
 <LI><a href="#[ba]">SAI_Receive_IT32Bit</a> from stm32h7xx_hal_sai.o(.text) referenced from stm32h7xx_hal_sai.o(.text)
 <LI><a href="#[bc]">SAI_Receive_IT8Bit</a> from stm32h7xx_hal_sai.o(.text) referenced from stm32h7xx_hal_sai.o(.text)
 <LI><a href="#[b8]">SAI_Transmit_IT16Bit</a> from stm32h7xx_hal_sai.o(.text) referenced from stm32h7xx_hal_sai.o(.text)
 <LI><a href="#[b7]">SAI_Transmit_IT32Bit</a> from stm32h7xx_hal_sai.o(.text) referenced from stm32h7xx_hal_sai.o(.text)
 <LI><a href="#[b9]">SAI_Transmit_IT8Bit</a> from stm32h7xx_hal_sai.o(.text) referenced from stm32h7xx_hal_sai.o(.text)
 <LI><a href="#[45]">SDMMC1_IRQHandler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[8b]">SDMMC2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[b4]">SDRAM_DMACplt</a> from stm32h7xx_hal_sdram.o(.text) referenced from stm32h7xx_hal_sdram.o(.text)
 <LI><a href="#[b5]">SDRAM_DMACpltProt</a> from stm32h7xx_hal_sdram.o(.text) referenced from stm32h7xx_hal_sdram.o(.text)
 <LI><a href="#[b6]">SDRAM_DMAError</a> from stm32h7xx_hal_sdram.o(.text) referenced from stm32h7xx_hal_sdram.o(.text)
 <LI><a href="#[ab]">SD_initialize</a> from sd_diskio.o(.text) referenced from sd_diskio.o(.constdata)
 <LI><a href="#[af]">SD_ioctl</a> from sd_diskio.o(.text) referenced from sd_diskio.o(.constdata)
 <LI><a href="#[ad]">SD_read</a> from sd_diskio.o(.text) referenced from sd_diskio.o(.constdata)
 <LI><a href="#[ac]">SD_status</a> from sd_diskio.o(.text) referenced from sd_diskio.o(.constdata)
 <LI><a href="#[ae]">SD_write</a> from sd_diskio.o(.text) referenced from sd_diskio.o(.constdata)
 <LI><a href="#[71]">SPDIF_RX_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[38]">SPI1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[39]">SPI2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[47]">SPI3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[64]">SPI4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[65]">SPI5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[66]">SPI6_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[11]">SVC_Handler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[83]">SWPMI1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[14]">SysTick_Handler</a> from board.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[a2]">SystemInit</a> from system_stm32h7xx.o(.text) referenced from startup_stm32h750xx.o(.text)
 <LI><a href="#[17]">TAMP_STAMP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[84]">TIM15_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[85]">TIM16_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[86]">TIM17_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[2d]">TIM1_BRK_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[30]">TIM1_CC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[2f]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[2e]">TIM1_UP_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[31]">TIM2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[32]">TIM3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[33]">TIM4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[46]">TIM5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[4a]">TIM6_DAC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[4b]">TIM7_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[3f]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[42]">TIM8_CC_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[41]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[40]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[18e]">Touch_scan</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[48]">UART4_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[49]">UART5_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[62]">UART7_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[63]">UART8_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[3a]">USART1_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[3b]">USART2_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[3c]">USART3_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[57]">USART6_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[10]">UsageFault_Handler</a> from stm32h7xx_it.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[a0]">WAKEUP_PIN_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[15]">WWDG_IRQHandler</a> from startup_stm32h750xx.o(.text) referenced from startup_stm32h750xx.o(RESET)
 <LI><a href="#[a3]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32h750xx.o(.text)
 <LI><a href="#[104]">_lv_disp_refr_timer</a> from lv_refr.o(.text) referenced from lv_hal_disp.o(.text)
 <LI><a href="#[d9]">_lv_ll_get_head</a> from lv_ll.o(.text) referenced 2 times from lv_group.o(.text)
 <LI><a href="#[d8]">_lv_ll_get_next</a> from lv_ll.o(.text) referenced 2 times from lv_group.o(.text)
 <LI><a href="#[d6]">_lv_ll_get_prev</a> from lv_ll.o(.text) referenced 2 times from lv_group.o(.text)
 <LI><a href="#[d7]">_lv_ll_get_tail</a> from lv_ll.o(.text) referenced 2 times from lv_group.o(.text)
 <LI><a href="#[10f]">_out_buffer</a> from lv_printf.o(.text) referenced from lv_printf.o(.text)
 <LI><a href="#[10e]">_out_null</a> from lv_printf.o(.text) referenced from lv_printf.o(.text)
 <LI><a href="#[a9]">_thread_exit</a> from thread.o(.text) referenced from thread.o(.text)
 <LI><a href="#[aa]">_thread_timeout</a> from thread.o(.text) referenced from thread.o(.text)
 <LI><a href="#[10c]">anim_timer</a> from lv_anim.o(.text) referenced from lv_anim.o(.text)
 <LI><a href="#[fb]">arc_anim_end_angle</a> from lv_spinner.o(.text) referenced from lv_spinner.o(.text)
 <LI><a href="#[fd]">arc_anim_start_angle</a> from lv_spinner.o(.text) referenced from lv_spinner.o(.text)
 <LI><a href="#[cc]">birthday_event_cb</a> from lv_demo_widgets.o(.text) referenced from lv_demo_widgets.o(.text)
 <LI><a href="#[fe]">btns_value_changed_event_cb</a> from lv_tabview.o(.text) referenced from lv_tabview.o(.text)
 <LI><a href="#[ca]">calendar_event_cb</a> from lv_demo_widgets.o(.text) referenced from lv_demo_widgets.o(.text)
 <LI><a href="#[c4]">chart_event_cb</a> from lv_demo_widgets.o(.text) referenced from lv_demo_widgets.o(.text)
 <LI><a href="#[e4]">color_blend_true_color_additive</a> from lv_draw_blend.o(.text) referenced from lv_draw_blend.o(.text)
 <LI><a href="#[e5]">color_blend_true_color_subtractive</a> from lv_draw_blend.o(.text) referenced from lv_draw_blend.o(.text)
 <LI><a href="#[c3]">color_changer_anim_cb</a> from lv_demo_widgets.o(.text) referenced from lv_demo_widgets.o(.text)
 <LI><a href="#[cf]">color_changer_event_cb</a> from lv_demo_widgets.o(.text) referenced from lv_demo_widgets.o(.text)
 <LI><a href="#[ce]">color_event_cb</a> from lv_demo_widgets.o(.text) referenced from lv_demo_widgets.o(.text)
 <LI><a href="#[ff]">cont_scroll_end_event_cb</a> from lv_tabview.o(.text) referenced from lv_tabview.o(.text)
 <LI><a href="#[11a]">cursor_blink_anim_cb</a> from lv_textarea.o(.text) referenced 4 times from lv_textarea.o(.text)
 <LI><a href="#[f4]">dark_color_filter_cb</a> from lv_theme_default.o(.text) referenced from lv_theme_default.o(.text)
 <LI><a href="#[f7]">draw_part_begin_event_cb</a> from lv_calendar.o(.text) referenced from lv_calendar.o(.text)
 <LI><a href="#[e1]">fade_anim_cb</a> from lv_obj_style.o(.text) referenced from lv_obj_style.o(.text)
 <LI><a href="#[e2]">fade_in_anim_ready</a> from lv_obj_style.o(.text) referenced from lv_obj_style.o(.text)
 <LI><a href="#[f1]">flex_update</a> from lv_flex.o(.text) referenced from lv_flex.o(.text)
 <LI><a href="#[f5]">grey_filter_cb</a> from lv_theme_default.o(.text) referenced from lv_theme_default.o(.text)
 <LI><a href="#[f2]">grid_update</a> from lv_grid.o(.text) referenced from lv_grid.o(.text)
 <LI><a href="#[105]">invalidate_layout_cb</a> from lv_hal_disp.o(.text) referenced from lv_hal_disp.o(.text)
 <LI><a href="#[102]">kern_pair_16_compare</a> from lv_font_fmt_txt.o(.text) referenced from lv_font_fmt_txt.o(.text)
 <LI><a href="#[103]">kern_pair_8_compare</a> from lv_font_fmt_txt.o(.text) referenced from lv_font_fmt_txt.o(.text)
 <LI><a href="#[fc]">lv_anim_path_ease_in_out</a> from lv_anim.o(.text) referenced from lv_spinner.o(.text)
 <LI><a href="#[dd]">lv_anim_path_ease_out</a> from lv_anim.o(.text) referenced 2 times from lv_obj_scroll.o(.text)
 <LI><a href="#[f3]">lv_anim_path_linear</a> from lv_anim.o(.text) referenced 3 times from lv_theme_default.o(.text)
 <LI><a href="#[11b]">lv_anim_path_step</a> from lv_anim.o(.text) referenced 4 times from lv_textarea.o(.text)
 <LI><a href="#[146]">lv_arc_constructor</a> from lv_arc.o(.text) referenced from lv_arc.o(.constdata)
 <LI><a href="#[147]">lv_arc_event</a> from lv_arc.o(.text) referenced from lv_arc.o(.constdata)
 <LI><a href="#[f0]">lv_area_get_height</a> from lv_flex.o(.text) referenced 2 times from lv_flex.o(.text)
 <LI><a href="#[ef]">lv_area_get_width</a> from lv_flex.o(.text) referenced 2 times from lv_flex.o(.text)
 <LI><a href="#[ee]">lv_area_set_height</a> from lv_area.o(.text) referenced from lv_flex.o(.text)
 <LI><a href="#[ed]">lv_area_set_width</a> from lv_area.o(.text) referenced from lv_flex.o(.text)
 <LI><a href="#[10d]">lv_async_timer_cb</a> from lv_async.o(.text) referenced from lv_async.o(.text)
 <LI><a href="#[110]">lv_bar_anim</a> from lv_bar.o(.text) referenced from lv_bar.o(.text)
 <LI><a href="#[111]">lv_bar_anim_ready</a> from lv_bar.o(.text) referenced from lv_bar.o(.text)
 <LI><a href="#[148]">lv_bar_constructor</a> from lv_bar.o(.text) referenced from lv_bar.o(.constdata)
 <LI><a href="#[149]">lv_bar_destructor</a> from lv_bar.o(.text) referenced from lv_bar.o(.constdata)
 <LI><a href="#[14a]">lv_bar_event</a> from lv_bar.o(.text) referenced from lv_bar.o(.constdata)
 <LI><a href="#[14b]">lv_btn_constructor</a> from lv_btn.o(.text) referenced from lv_btn.o(.constdata)
 <LI><a href="#[14c]">lv_btnmatrix_constructor</a> from lv_btnmatrix.o(.text) referenced from lv_btnmatrix.o(.constdata)
 <LI><a href="#[14d]">lv_btnmatrix_destructor</a> from lv_btnmatrix.o(.text) referenced from lv_btnmatrix.o(.constdata)
 <LI><a href="#[14e]">lv_btnmatrix_event</a> from lv_btnmatrix.o(.text) referenced from lv_btnmatrix.o(.constdata)
 <LI><a href="#[12d]">lv_calendar_constructor</a> from lv_calendar.o(.text) referenced from lv_calendar.o(.constdata)
 <LI><a href="#[130]">lv_chart_constructor</a> from lv_chart.o(.text) referenced from lv_chart.o(.constdata)
 <LI><a href="#[131]">lv_chart_destructor</a> from lv_chart.o(.text) referenced from lv_chart.o(.constdata)
 <LI><a href="#[132]">lv_chart_event</a> from lv_chart.o(.text) referenced from lv_chart.o(.constdata)
 <LI><a href="#[14f]">lv_checkbox_constructor</a> from lv_checkbox.o(.text) referenced from lv_checkbox.o(.constdata)
 <LI><a href="#[150]">lv_checkbox_destructor</a> from lv_checkbox.o(.text) referenced from lv_checkbox.o(.constdata)
 <LI><a href="#[151]">lv_checkbox_event</a> from lv_checkbox.o(.text) referenced from lv_checkbox.o(.constdata)
 <LI><a href="#[133]">lv_colorwheel_constructor</a> from lv_colorwheel.o(.text) referenced from lv_colorwheel.o(.constdata)
 <LI><a href="#[134]">lv_colorwheel_event</a> from lv_colorwheel.o(.text) referenced from lv_colorwheel.o(.constdata)
 <LI><a href="#[e7]">lv_draw_mask_angle</a> from lv_draw_mask.o(.text) referenced from lv_draw_mask.o(.text)
 <LI><a href="#[e9]">lv_draw_mask_fade</a> from lv_draw_mask.o(.text) referenced from lv_draw_mask.o(.text)
 <LI><a href="#[e6]">lv_draw_mask_line</a> from lv_draw_mask.o(.text) referenced from lv_draw_mask.o(.text)
 <LI><a href="#[ea]">lv_draw_mask_map</a> from lv_draw_mask.o(.text) referenced from lv_draw_mask.o(.text)
 <LI><a href="#[e8]">lv_draw_mask_radius</a> from lv_draw_mask.o(.text) referenced from lv_draw_mask.o(.text)
 <LI><a href="#[152]">lv_dropdown_constructor</a> from lv_dropdown.o(.text) referenced from lv_dropdown.o(.constdata)
 <LI><a href="#[153]">lv_dropdown_destructor</a> from lv_dropdown.o(.text) referenced from lv_dropdown.o(.constdata)
 <LI><a href="#[154]">lv_dropdown_event</a> from lv_dropdown.o(.text) referenced from lv_dropdown.o(.constdata)
 <LI><a href="#[157]">lv_dropdown_list_event</a> from lv_dropdown.o(.text) referenced from lv_dropdown.o(.constdata)
 <LI><a href="#[155]">lv_dropdownlist_constructor</a> from lv_dropdown.o(.text) referenced from lv_dropdown.o(.constdata)
 <LI><a href="#[156]">lv_dropdownlist_destructor</a> from lv_dropdown.o(.text) referenced from lv_dropdown.o(.constdata)
 <LI><a href="#[145]">lv_font_get_bitmap_fmt_txt</a> from lv_font_fmt_txt.o(.text) referenced from lv_font_montserrat_16.o(.constdata)
 <LI><a href="#[144]">lv_font_get_glyph_dsc_fmt_txt</a> from lv_font_fmt_txt.o(.text) referenced from lv_font_montserrat_16.o(.constdata)
 <LI><a href="#[158]">lv_img_constructor</a> from lv_img.o(.text) referenced from lv_img.o(.constdata)
 <LI><a href="#[580]">lv_img_decoder_built_in_close</a> from lv_img_decoder.o(.text) referenced from lv_img_decoder.o(.text)
 <LI><a href="#[588]">lv_img_decoder_built_in_info</a> from lv_img_decoder.o(.text) referenced from lv_img_decoder.o(.text)
 <LI><a href="#[585]">lv_img_decoder_built_in_open</a> from lv_img_decoder.o(.text) referenced from lv_img_decoder.o(.text)
 <LI><a href="#[582]">lv_img_decoder_built_in_read_line</a> from lv_img_decoder.o(.text) referenced from lv_img_decoder.o(.text)
 <LI><a href="#[159]">lv_img_destructor</a> from lv_img.o(.text) referenced from lv_img.o(.constdata)
 <LI><a href="#[15a]">lv_img_event</a> from lv_img.o(.text) referenced from lv_img.o(.constdata)
 <LI><a href="#[10b]">lv_indev_read_timer_cb</a> from lv_indev.o(.text) referenced from lv_hal_indev.o(.text)
 <LI><a href="#[135]">lv_keyboard_constructor</a> from lv_keyboard.o(.text) referenced from lv_keyboard.o(.constdata)
 <LI><a href="#[61d]">lv_keyboard_def_event_cb</a> from lv_keyboard.o(.text) referenced from lv_keyboard.o(.text)
 <LI><a href="#[15b]">lv_label_constructor</a> from lv_label.o(.text) referenced from lv_label.o(.constdata)
 <LI><a href="#[15c]">lv_label_destructor</a> from lv_label.o(.text) referenced from lv_label.o(.constdata)
 <LI><a href="#[15d]">lv_label_event</a> from lv_label.o(.text) referenced from lv_label.o(.constdata)
 <LI><a href="#[136]">lv_led_constructor</a> from lv_led.o(.text) referenced from lv_led.o(.constdata)
 <LI><a href="#[137]">lv_led_event</a> from lv_led.o(.text) referenced from lv_led.o(.constdata)
 <LI><a href="#[15e]">lv_line_constructor</a> from lv_line.o(.text) referenced from lv_line.o(.constdata)
 <LI><a href="#[15f]">lv_line_event</a> from lv_line.o(.text) referenced from lv_line.o(.constdata)
 <LI><a href="#[138]">lv_meter_constructor</a> from lv_meter.o(.text) referenced from lv_meter.o(.constdata)
 <LI><a href="#[139]">lv_meter_destructor</a> from lv_meter.o(.text) referenced from lv_meter.o(.constdata)
 <LI><a href="#[13a]">lv_meter_event</a> from lv_meter.o(.text) referenced from lv_meter.o(.constdata)
 <LI><a href="#[12a]">lv_obj_constructor</a> from lv_obj.o(.text) referenced from lv_obj.o(.constdata)
 <LI><a href="#[52b]">lv_obj_del_anim_ready_cb</a> from lv_obj_tree.o(.text) referenced from lv_obj_tree.o(.text)
 <LI><a href="#[e3]">lv_obj_del_async_cb</a> from lv_obj_tree.o(.text) referenced from lv_obj_tree.o(.text)
 <LI><a href="#[12b]">lv_obj_destructor</a> from lv_obj.o(.text) referenced from lv_obj.o(.constdata)
 <LI><a href="#[12c]">lv_obj_event</a> from lv_obj.o(.text) referenced from lv_obj.o(.constdata)
 <LI><a href="#[ec]">lv_obj_get_height</a> from lv_obj_pos.o(.text) referenced from lv_flex.o(.text)
 <LI><a href="#[eb]">lv_obj_get_width</a> from lv_obj_pos.o(.text) referenced from lv_flex.o(.text)
 <LI><a href="#[160]">lv_roller_constructor</a> from lv_roller.o(.text) referenced from lv_roller.o(.constdata)
 <LI><a href="#[161]">lv_roller_event</a> from lv_roller.o(.text) referenced from lv_roller.o(.constdata)
 <LI><a href="#[162]">lv_roller_label_event</a> from lv_roller.o(.text) referenced from lv_roller.o(.constdata)
 <LI><a href="#[163]">lv_slider_constructor</a> from lv_slider.o(.text) referenced from lv_slider.o(.constdata)
 <LI><a href="#[164]">lv_slider_event</a> from lv_slider.o(.text) referenced from lv_slider.o(.constdata)
 <LI><a href="#[13b]">lv_spinbox_constructor</a> from lv_spinbox.o(.text) referenced from lv_spinbox.o(.constdata)
 <LI><a href="#[13c]">lv_spinbox_event</a> from lv_spinbox.o(.text) referenced from lv_spinbox.o(.constdata)
 <LI><a href="#[13d]">lv_spinner_constructor</a> from lv_spinner.o(.text) referenced from lv_spinner.o(.constdata)
 <LI><a href="#[118]">lv_switch_anim_exec_cb</a> from lv_switch.o(.text) referenced from lv_switch.o(.text)
 <LI><a href="#[119]">lv_switch_anim_ready</a> from lv_switch.o(.text) referenced from lv_switch.o(.text)
 <LI><a href="#[165]">lv_switch_constructor</a> from lv_switch.o(.text) referenced from lv_switch.o(.constdata)
 <LI><a href="#[166]">lv_switch_destructor</a> from lv_switch.o(.text) referenced from lv_switch.o(.constdata)
 <LI><a href="#[167]">lv_switch_event</a> from lv_switch.o(.text) referenced from lv_switch.o(.constdata)
 <LI><a href="#[168]">lv_table_constructor</a> from lv_table.o(.text) referenced from lv_table.o(.constdata)
 <LI><a href="#[169]">lv_table_destructor</a> from lv_table.o(.text) referenced from lv_table.o(.constdata)
 <LI><a href="#[16a]">lv_table_event</a> from lv_table.o(.text) referenced from lv_table.o(.constdata)
 <LI><a href="#[13e]">lv_tabview_constructor</a> from lv_tabview.o(.text) referenced from lv_tabview.o(.constdata)
 <LI><a href="#[13f]">lv_tabview_destructor</a> from lv_tabview.o(.text) referenced from lv_tabview.o(.constdata)
 <LI><a href="#[140]">lv_tabview_event</a> from lv_tabview.o(.text) referenced from lv_tabview.o(.constdata)
 <LI><a href="#[16b]">lv_textarea_constructor</a> from lv_textarea.o(.text) referenced from lv_textarea.o(.constdata)
 <LI><a href="#[16c]">lv_textarea_destructor</a> from lv_textarea.o(.text) referenced from lv_textarea.o(.constdata)
 <LI><a href="#[16d]">lv_textarea_event</a> from lv_textarea.o(.text) referenced from lv_textarea.o(.constdata)
 <LI><a href="#[141]">lv_tileview_constructor</a> from lv_tileview.o(.text) referenced from lv_tileview.o(.constdata)
 <LI><a href="#[142]">lv_tileview_tile_constructor</a> from lv_tileview.o(.text) referenced from lv_tileview.o(.constdata)
 <LI><a href="#[7]">lv_txt_unicode_to_utf8</a> from lv_txt.o(.text) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[6]">lv_txt_utf8_get_byte_id</a> from lv_txt.o(.text) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[9]">lv_txt_utf8_get_char_id</a> from lv_txt.o(.text) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[a]">lv_txt_utf8_get_length</a> from lv_txt.o(.text) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[5]">lv_txt_utf8_next</a> from lv_txt.o(.text) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[8]">lv_txt_utf8_prev</a> from lv_txt.o(.text) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[4]">lv_txt_utf8_size</a> from lv_txt.o(.text) referenced 2 times from lv_txt.o(.data)
 <LI><a href="#[143]">lv_win_constructor</a> from lv_win.o(.text) referenced from lv_win.o(.constdata)
 <LI><a href="#[a1]">main</a> from components.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[260]">main_thread_entry</a> from components.o(.text) referenced 3 times from components.o(.text)
 <LI><a href="#[c5]">meter1_indic1_anim_cb</a> from lv_demo_widgets.o(.text) referenced from lv_demo_widgets.o(.text)
 <LI><a href="#[c6]">meter1_indic2_anim_cb</a> from lv_demo_widgets.o(.text) referenced from lv_demo_widgets.o(.text)
 <LI><a href="#[c7]">meter1_indic3_anim_cb</a> from lv_demo_widgets.o(.text) referenced from lv_demo_widgets.o(.text)
 <LI><a href="#[c8]">meter2_timer_cb</a> from lv_demo_widgets.o(.text) referenced from lv_demo_widgets.o(.text)
 <LI><a href="#[c9]">meter3_anim_cb</a> from lv_demo_widgets.o(.text) referenced from lv_demo_widgets.o(.text)
 <LI><a href="#[f8]">month_event_cb</a> from lv_calendar_header_arrow.o(.text) referenced 2 times from lv_calendar_header_arrow.o(.text)
 <LI><a href="#[11f]">my_cleanDcache</a> from lvglbsp.o(.text) referenced from lvglbsp.o(.text)
 <LI><a href="#[12e]">my_constructor</a> from lv_calendar_header_arrow.o(.text) referenced 2 times from lv_calendar_header_arrow.o(.constdata)
 <LI><a href="#[11e]">my_flush_cb</a> from lvglbsp.o(.text) referenced from lvglbsp.o(.text)
 <LI><a href="#[740]">my_input_read</a> from lvglbsp.o(.text) referenced from lvglbsp.o(.text)
 <LI><a href="#[d5]">opa_scale_anim</a> from lv_disp.o(.text) referenced from lv_disp.o(.text)
 <LI><a href="#[11c]">pwd_char_hider_anim</a> from lv_textarea.o(.text) referenced 2 times from lv_textarea.o(.text)
 <LI><a href="#[11d]">pwd_char_hider_anim_ready</a> from lv_textarea.o(.text) referenced 2 times from lv_textarea.o(.text)
 <LI><a href="#[a8]">rt_thread_idle_entry</a> from idle.o(.text) referenced from idle.o(.text)
 <LI><a href="#[b2]">rti_board_end</a> from components.o(.text) referenced from components.o(.rti_fn.1.end)
 <LI><a href="#[b1]">rti_board_start</a> from components.o(.text) referenced from components.o(.rti_fn.0.end)
 <LI><a href="#[b3]">rti_end</a> from components.o(.text) referenced from components.o(.rti_fn.6.end)
 <LI><a href="#[b0]">rti_start</a> from components.o(.text) referenced from components.o(.rti_fn.0)
 <LI><a href="#[d2]">scr_anim_ready</a> from lv_disp.o(.text) referenced from lv_disp.o(.text)
 <LI><a href="#[d1]">scr_load_anim_start</a> from lv_disp.o(.text) referenced from lv_disp.o(.text)
 <LI><a href="#[dc]">scroll_anim_ready_cb</a> from lv_obj_scroll.o(.text) referenced 2 times from lv_obj_scroll.o(.text)
 <LI><a href="#[da]">scroll_x_anim</a> from lv_obj_scroll.o(.text) referenced 2 times from lv_obj_scroll.o(.text)
 <LI><a href="#[db]">scroll_y_anim</a> from lv_obj_scroll.o(.text) referenced 2 times from lv_obj_scroll.o(.text)
 <LI><a href="#[114]">set_ofs_x_anim</a> from lv_label.o(.text) referenced 3 times from lv_label.o(.text)
 <LI><a href="#[115]">set_ofs_y_anim</a> from lv_label.o(.text) referenced 3 times from lv_label.o(.text)
 <LI><a href="#[108]">set_px_cb_alpha1</a> from lv_hal_disp.o(.text) referenced from lv_hal_disp.o(.text)
 <LI><a href="#[106]">set_px_cb_alpha2</a> from lv_hal_disp.o(.text) referenced from lv_hal_disp.o(.text)
 <LI><a href="#[109]">set_px_cb_alpha4</a> from lv_hal_disp.o(.text) referenced from lv_hal_disp.o(.text)
 <LI><a href="#[10a]">set_px_cb_alpha8</a> from lv_hal_disp.o(.text) referenced from lv_hal_disp.o(.text)
 <LI><a href="#[107]">set_px_true_color_alpha</a> from lv_hal_disp.o(.text) referenced from lv_hal_disp.o(.text)
 <LI><a href="#[d3]">set_x_anim</a> from lv_disp.o(.text) referenced from lv_disp.o(.text)
 <LI><a href="#[d4]">set_y_anim</a> from lv_disp.o(.text) referenced 3 times from lv_disp.o(.text)
 <LI><a href="#[d0]">shop_chart_event_cb</a> from lv_demo_widgets.o(.text) referenced from lv_demo_widgets.o(.text)
 <LI><a href="#[cd]">slider_event_cb</a> from lv_demo_widgets.o(.text) referenced from lv_demo_widgets.o(.text)
 <LI><a href="#[cb]">ta_event_cb</a> from lv_demo_widgets.o(.text) referenced from lv_demo_widgets.o(.text)
 <LI><a href="#[f6]">theme_apply</a> from lv_theme_default.o(.text) referenced from lv_theme_default.o(.text)
 <LI><a href="#[100]">tileview_event_cb</a> from lv_tileview.o(.text) referenced from lv_tileview.o(.text)
 <LI><a href="#[de]">trans_anim_cb</a> from lv_obj_style.o(.text) referenced from lv_obj_style.o(.text)
 <LI><a href="#[e0]">trans_anim_ready_cb</a> from lv_obj_style.o(.text) referenced from lv_obj_style.o(.text)
 <LI><a href="#[df]">trans_anim_start_cb</a> from lv_obj_style.o(.text) referenced from lv_obj_style.o(.text)
 <LI><a href="#[101]">unicode_list_compare</a> from lv_font_fmt_txt.o(.text) referenced from lv_font_fmt_txt.o(.text)
 <LI><a href="#[f9]">year_event_cb</a> from lv_calendar_header_dropdown.o(.text) referenced from lv_calendar_header_dropdown.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[a3]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(.text)
</UL>
<P><STRONG><a name="[747]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[16e]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2e5]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[748]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[749]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[74a]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[74b]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[74c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[74d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[b]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>BDMA_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>BDMA_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>BDMA_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>BDMA_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>BDMA_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>BDMA_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>BDMA_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>BDMA_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[97]"></a>COMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>DFSDM1_FLT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>DFSDM1_FLT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>DFSDM1_FLT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>DFSDM1_FLT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>DMAMUX1_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[8e]"></a>DMAMUX2_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>ECC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>FDCAN1_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>FDCAN1_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>FDCAN2_IT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>FDCAN2_IT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>FDCAN_CAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>HRTIM1_FLT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>HRTIM1_Master_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>HRTIM1_TIMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>HRTIM1_TIMB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>HRTIM1_TIMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>HRTIM1_TIMD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>HRTIM1_TIME_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>HSEM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>JPEG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[98]"></a>LPTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>LPTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>LPTIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>LPTIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>MDIOS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>MDIOS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>MDMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>OTG_FS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>OTG_FS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>PVD_AVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>SAI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>SAI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>SDMMC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>SWPMI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>WAKEUP_PIN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32h750xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[170]"></a>MX_QUADSPI_Init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
</UL>

<P><STRONG><a name="[172]"></a>W25QXX_WriteEnable</STRONG> (Thumb, 80 bytes, Stack size 64 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = W25QXX_WriteEnable &rArr; HAL_QSPI_Command &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ChipErase
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_SectorErase
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_NoCheck
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_PageProgram
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_EnterQPIMode
</UL>

<P><STRONG><a name="[174]"></a>W25QXX_WriteSR</STRONG> (Thumb, 94 bytes, Stack size 72 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>

<P><STRONG><a name="[176]"></a>W25QXX_ReadSR</STRONG> (Thumb, 128 bytes, Stack size 64 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = W25QXX_ReadSR &rArr; HAL_QSPI_Receive &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_EnterQPIMode
</UL>

<P><STRONG><a name="[178]"></a>W25QXX_EnterQPIMode</STRONG> (Thumb, 240 bytes, Stack size 152 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = W25QXX_EnterQPIMode &rArr; W25QXX_ReadSR &rArr; HAL_QSPI_Receive &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadSR
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WriteEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>

<P><STRONG><a name="[179]"></a>W25QXX_WaitBusy</STRONG> (Thumb, 126 bytes, Stack size 96 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = W25QXX_WaitBusy &rArr; HAL_QSPI_Receive &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ChipErase
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_SectorErase
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_NoCheck
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_PageProgram
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Reset
</UL>

<P><STRONG><a name="[17a]"></a>W25QXX_Reset</STRONG> (Thumb, 102 bytes, Stack size 64 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WaitBusy
</UL>

<P><STRONG><a name="[17b]"></a>W25QXX_ExitQPIMode</STRONG> (Thumb, 62 bytes, Stack size 64 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>

<P><STRONG><a name="[17c]"></a>W25QXX_Init</STRONG> (Thumb, 198 bytes, Stack size 72 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = W25QXX_Init &rArr; W25QXX_EnterQPIMode &rArr; W25QXX_ReadSR &rArr; HAL_QSPI_Receive &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspInit
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WaitBusy
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_EnterQPIMode
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[17e]"></a>W25QXX_MftrDeviceID</STRONG> (Thumb, 122 bytes, Stack size 72 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>

<P><STRONG><a name="[17f]"></a>W25QXX_UniqueID</STRONG> (Thumb, 98 bytes, Stack size 64 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>

<P><STRONG><a name="[180]"></a>W25QXX_Read</STRONG> (Thumb, 116 bytes, Stack size 72 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
</UL>

<P><STRONG><a name="[181]"></a>W25QXX_PageProgram</STRONG> (Thumb, 138 bytes, Stack size 64 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WaitBusy
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WriteEnable
</UL>

<P><STRONG><a name="[182]"></a>W25QXX_Write_NoCheck</STRONG> (Thumb, 184 bytes, Stack size 96 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WaitBusy
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WriteEnable
</UL>

<P><STRONG><a name="[183]"></a>W25QXX_SectorErase</STRONG> (Thumb, 90 bytes, Stack size 64 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WaitBusy
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WriteEnable
</UL>

<P><STRONG><a name="[184]"></a>W25QXX_Write</STRONG> (Thumb, 724 bytes, Stack size 112 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WaitBusy
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WriteEnable
</UL>

<P><STRONG><a name="[185]"></a>W25QXX_ChipErase</STRONG> (Thumb, 88 bytes, Stack size 64 bytes, w25qxx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WaitBusy
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WriteEnable
</UL>

<P><STRONG><a name="[186]"></a>W25Q_Memory_Mapped_Enable</STRONG> (Thumb, 64 bytes, Stack size 80 bytes, w25qxx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = W25Q_Memory_Mapped_Enable &rArr; HAL_QSPI_MemoryMapped &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[188]"></a>AudioTask</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1520<LI>Call Chain = AudioTask &rArr; AudioPlayer &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_mdelay
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayer (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[18b]"></a>LedTask</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LedTask &rArr; rt_thread_mdelay &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_mdelay
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[18e]"></a>Touch_scan</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Touch_scan &rArr; GT9147_Init &rArr; CT_IIC_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_mdelay
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Scan (via Veneer)
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[18f]"></a>LvglTask</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = LvglTask &rArr; lv_demo_widgets &rArr; profile_create &rArr; lv_textarea_set_password_mode &rArr; pwd_char_hider &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_mdelay
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler (via Veneer)
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init (via Veneer)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets (via Veneer)
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LvgBspInit (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[194]"></a>$Super$$main</STRONG> (Thumb, 614 bytes, Stack size 56 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 896<LI>Call Chain = $Super$$main &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_Memory_Mapped_Enable
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_create
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SDMMC1_SD_Init (via Veneer)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SAI1_Init (via Veneer)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init (via Veneer)
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FATFS_Init (via Veneer)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Fill (via Veneer)
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MPU_Enable
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MPU_Disable
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MPU_ConfigRegion
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_thread_entry
</UL>

<P><STRONG><a name="[1b0]"></a>Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_MspInit (via Veneer)
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI1_Config (via Veneer)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SAI1_Init (via Veneer)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init (via Veneer)
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[1a9]"></a>SystemClock_Config</STRONG> (Thumb, 222 bytes, Stack size 320 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = SystemClock_Config &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_board_init
</UL>

<P><STRONG><a name="[19a]"></a>MX_GPIO_Init</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[19b]"></a>MX_DMA_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MX_DMA_Init &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[19e]"></a>MX_DMA2D_Init</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dma2d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MX_DMA2D_Init &rArr; HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init (via Veneer)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer (via Veneer)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[2f7]"></a>HAL_DMA2D_MspInit</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, dma2d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init (via Veneer)
</UL>

<P><STRONG><a name="[2fb]"></a>HAL_DMA2D_MspDeInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, dma2d.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit (via Veneer)
</UL>

<P><STRONG><a name="[73c]"></a>_DMA2D_Copy</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, dma2d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _DMA2D_Copy
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_flush_cb (via Veneer)
</UL>

<P><STRONG><a name="[74e]"></a>LCD_FillRec</STRONG> (Thumb, 162 bytes, Stack size 28 bytes, dma2d.o(.text), UNUSED)

<P><STRONG><a name="[19d]"></a>MX_FMC_Init</STRONG> (Thumb, 208 bytes, Stack size 104 bytes, fmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = MX_FMC_Init &rArr; HAL_SDRAM_Init &rArr; HAL_SDRAM_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SetAutoRefreshNumber (via Veneer)
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand (via Veneer)
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate (via Veneer)
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init (via Veneer)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[1b6]"></a>HAL_SDRAM_MspInit</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, fmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_SDRAM_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init (via Veneer)
</UL>

<P><STRONG><a name="[1b7]"></a>HAL_SDRAM_MspDeInit</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, fmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_DeInit (via Veneer)
</UL>

<P><STRONG><a name="[17d]"></a>HAL_QSPI_MspInit</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, quadspi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_QSPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>

<P><STRONG><a name="[1b9]"></a>HAL_QSPI_MspDeInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, quadspi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_DeInit
</UL>

<P><STRONG><a name="[c]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, stm32h7xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DMA1_Stream0_IRQHandler &rArr; rt_mq_send_wait &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_send_wait
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SDMMC1_IRQHandler &rArr; HAL_SD_IRQHandler &rArr; SDMMC_CmdStopTransfer &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>LTDC_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LTDC_IRQHandler &rArr; HAL_LTDC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32h7xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_flush_ready (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[1bf]"></a>HAL_MspInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32h7xx_hal_msp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1c0]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[198]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspInit (via Veneer)
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit (via Veneer)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[199]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspInit (via Veneer)
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit (via Veneer)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[2ee]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspDeInit (via Veneer)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspDeInit (via Veneer)
</UL>

<P><STRONG><a name="[74f]"></a>HAL_NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[1f3]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[195]"></a>HAL_MPU_Disable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[197]"></a>HAL_MPU_Enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[196]"></a>HAL_MPU_ConfigRegion</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32h7xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_MPU_ConfigRegion
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[750]"></a>HAL_NVIC_GetPriorityGrouping</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[751]"></a>HAL_NVIC_GetPriority</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[752]"></a>HAL_NVIC_SetPendingIRQ</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[753]"></a>HAL_NVIC_GetPendingIRQ</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[754]"></a>HAL_NVIC_ClearPendingIRQ</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[755]"></a>HAL_NVIC_GetActive</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[756]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[1c2]"></a>HAL_SYSTICK_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>

<P><STRONG><a name="[1c1]"></a>HAL_SYSTICK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>

<P><STRONG><a name="[757]"></a>HAL_GetCurrentCPUID</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[1c3]"></a>HAL_RCC_DeInit</STRONG> (Thumb, 484 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[1ac]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1530 bytes, Stack size 40 bytes, stm32h7xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetREVID
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1c7]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 430 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD1SysClockFreq
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1ad]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 618 bytes, Stack size 40 bytes, stm32h7xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[1c8]"></a>HAL_RCC_MCOConfig</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>

<P><STRONG><a name="[758]"></a>HAL_RCC_EnableCSS</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)

<P><STRONG><a name="[759]"></a>HAL_RCC_DisableCSS</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1c9]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD1PCLK1Freq
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetD3PCLK1Freq
</UL>

<P><STRONG><a name="[1ca]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>

<P><STRONG><a name="[1cb]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>

<P><STRONG><a name="[1cc]"></a>HAL_RCC_GetOscConfig</STRONG> (Thumb, 298 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetREVID
</UL>

<P><STRONG><a name="[75a]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)

<P><STRONG><a name="[1ce]"></a>HAL_RCC_CSSCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_NMI_IRQHandler
</UL>

<P><STRONG><a name="[1cd]"></a>HAL_RCC_NMI_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_CSSCallback
</UL>

<P><STRONG><a name="[1ae]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 2420 bytes, Stack size 40 bytes, stm32h7xx_hal_rcc_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[75b]"></a>HAL_RCCEx_GetPeriphCLKConfig</STRONG> (Thumb, 464 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[1d5]"></a>HAL_RCCEx_GetPLL3ClockFreq</STRONG> (Thumb, 450 bytes, Stack size 4 bytes, stm32h7xx_hal_rcc_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCCEx_GetPLL3ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[1d4]"></a>HAL_RCCEx_GetPLL2ClockFreq</STRONG> (Thumb, 392 bytes, Stack size 4 bytes, stm32h7xx_hal_rcc_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCCEx_GetPLL2ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[1d1]"></a>HAL_RCCEx_GetD3PCLK1Freq</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[1d3]"></a>HAL_RCCEx_GetPLL1ClockFreq</STRONG> (Thumb, 392 bytes, Stack size 4 bytes, stm32h7xx_hal_rcc_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCCEx_GetPLL1ClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq
</UL>

<P><STRONG><a name="[1d2]"></a>HAL_RCCEx_GetPeriphCLKFreq</STRONG> (Thumb, 728 bytes, Stack size 56 bytes, stm32h7xx_hal_rcc_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL1ClockFreq
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL2ClockFreq
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPLL3ClockFreq
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Init (via Veneer)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard (via Veneer)
</UL>

<P><STRONG><a name="[1d6]"></a>HAL_RCCEx_GetD1PCLK1Freq</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[1d7]"></a>HAL_RCCEx_GetD1SysClockFreq</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>

<P><STRONG><a name="[75c]"></a>HAL_RCCEx_EnableLSECSS</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[75d]"></a>HAL_RCCEx_DisableLSECSS</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[75e]"></a>HAL_RCCEx_EnableLSECSS_IT</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[75f]"></a>HAL_RCCEx_WakeUpStopCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[760]"></a>HAL_RCCEx_KerWakeUpStopCLKConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[761]"></a>HAL_RCCEx_WWDGxSysResetConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[1d8]"></a>HAL_RCCEx_CRSConfig</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetREVID
</UL>

<P><STRONG><a name="[762]"></a>HAL_RCCEx_CRSSoftwareSynchronizationGenerate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[763]"></a>HAL_RCCEx_CRSGetSynchronizationInfo</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)

<P><STRONG><a name="[1d9]"></a>HAL_RCCEx_CRSWaitSynchronization</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[1de]"></a>HAL_RCCEx_CRS_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_IRQHandler
</UL>

<P><STRONG><a name="[1dd]"></a>HAL_RCCEx_CRS_ExpectedSyncCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_IRQHandler
</UL>

<P><STRONG><a name="[1dc]"></a>HAL_RCCEx_CRS_SyncWarnCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_IRQHandler
</UL>

<P><STRONG><a name="[1db]"></a>HAL_RCCEx_CRS_SyncOkCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_IRQHandler
</UL>

<P><STRONG><a name="[1da]"></a>HAL_RCCEx_CRS_IRQHandler</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_SyncOkCallback
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_SyncWarnCallback
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_ExpectedSyncCallback
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRS_ErrorCallback
</UL>

<P><STRONG><a name="[1e0]"></a>HAL_RCCEx_LSECSS_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_LSECSS_IRQHandler
</UL>

<P><STRONG><a name="[1df]"></a>HAL_RCCEx_LSECSS_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32h7xx_hal_rcc_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_LSECSS_Callback
</UL>

<P><STRONG><a name="[18d]"></a>HAL_GPIO_Init</STRONG> (Thumb, 546 bytes, Stack size 40 bytes, stm32h7xx_hal_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspInit
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_MCOConfig
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspInit (via Veneer)
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_MspInit (via Veneer)
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit (via Veneer)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init (via Veneer)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedTask
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Init (via Veneer)
</UL>

<P><STRONG><a name="[1b8]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 374 bytes, Stack size 36 bytes, stm32h7xx_hal_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspDeInit (via Veneer)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_MspDeInit (via Veneer)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspDeInit
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspDeInit (via Veneer)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspDeInit
</UL>

<P><STRONG><a name="[386]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack (via Veneer)
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte (via Veneer)
</UL>

<P><STRONG><a name="[18c]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init (via Veneer)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedTask
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_NAck (via Veneer)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Ack (via Veneer)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack (via Veneer)
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop (via Veneer)
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start (via Veneer)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte (via Veneer)
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte (via Veneer)
</UL>

<P><STRONG><a name="[764]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(.text), UNUSED)

<P><STRONG><a name="[765]"></a>HAL_GPIO_LockPin</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, stm32h7xx_hal_gpio.o(.text), UNUSED)

<P><STRONG><a name="[1e2]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[1e1]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32h7xx_hal_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[766]"></a>HAL_PWR_DeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[767]"></a>HAL_PWR_EnableBkUpAccess</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[768]"></a>HAL_PWR_DisableBkUpAccess</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[769]"></a>HAL_PWR_ConfigPVD</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[76a]"></a>HAL_PWR_EnablePVD</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[76b]"></a>HAL_PWR_DisablePVD</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[76c]"></a>HAL_PWR_EnableWakeUpPin</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[76d]"></a>HAL_PWR_DisableWakeUpPin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[76e]"></a>HAL_PWR_EnterSLEEPMode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[76f]"></a>HAL_PWR_EnterSTOPMode</STRONG> (Thumb, 80 bytes, Stack size 4 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[770]"></a>HAL_PWR_EnterSTANDBYMode</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[771]"></a>HAL_PWR_EnableSleepOnExit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[772]"></a>HAL_PWR_DisableSleepOnExit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[773]"></a>HAL_PWR_EnableSEVOnPend</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[774]"></a>HAL_PWR_DisableSEVOnPend</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)

<P><STRONG><a name="[1e4]"></a>HAL_PWR_PVDCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_PVD_AVD_IRQHandler
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_PVD_IRQHandler
</UL>

<P><STRONG><a name="[1e3]"></a>HAL_PWR_PVD_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_PVDCallback
</UL>

<P><STRONG><a name="[1ab]"></a>HAL_PWREx_ConfigSupply</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32h7xx_hal_pwr_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_PWREx_ConfigSupply
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[775]"></a>HAL_PWREx_GetSupplyConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[1e5]"></a>HAL_PWREx_ControlVoltageScaling</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[776]"></a>HAL_PWREx_GetVoltageRange</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[777]"></a>HAL_PWREx_ControlStopModeVoltageScaling</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[778]"></a>HAL_PWREx_GetStopModeVoltageRange</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[779]"></a>HAL_PWREx_EnterSTOPMode</STRONG> (Thumb, 98 bytes, Stack size 4 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[77a]"></a>HAL_PWREx_ClearPendingEvent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[77b]"></a>HAL_PWREx_EnterSTANDBYMode</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[77c]"></a>HAL_PWREx_ConfigD3Domain</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[77d]"></a>HAL_PWREx_EnableFlashPowerDown</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[77e]"></a>HAL_PWREx_DisableFlashPowerDown</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[77f]"></a>HAL_PWREx_EnableWakeUpPin</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[780]"></a>HAL_PWREx_DisableWakeUpPin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[781]"></a>HAL_PWREx_GetWakeupFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[782]"></a>HAL_PWREx_ClearWakeupFlag</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[1ec]"></a>HAL_PWREx_WKUP6_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[1eb]"></a>HAL_PWREx_WKUP5_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[1ea]"></a>HAL_PWREx_WKUP4_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[1e9]"></a>HAL_PWREx_WKUP3_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[1e8]"></a>HAL_PWREx_WKUP2_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[1e7]"></a>HAL_PWREx_WKUP1_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WAKEUP_PIN_IRQHandler
</UL>

<P><STRONG><a name="[1e6]"></a>HAL_PWREx_WAKEUP_PIN_IRQHandler</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP1_Callback
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP2_Callback
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP3_Callback
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP4_Callback
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP5_Callback
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_WKUP6_Callback
</UL>

<P><STRONG><a name="[1ed]"></a>HAL_PWREx_EnableBkUpReg</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[1ee]"></a>HAL_PWREx_DisableBkUpReg</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[1ef]"></a>HAL_PWREx_EnableUSBReg</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[1f0]"></a>HAL_PWREx_DisableUSBReg</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[783]"></a>HAL_PWREx_EnableUSBVoltageDetector</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[784]"></a>HAL_PWREx_DisableUSBVoltageDetector</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[785]"></a>HAL_PWREx_EnableBatteryCharging</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[786]"></a>HAL_PWREx_DisableBatteryCharging</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[787]"></a>HAL_PWREx_EnableMonitoring</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[788]"></a>HAL_PWREx_DisableMonitoring</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[789]"></a>HAL_PWREx_GetTemperatureLevel</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[78a]"></a>HAL_PWREx_GetVBATLevel</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[78b]"></a>HAL_PWREx_ConfigAVD</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[78c]"></a>HAL_PWREx_EnableAVD</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[78d]"></a>HAL_PWREx_DisableAVD</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)

<P><STRONG><a name="[1f2]"></a>HAL_PWREx_AVDCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_PVD_AVD_IRQHandler
</UL>

<P><STRONG><a name="[1f1]"></a>HAL_PWREx_PVD_AVD_IRQHandler</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, stm32h7xx_hal_pwr_ex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_AVDCallback
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_PVDCallback
</UL>

<P><STRONG><a name="[1c5]"></a>HAL_InitTick</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32h7xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_DeInit
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SetTickFreq
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[1f4]"></a>HAL_Init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32h7xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_board_init
</UL>

<P><STRONG><a name="[1f6]"></a>HAL_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DeInit
</UL>

<P><STRONG><a name="[1f5]"></a>HAL_DeInit</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, stm32h7xx_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspDeInit
</UL>

<P><STRONG><a name="[2dd]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[1c4]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_PollForTransfer (via Veneer)
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort (via Veneer)
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRSWaitSynchronization
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL2_Config
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCCEx_PLL3_Config
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_DeInit
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_PollForTransfer (via Veneer)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoading_Suspend (via Veneer)
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Suspend (via Veneer)
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit (via Veneer)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Abort (via Veneer)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoading_Abort (via Veneer)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init (via Veneer)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ConfigSupply
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_UltraHighSpeed (via Veneer)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR (via Veneer)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_HighSpeed (via Veneer)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayBlock_Enable
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Transmit_DMA (via Veneer)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Receive (via Veneer)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Transmit (via Veneer)
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling_IT
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command_IT
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_NAND_GetECC (via Veneer)
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSCFG_EnableVREFBUF
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_DisableUSBReg
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableUSBReg
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_DisableBkUpReg
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableBkUpReg
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_ControlVoltageScaling
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_PollForTransfer (via Veneer)
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Abort (via Veneer)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Init (via Veneer)
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get (via Veneer)
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps (via Veneer)
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigSpeedBusOperation (via Veneer)
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks (via Veneer)
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks (via Veneer)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init (via Veneer)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard (via Veneer)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardStatus (via Veneer)
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_write
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_read
</UL>

<P><STRONG><a name="[78e]"></a>HAL_GetTickPrio</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[1f7]"></a>HAL_SetTickFreq</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32h7xx_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[78f]"></a>HAL_GetTickFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[1f8]"></a>HAL_Delay</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, stm32h7xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init (via Veneer)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard (via Veneer)
</UL>

<P><STRONG><a name="[790]"></a>HAL_SuspendTick</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[791]"></a>HAL_ResumeTick</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[792]"></a>HAL_GetHalVersion</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[1c6]"></a>HAL_GetREVID</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_CRSConfig
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetOscConfig
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Init (via Veneer)
</UL>

<P><STRONG><a name="[793]"></a>HAL_GetDEVID</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[794]"></a>HAL_GetUIDw0</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[795]"></a>HAL_GetUIDw1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[796]"></a>HAL_GetUIDw2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[797]"></a>HAL_SYSCFG_VREFBUF_VoltageScalingConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[798]"></a>HAL_SYSCFG_VREFBUF_HighImpedanceConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[799]"></a>HAL_SYSCFG_VREFBUF_TrimmingConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[1f9]"></a>HAL_SYSCFG_EnableVREFBUF</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32h7xx_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[79a]"></a>HAL_SYSCFG_DisableVREFBUF</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[79b]"></a>HAL_SYSCFG_ETHInterfaceSelect</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[79c]"></a>HAL_SYSCFG_AnalogSwitchConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[79d]"></a>HAL_SYSCFG_EnableBOOST</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[79e]"></a>HAL_SYSCFG_DisableBOOST</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[79f]"></a>HAL_SYSCFG_CM7BootAddConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7a0]"></a>HAL_EnableCompensationCell</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7a1]"></a>HAL_DisableCompensationCell</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7a2]"></a>HAL_SYSCFG_EnableIOSpeedOptimize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7a3]"></a>HAL_SYSCFG_DisableIOSpeedOptimize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7a4]"></a>HAL_SYSCFG_CompensationCodeSelect</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7a5]"></a>HAL_SYSCFG_CompensationCodeConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7a6]"></a>HAL_DBGMCU_EnableDBGSleepMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7a7]"></a>HAL_DBGMCU_DisableDBGSleepMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7a8]"></a>HAL_DBGMCU_EnableDBGStopMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7a9]"></a>HAL_DBGMCU_DisableDBGStopMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7aa]"></a>HAL_DBGMCU_EnableDBGStandbyMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7ab]"></a>HAL_DBGMCU_DisableDBGStandbyMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7ac]"></a>HAL_EnableDomain3DBGStopMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7ad]"></a>HAL_DisableDomain3DBGStopMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7ae]"></a>HAL_EnableDomain3DBGStandbyMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7af]"></a>HAL_DisableDomain3DBGStandbyMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7b0]"></a>HAL_SetFMCMemorySwappingConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7b1]"></a>HAL_GetFMCMemorySwappingConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7b2]"></a>HAL_EXTI_EdgeConfig</STRONG> (Thumb, 76 bytes, Stack size 4 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7b3]"></a>HAL_EXTI_GenerateSWInterrupt</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7b4]"></a>HAL_EXTI_D1_ClearFlag</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7b5]"></a>HAL_EXTI_D1_EventInputConfig</STRONG> (Thumb, 218 bytes, Stack size 4 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7b6]"></a>HAL_EXTI_D3_EventInputConfig</STRONG> (Thumb, 94 bytes, Stack size 4 bytes, stm32h7xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[7b7]"></a>HAL_QSPI_SetTimeout</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)

<P><STRONG><a name="[171]"></a>HAL_QSPI_Init</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, stm32h7xx_hal_qspi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = HAL_QSPI_Init &rArr; HAL_QSPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspInit
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_QUADSPI_Init
</UL>

<P><STRONG><a name="[1fb]"></a>HAL_QSPI_DeInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspDeInit
</UL>

<P><STRONG><a name="[205]"></a>HAL_QSPI_TimeOutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_IRQHandler
</UL>

<P><STRONG><a name="[1fc]"></a>HAL_QSPI_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_IRQHandler
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_DMAAbortCplt
</UL>

<P><STRONG><a name="[203]"></a>HAL_QSPI_StatusMatchCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_IRQHandler
</UL>

<P><STRONG><a name="[202]"></a>HAL_QSPI_AbortCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort_IT
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_IRQHandler
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_DMAError
</UL>

<P><STRONG><a name="[201]"></a>HAL_QSPI_CmdCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_IRQHandler
</UL>

<P><STRONG><a name="[200]"></a>HAL_QSPI_RxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_IRQHandler
</UL>

<P><STRONG><a name="[1ff]"></a>HAL_QSPI_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_IRQHandler
</UL>

<P><STRONG><a name="[1fe]"></a>HAL_QSPI_FifoThresholdCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_IRQHandler
</UL>

<P><STRONG><a name="[1fd]"></a>HAL_QSPI_IRQHandler</STRONG> (Thumb, 542 bytes, Stack size 16 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_FifoThresholdCallback
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_TxCpltCallback
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_RxCpltCallback
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_CmdCpltCallback
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AbortCpltCallback
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_StatusMatchCallback
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_ErrorCallback
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_TimeOutCallback
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Abort_IT (via Veneer)
</UL>

<P><STRONG><a name="[173]"></a>HAL_QSPI_Command</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, stm32h7xx_hal_qspi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_QSPI_Command &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ChipErase
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_SectorErase
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_NoCheck
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_PageProgram
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_UniqueID
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_MftrDeviceID
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ExitQPIMode
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Reset
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WaitBusy
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_EnterQPIMode
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadSR
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WriteSR
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WriteEnable
</UL>

<P><STRONG><a name="[207]"></a>HAL_QSPI_Command_IT</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>

<P><STRONG><a name="[175]"></a>HAL_QSPI_Transmit</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, stm32h7xx_hal_qspi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_QSPI_Transmit &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write_NoCheck
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_PageProgram
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_EnterQPIMode
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WriteSR
</UL>

<P><STRONG><a name="[177]"></a>HAL_QSPI_Receive</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, stm32h7xx_hal_qspi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_QSPI_Receive &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Write
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_UniqueID
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_MftrDeviceID
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_WaitBusy
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadSR
</UL>

<P><STRONG><a name="[7b8]"></a>HAL_QSPI_Transmit_IT</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)

<P><STRONG><a name="[7b9]"></a>HAL_QSPI_Receive_IT</STRONG> (Thumb, 130 bytes, Stack size 12 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)

<P><STRONG><a name="[208]"></a>HAL_QSPI_Abort_IT</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AbortCpltCallback
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Abort_IT (via Veneer)
</UL>

<P><STRONG><a name="[209]"></a>HAL_QSPI_Transmit_DMA</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Start_IT (via Veneer)
</UL>

<P><STRONG><a name="[20b]"></a>HAL_QSPI_Receive_DMA</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Start_IT (via Veneer)
</UL>

<P><STRONG><a name="[20c]"></a>HAL_QSPI_AutoPolling</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>

<P><STRONG><a name="[20d]"></a>HAL_QSPI_AutoPolling_IT</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>

<P><STRONG><a name="[187]"></a>HAL_QSPI_MemoryMapped</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, stm32h7xx_hal_qspi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_QSPI_MemoryMapped &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q_Memory_Mapped_Enable
</UL>

<P><STRONG><a name="[7ba]"></a>HAL_QSPI_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)

<P><STRONG><a name="[7bb]"></a>HAL_QSPI_GetError</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)

<P><STRONG><a name="[20e]"></a>HAL_QSPI_Abort</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Abort (via Veneer)
</UL>

<P><STRONG><a name="[7bc]"></a>HAL_QSPI_SetFifoThreshold</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)

<P><STRONG><a name="[7bd]"></a>HAL_QSPI_GetFifoThreshold</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)

<P><STRONG><a name="[7be]"></a>HAL_QSPI_SetFlashID</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text), UNUSED)

<P><STRONG><a name="[210]"></a>DelayBlock_Enable</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, stm32h7xx_ll_delayblock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_UltraHighSpeed (via Veneer)
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigSpeedBusOperation (via Veneer)
</UL>

<P><STRONG><a name="[7bf]"></a>DelayBlock_Disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_ll_delayblock.o(.text), UNUSED)

<P><STRONG><a name="[7c0]"></a>DelayBlock_Configure</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32h7xx_ll_delayblock.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>SystemInit</STRONG> (Thumb, 208 bytes, Stack size 12 bytes, system_stm32h7xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(.text)
</UL>
<P><STRONG><a name="[7c1]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 348 bytes, Stack size 4 bytes, system_stm32h7xx.o(.text), UNUSED)

<P><STRONG><a name="[212]"></a>BSP_SD_IsDetected</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, bsp_driver_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BSP_SD_IsDetected
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_Init
</UL>

<P><STRONG><a name="[211]"></a>BSP_SD_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, bsp_driver_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = BSP_SD_Init &rArr; HAL_SD_Init &rArr; HAL_SD_InitCard &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init (via Veneer)
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigWideBusOperation (via Veneer)
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_IsDetected
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_initialize
</UL>

<P><STRONG><a name="[7c2]"></a>BSP_SD_ITConfig</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp_driver_sd.o(.text), UNUSED)

<P><STRONG><a name="[215]"></a>BSP_SD_ReadBlocks</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, bsp_driver_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks (via Veneer)
</UL>

<P><STRONG><a name="[217]"></a>BSP_SD_WriteBlocks</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, bsp_driver_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks (via Veneer)
</UL>

<P><STRONG><a name="[219]"></a>BSP_SD_ReadBlocks_DMA</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp_driver_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = BSP_SD_ReadBlocks_DMA &rArr; HAL_SD_ReadBlocks_DMA &rArr; SDMMC_CmdReadMultiBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks_DMA (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_read
</UL>

<P><STRONG><a name="[21b]"></a>BSP_SD_WriteBlocks_DMA</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bsp_driver_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = BSP_SD_WriteBlocks_DMA &rArr; HAL_SD_WriteBlocks_DMA &rArr; SDMMC_CmdWriteMultiBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks_DMA (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_write
</UL>

<P><STRONG><a name="[21d]"></a>BSP_SD_Erase</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_driver_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Erase (via Veneer)
</UL>

<P><STRONG><a name="[21f]"></a>BSP_SD_GetCardState</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_driver_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = BSP_SD_GetCardState &rArr; HAL_SD_GetCardState &rArr; SDMMC_CmdSendStatus &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardState (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_write
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_read
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_status
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_initialize
</UL>

<P><STRONG><a name="[221]"></a>BSP_SD_GetCardInfo</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp_driver_sd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardInfo (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_ioctl
</UL>

<P><STRONG><a name="[224]"></a>BSP_SD_AbortCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bsp_driver_sd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_AbortCallback
</UL>

<P><STRONG><a name="[223]"></a>HAL_SD_AbortCallback</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_driver_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_AbortCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Abort_IT (via Veneer)
</UL>

<P><STRONG><a name="[225]"></a>HAL_SD_TxCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_driver_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SD_TxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_WriteCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler (via Veneer)
</UL>

<P><STRONG><a name="[227]"></a>HAL_SD_RxCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, bsp_driver_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SD_RxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_ReadCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler (via Veneer)
</UL>

<P><STRONG><a name="[ab]"></a>SD_initialize</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sd_diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = SD_initialize &rArr; BSP_SD_Init &rArr; HAL_SD_Init &rArr; HAL_SD_InitCard &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_GetCardState
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_diskio.o(.constdata)
</UL>
<P><STRONG><a name="[ac]"></a>SD_status</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sd_diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SD_status &rArr; BSP_SD_GetCardState &rArr; HAL_SD_GetCardState &rArr; SDMMC_CmdSendStatus &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_GetCardState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_diskio.o(.constdata)
</UL>
<P><STRONG><a name="[ad]"></a>SD_read</STRONG> (Thumb, 582 bytes, Stack size 64 bytes, sd_diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = SD_read &rArr; BSP_SD_ReadBlocks_DMA &rArr; HAL_SD_ReadBlocks_DMA &rArr; SDMMC_CmdReadMultiBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_DisableDCache
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_GetCardState
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_ReadBlocks_DMA
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_diskio.o(.constdata)
</UL>
<P><STRONG><a name="[ae]"></a>SD_write</STRONG> (Thumb, 450 bytes, Stack size 56 bytes, sd_diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = SD_write &rArr; BSP_SD_WriteBlocks_DMA &rArr; HAL_SD_WriteBlocks_DMA &rArr; SDMMC_CmdWriteMultiBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_DisableDCache
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_GetCardState
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_WriteBlocks_DMA
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_diskio.o(.constdata)
</UL>
<P><STRONG><a name="[af]"></a>SD_ioctl</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, sd_diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SD_ioctl
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_GetCardInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_diskio.o(.constdata)
</UL>
<P><STRONG><a name="[226]"></a>BSP_SD_WriteCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sd_diskio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_TxCpltCallback
</UL>

<P><STRONG><a name="[228]"></a>BSP_SD_ReadCpltCallback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sd_diskio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_RxCpltCallback
</UL>

<P><STRONG><a name="[1a2]"></a>f_mount</STRONG> (Thumb, 240 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = f_mount &rArr; mount_volume &rArr; ff_req_grant &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_del_syncobj (via Veneer)
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_cre_syncobj (via Veneer)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[1a3]"></a>f_open</STRONG> (Thumb, 992 bytes, Stack size 616 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read (via Veneer)
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime (via Veneer)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayer (via Veneer)
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemOpenFunCallBack (via Veneer)
</UL>

<P><STRONG><a name="[1a4]"></a>f_read</STRONG> (Thumb, 492 bytes, Stack size 48 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = f_read &rArr; validate &rArr; ff_req_grant &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write (via Veneer)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read (via Veneer)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayer (via Veneer)
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemReadFunCallBack (via Veneer)
</UL>

<P><STRONG><a name="[24c]"></a>f_write</STRONG> (Thumb, 560 bytes, Stack size 48 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = f_write &rArr; validate &rArr; ff_req_grant &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write (via Veneer)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read (via Veneer)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemWriteFunCallBack (via Veneer)
</UL>

<P><STRONG><a name="[24d]"></a>f_sync</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = f_sync &rArr; validate &rArr; ff_req_grant &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write (via Veneer)
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[1a5]"></a>f_close</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = f_close &rArr; f_sync &rArr; validate &rArr; ff_req_grant &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayer (via Veneer)
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemCloseFunCallBack (via Veneer)
</UL>

<P><STRONG><a name="[24e]"></a>f_lseek</STRONG> (Thumb, 480 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = f_lseek &rArr; validate &rArr; ff_req_grant &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write (via Veneer)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayer (via Veneer)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemOpenFunCallBack (via Veneer)
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemSeekFunCallBack (via Veneer)
</UL>

<P><STRONG><a name="[24f]"></a>f_opendir</STRONG> (Thumb, 290 bytes, Stack size 544 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemOpenDirFunCallBack (via Veneer)
</UL>

<P><STRONG><a name="[250]"></a>f_closedir</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = f_closedir &rArr; validate &rArr; ff_req_grant &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemCloseDirFunCallBack (via Veneer)
</UL>

<P><STRONG><a name="[251]"></a>f_readdir</STRONG> (Thumb, 126 bytes, Stack size 536 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 696<LI>Call Chain = f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemReadDirFunCallBack (via Veneer)
</UL>

<P><STRONG><a name="[252]"></a>f_stat</STRONG> (Thumb, 96 bytes, Stack size 592 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
</UL>

<P><STRONG><a name="[253]"></a>f_getfree</STRONG> (Thumb, 270 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[254]"></a>f_truncate</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write (via Veneer)
</UL>

<P><STRONG><a name="[255]"></a>f_unlink</STRONG> (Thumb, 326 bytes, Stack size 672 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[256]"></a>f_mkdir</STRONG> (Thumb, 534 bytes, Stack size 680 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write (via Veneer)
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime (via Veneer)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[257]"></a>f_rename</STRONG> (Thumb, 554 bytes, Stack size 728 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[25a]"></a>rt_hw_interrupt_disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, context_rvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_send_wait
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_mdelay
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_recv
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_get_nest
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_leave
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_enter
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_control
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_control
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_control
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_delete
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_detach
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_control
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_recv
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_urgent
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_send_wait
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_delete
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_detach
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_control
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_recv
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_send
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_delete
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_detach
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_detach
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_control
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_delete
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_detach
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_detach
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_defunct_dequeue
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_delhook
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_sethook
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_entry
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_scheduler_start
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_check
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_increase
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_set
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_take
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_release
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_delete
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_urgent
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_next_timeout_tick
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_delete
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_stop
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_detach
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay_until
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_sleep
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_yield
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delete
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_detach
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_thread_timeout
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_thread_exit
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_insert_thread
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_remove_thread
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_exit_critical
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_enter_critical
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_get_pointers
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_get_length
</UL>

<P><STRONG><a name="[25b]"></a>rt_hw_interrupt_enable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, context_rvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_send_wait
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_mdelay
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_recv
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_get_nest
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_leave
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_enter
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_control
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_control
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_control
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_delete
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_detach
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_control
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_recv
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_urgent
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_send_wait
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_delete
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_detach
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_control
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_recv
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_send
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_delete
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_detach
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_detach
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_control
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_delete
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_detach
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_detach
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_defunct_dequeue
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_delhook
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_sethook
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_entry
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_scheduler_start
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_check
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_increase
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_set
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_take
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_release
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_delete
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_urgent
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_next_timeout_tick
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_delete
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_stop
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_detach
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay_until
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_sleep
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_yield
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delete
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_detach
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_thread_timeout
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_thread_exit
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_insert_thread
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_remove_thread
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_exit_critical
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_enter_critical
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_get_pointers
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_get_length
</UL>

<P><STRONG><a name="[2cc]"></a>rt_hw_context_switch</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, context_rvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
</UL>

<P><STRONG><a name="[2cb]"></a>rt_hw_context_switch_interrupt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, context_rvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
</UL>

<P><STRONG><a name="[13]"></a>PendSV_Handler</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, context_rvds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[2c9]"></a>rt_hw_context_switch_to</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, context_rvds.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_scheduler_start
</UL>

<P><STRONG><a name="[7c3]"></a>rt_hw_interrupt_thread_switch</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, context_rvds.o(.text), UNUSED)

<P><STRONG><a name="[d]"></a>HardFault_Handler</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, context_rvds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HardFault_Handler &rArr; rt_hw_hard_fault_exception
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_hard_fault_exception
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>MemManage_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, context_rvds.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[296]"></a>rt_tick_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clock.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_send_wait
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_recv
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_recv
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_send_wait
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_check
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay_until
</UL>

<P><STRONG><a name="[259]"></a>rt_tick_set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, clock.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[25c]"></a>rt_tick_increase</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, clock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rt_tick_increase &rArr; rt_timer_check
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_check
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2d8]"></a>rt_tick_from_millisecond</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, clock.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_tick_from_millisecond
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_mdelay
</UL>

<P><STRONG><a name="[7c4]"></a>rt_tick_get_millisecond</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clock.o(.text), UNUSED)

<P><STRONG><a name="[2de]"></a>rt_components_board_init</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, components.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rt_components_board_init
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_board_init
</UL>

<P><STRONG><a name="[7c5]"></a>rt_components_init</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, components.o(.text), UNUSED)

<P><STRONG><a name="[260]"></a>main_thread_entry</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, components.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = main_thread_entry &rArr; $Super$$main &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> components.o(.text)
</UL>
<P><STRONG><a name="[261]"></a>rt_application_init</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, components.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_create
</UL>

<P><STRONG><a name="[262]"></a>rtthread_startup</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, components.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_init
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_timer_thread_init
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_timer_init
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_scheduler_start
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_scheduler_init
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_show_version
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_board_init
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[a1]"></a>main</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, components.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = main &rArr; rt_hw_board_init &rArr; SystemClock_Config &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_create
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_init
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_timer_thread_init
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_timer_init
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_scheduler_start
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_scheduler_init
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_show_version
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_board_init
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[26a]"></a>rt_thread_idle_sethook</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, idle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[26b]"></a>rt_thread_idle_delhook</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, idle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[2ce]"></a>rt_thread_defunct_enqueue</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, idle.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_control
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delete
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_detach
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_thread_exit
</UL>

<P><STRONG><a name="[26c]"></a>rt_thread_defunct_dequeue</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, idle.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[268]"></a>rt_thread_idle_init</STRONG> (Thumb, 52 bytes, Stack size 48 bytes, idle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = rt_thread_idle_init &rArr; rt_sprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_init
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
</UL>

<P><STRONG><a name="[7c6]"></a>rt_thread_idle_gethandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, idle.o(.text), UNUSED)

<P><STRONG><a name="[273]"></a>rt_sem_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rt_sem_init &rArr; rt_object_init &rArr; rt_exit_critical &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_init
</UL>

<P><STRONG><a name="[275]"></a>rt_sem_detach</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_detach
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_detach
</UL>

<P><STRONG><a name="[277]"></a>rt_sem_create</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
</UL>

<P><STRONG><a name="[279]"></a>rt_sem_delete</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[27a]"></a>rt_sem_take</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rt_sem_take &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_control
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_trytake
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_realloc
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_free
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_alloc
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_info
</UL>

<P><STRONG><a name="[27e]"></a>rt_sem_trytake</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
</UL>

<P><STRONG><a name="[27f]"></a>rt_sem_release</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rt_sem_release &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_realloc
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_free
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_alloc
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_info
</UL>

<P><STRONG><a name="[280]"></a>rt_sem_control</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[281]"></a>rt_mutex_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rt_mutex_init &rArr; rt_object_init &rArr; rt_exit_critical &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_heap_init
</UL>

<P><STRONG><a name="[282]"></a>rt_mutex_detach</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_detach
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[283]"></a>rt_mutex_create</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = rt_mutex_create &rArr; rt_object_allocate &rArr; rt_malloc &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_cre_syncobj (via Veneer)
</UL>

<P><STRONG><a name="[284]"></a>rt_mutex_delete</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = rt_mutex_delete &rArr; rt_object_delete &rArr; rt_free &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_del_syncobj (via Veneer)
</UL>

<P><STRONG><a name="[285]"></a>rt_mutex_take</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_control
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_control
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_trytake
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_req_grant (via Veneer)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memory_info
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_realloc
</UL>

<P><STRONG><a name="[287]"></a>rt_mutex_trytake</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_take
</UL>

<P><STRONG><a name="[288]"></a>rt_mutex_release</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rt_mutex_release &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_control
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memory_info
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_realloc
</UL>

<P><STRONG><a name="[7c7]"></a>rt_mutex_control</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ipc.o(.text), UNUSED)

<P><STRONG><a name="[289]"></a>rt_event_init</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
</UL>

<P><STRONG><a name="[28a]"></a>rt_event_detach</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_detach
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[28b]"></a>rt_event_create</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
</UL>

<P><STRONG><a name="[28c]"></a>rt_event_delete</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[28d]"></a>rt_event_send</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[28e]"></a>rt_event_recv</STRONG> (Thumb, 298 bytes, Stack size 48 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_control
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[28f]"></a>rt_event_control</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[290]"></a>rt_mb_init</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
</UL>

<P><STRONG><a name="[291]"></a>rt_mb_detach</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_detach
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[292]"></a>rt_mb_create</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
</UL>

<P><STRONG><a name="[294]"></a>rt_mb_delete</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[295]"></a>rt_mb_send_wait</STRONG> (Thumb, 350 bytes, Stack size 48 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_control
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_get
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_send
</UL>

<P><STRONG><a name="[297]"></a>rt_mb_send</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_send_wait
</UL>

<P><STRONG><a name="[298]"></a>rt_mb_urgent</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[299]"></a>rt_mb_recv</STRONG> (Thumb, 350 bytes, Stack size 48 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_control
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_get
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[29a]"></a>rt_mb_control</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[29b]"></a>rt_mq_init</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
</UL>

<P><STRONG><a name="[29c]"></a>rt_mq_detach</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_detach
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[29d]"></a>rt_mq_create</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = rt_mq_create &rArr; rt_object_allocate &rArr; rt_malloc &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayer (via Veneer)
</UL>

<P><STRONG><a name="[29e]"></a>rt_mq_delete</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[1ba]"></a>rt_mq_send_wait</STRONG> (Thumb, 394 bytes, Stack size 56 bytes, ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rt_mq_send_wait &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_control
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memcpy
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_get
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_send
</UL>

<P><STRONG><a name="[2a0]"></a>rt_mq_send</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_send_wait
</UL>

<P><STRONG><a name="[2a1]"></a>rt_mq_urgent</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memcpy
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[2a2]"></a>rt_mq_recv</STRONG> (Thumb, 378 bytes, Stack size 56 bytes, ipc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rt_mq_recv &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_control
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memcpy
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_get
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayer (via Veneer)
</UL>

<P><STRONG><a name="[2a3]"></a>rt_mq_control</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, ipc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[2a4]"></a>rt_interrupt_enter</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_interrupt_enter
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2a5]"></a>rt_interrupt_leave</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_interrupt_leave
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2a6]"></a>rt_interrupt_get_nest</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, irq.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_interrupt_get_nest
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rt_errno
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_set_errno
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_errno
</UL>

<P><STRONG><a name="[7c8]"></a>rt_hw_us_delay</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, kservice.o(.text), UNUSED)

<P><STRONG><a name="[7c9]"></a>rt_strerror</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, kservice.o(.text), UNUSED)

<P><STRONG><a name="[2a7]"></a>rt_get_errno</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, kservice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_get_nest
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
</UL>

<P><STRONG><a name="[2a8]"></a>rt_set_errno</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, kservice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rt_set_errno &rArr; rt_interrupt_get_nest
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_get_nest
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_realloc
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_free
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_alloc
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_info
</UL>

<P><STRONG><a name="[2a9]"></a>_rt_errno</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, kservice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_get_nest
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
</UL>

<P><STRONG><a name="[2b6]"></a>rt_memset</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, kservice.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_create
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_init
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_calloc
</UL>

<P><STRONG><a name="[29f]"></a>rt_memcpy</STRONG> (Thumb, 116 bytes, Stack size 4 bytes, kservice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rt_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_send_wait
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_recv
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_urgent
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_realloc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memheap_realloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_strdup
</UL>

<P><STRONG><a name="[7ca]"></a>rt_memmove</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, kservice.o(.text), UNUSED)

<P><STRONG><a name="[7cb]"></a>rt_memcmp</STRONG> (Thumb, 76 bytes, Stack size 4 bytes, kservice.o(.text), UNUSED)

<P><STRONG><a name="[7cc]"></a>rt_strlen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, kservice.o(.text), UNUSED)

<P><STRONG><a name="[7cd]"></a>rt_strstr</STRONG> (Thumb, 156 bytes, Stack size 20 bytes, kservice.o(.text), UNUSED)

<P><STRONG><a name="[7ce]"></a>rt_strcasecmp</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, kservice.o(.text), UNUSED)

<P><STRONG><a name="[2c4]"></a>rt_strncpy</STRONG> (Thumb, 134 bytes, Stack size 4 bytes, kservice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rt_strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
</UL>

<P><STRONG><a name="[7cf]"></a>rt_strcpy</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, kservice.o(.text), UNUSED)

<P><STRONG><a name="[2c6]"></a>rt_strncmp</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, kservice.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_find
</UL>

<P><STRONG><a name="[2aa]"></a>rt_strcmp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, kservice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_strcmp
</UL>

<P><STRONG><a name="[7d0]"></a>rt_strnlen</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, kservice.o(.text), UNUSED)

<P><STRONG><a name="[293]"></a>rt_malloc</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, kservice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = rt_malloc &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_take
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_release
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memheap_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_create
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_create
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_create
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc_align
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_calloc
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_strdup
</UL>

<P><STRONG><a name="[2ac]"></a>rt_strdup</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, kservice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memcpy
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc
</UL>

<P><STRONG><a name="[264]"></a>rt_show_version</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, kservice.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
</UL>

<P><STRONG><a name="[2ad]"></a>rt_vsnprintf</STRONG> (Thumb, 756 bytes, Stack size 48 bytes, kservice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_number
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sprintf
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_vsprintf
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_snprintf
</UL>

<P><STRONG><a name="[2af]"></a>rt_snprintf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, kservice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_vsnprintf
</UL>

<P><STRONG><a name="[2b0]"></a>rt_vsprintf</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, kservice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_vsnprintf
</UL>

<P><STRONG><a name="[271]"></a>rt_sprintf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, kservice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = rt_sprintf &rArr; rt_vsnprintf &rArr; print_number
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_init
</UL>

<P><STRONG><a name="[2b1]"></a>rt_system_heap_init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, kservice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = rt_system_heap_init &rArr; rt_memheap_init &rArr; rt_sem_init &rArr; rt_object_init &rArr; rt_exit_critical &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_init
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_init
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_board_init
</UL>

<P><STRONG><a name="[2b3]"></a>rt_realloc</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, kservice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_take
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_release
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memheap_realloc
</UL>

<P><STRONG><a name="[2b5]"></a>rt_calloc</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, kservice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memset
</UL>

<P><STRONG><a name="[26f]"></a>rt_free</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, kservice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = rt_free &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_take
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_release
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memheap_free
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_delete
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_delete
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_entry
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free_align
</UL>

<P><STRONG><a name="[2b8]"></a>rt_memory_info</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, kservice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_self
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_take
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_release
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_info
</UL>

<P><STRONG><a name="[2ba]"></a>rt_malloc_align</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, kservice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc
</UL>

<P><STRONG><a name="[2bb]"></a>rt_free_align</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, kservice.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free
</UL>

<P><STRONG><a name="[2c8]"></a>__rt_ffs</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, kservice.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_scheduler_start
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
</UL>

<P><STRONG><a name="[2b2]"></a>rt_memheap_init</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, memheap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = rt_memheap_init &rArr; rt_sem_init &rArr; rt_object_init &rArr; rt_exit_critical &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_heap_init
</UL>

<P><STRONG><a name="[2bc]"></a>rt_memheap_detach</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, memheap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_detach
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_detach
</UL>

<P><STRONG><a name="[2bd]"></a>rt_memheap_alloc</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, memheap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rt_memheap_alloc &rArr; rt_sem_take &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_set_errno
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_realloc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memheap_realloc
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memheap_alloc
</UL>

<P><STRONG><a name="[2be]"></a>rt_memheap_free</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, memheap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rt_memheap_free &rArr; rt_sem_take &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_set_errno
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_realloc
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memheap_realloc
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memheap_free
</UL>

<P><STRONG><a name="[2bf]"></a>rt_memheap_realloc</STRONG> (Thumb, 434 bytes, Stack size 32 bytes, memheap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_set_errno
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memcpy
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_free
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memheap_realloc
</UL>

<P><STRONG><a name="[2b9]"></a>rt_memheap_info</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, memheap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_set_errno
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memory_info
</UL>

<P><STRONG><a name="[2ab]"></a>_memheap_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, memheap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _memheap_alloc &rArr; rt_memheap_alloc &rArr; rt_sem_take &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc
</UL>

<P><STRONG><a name="[2b7]"></a>_memheap_free</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, memheap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _memheap_free &rArr; rt_memheap_free &rArr; rt_sem_take &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_free
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free
</UL>

<P><STRONG><a name="[2b4]"></a>_memheap_realloc</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, memheap.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memcpy
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_realloc
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_free
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_realloc
</UL>

<P><STRONG><a name="[7d1]"></a>rt_object_get_information</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, object.o(.text), UNUSED)

<P><STRONG><a name="[2c0]"></a>rt_object_get_length</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, object.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[2c1]"></a>rt_object_get_pointers</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, object.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[274]"></a>rt_object_init</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, object.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = rt_object_init &rArr; rt_exit_critical &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_strncpy
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_exit_critical
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_enter_critical
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_init
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_init
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_init
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_init
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_init
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_init
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_init
</UL>

<P><STRONG><a name="[26e]"></a>rt_object_detach</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, object.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_object_detach
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_detach
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_detach
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_detach
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_detach
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_detach
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_entry
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_detach
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memheap_detach
</UL>

<P><STRONG><a name="[278]"></a>rt_object_allocate</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, object.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = rt_object_allocate &rArr; rt_malloc &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_strncpy
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_create
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_create
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_create
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_create
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_create
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_create
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_create
</UL>

<P><STRONG><a name="[270]"></a>rt_object_delete</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, object.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = rt_object_delete &rArr; rt_free &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_create
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_create
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_delete
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_delete
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_create
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_delete
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_delete
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_entry
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_delete
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_delete
</UL>

<P><STRONG><a name="[26d]"></a>rt_object_is_systemobject</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, object.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_control
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_entry
</UL>

<P><STRONG><a name="[7d2]"></a>rt_object_get_type</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, object.o(.text), UNUSED)

<P><STRONG><a name="[2c5]"></a>rt_object_find</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, object.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_strncmp
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_exit_critical
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_enter_critical
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_find
</UL>

<P><STRONG><a name="[266]"></a>rt_system_scheduler_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, scheduler.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
</UL>

<P><STRONG><a name="[2c7]"></a>rt_schedule_remove_thread</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, scheduler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_schedule_remove_thread
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_mdelay
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_control
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay_until
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_sleep
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delete
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_detach
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_thread_exit
</UL>

<P><STRONG><a name="[269]"></a>rt_system_scheduler_start</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, scheduler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rt_system_scheduler_start
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_context_switch_to
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ffs
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
</UL>

<P><STRONG><a name="[2ca]"></a>rt_schedule_insert_thread</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, scheduler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_schedule_insert_thread
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_control
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_thread_timeout
</UL>

<P><STRONG><a name="[25f]"></a>rt_schedule</STRONG> (Thumb, 432 bytes, Stack size 32 bytes, scheduler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_context_switch_interrupt
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_context_switch
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ffs
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_send_wait
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_mdelay
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_recv
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_control
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_control
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_control
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_recv
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_urgent
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_send_wait
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_control
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_recv
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_send
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_control
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_increase
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_take
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_release
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_urgent
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay_until
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_sleep
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_yield
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_thread_timeout
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_thread_exit
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_exit_critical
</UL>

<P><STRONG><a name="[2c2]"></a>rt_enter_critical</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, scheduler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_enter_critical
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_find
</UL>

<P><STRONG><a name="[2c3]"></a>rt_exit_critical</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, scheduler.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rt_exit_critical &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_find
</UL>

<P><STRONG><a name="[7d3]"></a>rt_critical_level</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scheduler.o(.text), UNUSED)

<P><STRONG><a name="[25d]"></a>rt_thread_self</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_send_wait
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_recv
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rt_errno
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_set_errno
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_errno
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_recv
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_send_wait
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_recv
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_increase
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_take
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_release
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memory_info
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_realloc
</UL>

<P><STRONG><a name="[272]"></a>rt_thread_init</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = rt_thread_init &rArr; rt_timer_init &rArr; rt_object_init &rArr; rt_exit_critical &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_stack_init
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_init
</UL>

<P><STRONG><a name="[276]"></a>rt_thread_resume</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rt_thread_resume &rArr; rt_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_stop
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_insert_thread
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_send_wait
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_recv
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_control
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_delete
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_detach
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_control
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_recv
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_urgent
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_send_wait
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_delete
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_detach
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_control
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_send
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_delete
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_detach
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_detach
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_control
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_release
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_delete
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_detach
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_release
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_delete
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_urgent
</UL>

<P><STRONG><a name="[1a8]"></a>rt_thread_startup</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rt_thread_startup &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_stop
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_insert_thread
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_idle_init
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_application_init
</UL>

<P><STRONG><a name="[2d2]"></a>rt_thread_detach</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_defunct_enqueue
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_detach
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_remove_thread
</UL>

<P><STRONG><a name="[1a7]"></a>rt_thread_create</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = rt_thread_create &rArr; rt_object_allocate &rArr; rt_malloc &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_malloc
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_stack_init
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_application_init
</UL>

<P><STRONG><a name="[2d3]"></a>rt_thread_delete</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_defunct_enqueue
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_detach
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_remove_thread
</UL>

<P><STRONG><a name="[2d4]"></a>rt_thread_yield</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[27b]"></a>rt_thread_suspend</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rt_thread_suspend &rArr; rt_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_stop
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_remove_thread
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_send_wait
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_recv
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_recv
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_send_wait
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_recv
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_take
</UL>

<P><STRONG><a name="[2d5]"></a>rt_thread_sleep</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_control
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_stop
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_remove_thread
</UL>

<P><STRONG><a name="[2d6]"></a>rt_thread_delay</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_control
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_stop
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_remove_thread
</UL>

<P><STRONG><a name="[2d7]"></a>rt_thread_delay_until</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_control
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_get
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_stop
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_remove_thread
</UL>

<P><STRONG><a name="[18a]"></a>rt_thread_mdelay</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rt_thread_mdelay &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_start
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_control
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_from_millisecond
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_stop
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_remove_thread
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LvglTask
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_scan
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedTask
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioTask
</UL>

<P><STRONG><a name="[286]"></a>rt_thread_control</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_is_systemobject
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_defunct_enqueue
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_stop
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_detach
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_insert_thread
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_remove_thread
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_take
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_release
</UL>

<P><STRONG><a name="[2d9]"></a>rt_thread_find</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_find
</UL>

<P><STRONG><a name="[2d0]"></a>rt_timer_init</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = rt_timer_init &rArr; rt_object_init &rArr; rt_exit_critical &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_create
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_init
</UL>

<P><STRONG><a name="[2cd]"></a>rt_timer_detach</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rt_timer_detach &rArr; rt_object_detach
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_detach
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_control
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delete
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_detach
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_thread_exit
</UL>

<P><STRONG><a name="[2da]"></a>rt_timer_create</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_allocate
</UL>

<P><STRONG><a name="[2db]"></a>rt_timer_delete</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[27d]"></a>rt_timer_start</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rt_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_get
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_send_wait
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_mdelay
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_recv
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_recv
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_send_wait
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_recv
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_take
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay_until
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_sleep
</UL>

<P><STRONG><a name="[2d1]"></a>rt_timer_stop</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_startup
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_mdelay
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_suspend
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_resume
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_control
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay_until
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_sleep
</UL>

<P><STRONG><a name="[27c]"></a>rt_timer_control</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rt_timer_control
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_send_wait
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_mdelay
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_recv
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_recv
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mb_send_wait
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_event_recv
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_take
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_take
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay_until
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_delay
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_sleep
</UL>

<P><STRONG><a name="[25e]"></a>rt_timer_check</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rt_timer_check
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_get
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_increase
</UL>

<P><STRONG><a name="[2dc]"></a>rt_timer_next_timeout_tick</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>

<P><STRONG><a name="[265]"></a>rt_system_timer_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
</UL>

<P><STRONG><a name="[267]"></a>rt_system_timer_thread_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
</UL>

<P><STRONG><a name="[2cf]"></a>rt_hw_stack_init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, cpuport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_hw_stack_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_create
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_init
</UL>

<P><STRONG><a name="[7d4]"></a>rt_hw_exception_install</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpuport.o(.text), UNUSED)

<P><STRONG><a name="[258]"></a>rt_hw_hard_fault_exception</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, cpuport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_hw_hard_fault_exception
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[7d5]"></a>rt_hw_cpu_shutdown</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpuport.o(.text), UNUSED)

<P><STRONG><a name="[7d6]"></a>rt_hw_cpu_reset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cpuport.o(.text), UNUSED)

<P><STRONG><a name="[2e0]"></a>rt_heap_begin_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, board.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_board_init
</UL>

<P><STRONG><a name="[2df]"></a>rt_heap_end_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, board.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_board_init
</UL>

<P><STRONG><a name="[14]"></a>SysTick_Handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, board.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SysTick_Handler &rArr; rt_tick_increase &rArr; rt_timer_check
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_leave
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_interrupt_enter
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tick_increase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32h750xx.o(RESET)
</UL>
<P><STRONG><a name="[263]"></a>rt_hw_board_init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, board.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = rt_hw_board_init &rArr; SystemClock_Config &rArr; HAL_RCCEx_PeriphCLKConfig &rArr; RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_components_board_init
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_heap_end_get
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_heap_begin_get
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_system_heap_init
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtthread_startup
</UL>

<P><STRONG><a name="[2e1]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf (via Veneer)
</UL>

<P><STRONG><a name="[7d7]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[22a]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_cnt (via Veneer)
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow (via Veneer)
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner (via Veneer)
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_process_paragraph (via Veneer)
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform (via Veneer)
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map (via Veneer)
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end (via Veneer)
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_set_px_color (via Veneer)
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_ctrl_map (via Veneer)
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ins (via Veneer)
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtl_reverse (via Veneer)
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text (via Veneer)
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event (via Veneer)
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider (via Veneer)
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_write
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_read
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_alloc
</UL>

<P><STRONG><a name="[647]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start (via Veneer)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer (via Veneer)
</UL>

<P><STRONG><a name="[7d8]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[5e0]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_day_names (via Veneer)
</UL>

<P><STRONG><a name="[7d9]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[23f]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect (via Veneer)
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic (via Veneer)
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow (via Veneer)
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line (via Veneer)
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map (via Veneer)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[7da]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[7db]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[23a]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_set_size (via Veneer)
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr (via Veneer)
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer (via Veneer)
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius (via Veneer)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle (via Veneer)
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line (via Veneer)
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line (via Veneer)
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter (via Veneer)
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map (via Veneer)
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_alloc (via Veneer)
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map (via Veneer)
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_row_cnt (via Veneer)
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[1aa]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayer (via Veneer)
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_cnt (via Veneer)
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init (via Veneer)
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init (via Veneer)
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj (via Veneer)
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state (via Veneer)
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map (via Veneer)
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register (via Veneer)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor (via Veneer)
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register (via Veneer)
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_update (via Veneer)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemOpenFunCallBack (via Veneer)
</UL>

<P><STRONG><a name="[7dc]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2e4]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[6d1]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_add_option (via Veneer)
</UL>

<P><STRONG><a name="[23e]"></a>strchr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, strchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[58a]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text (via Veneer)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_password_mode (via Veneer)
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_placeholder_text (via Veneer)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab (via Veneer)
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src (via Veneer)
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_ext (via Veneer)
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open (via Veneer)
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char (via Veneer)
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text (via Veneer)
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char (via Veneer)
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event (via Veneer)
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue (via Veneer)
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_cut (via Veneer)
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ins (via Veneer)
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_last (via Veneer)
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_up (via Veneer)
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text (via Veneer)
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text (via Veneer)
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_selected_str (via Veneer)
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_add_option (via Veneer)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event (via Veneer)
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider (via Veneer)
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_get_selected_str (via Veneer)
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options (via Veneer)
</UL>

<P><STRONG><a name="[385]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init (via Veneer)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayer (via Veneer)
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open (via Veneer)
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info (via Veneer)
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open (via Veneer)
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_invalidate_src (via Veneer)
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map (via Veneer)
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_btn_text (via Veneer)
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char (via Veneer)
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char (via Veneer)
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb (via Veneer)
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event (via Veneer)
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_handler (via Veneer)
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemReadDirFunCallBack (via Veneer)
</UL>

<P><STRONG><a name="[238]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[58b]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text (via Veneer)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_password_mode (via Veneer)
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_placeholder_text (via Veneer)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab (via Veneer)
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src (via Veneer)
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open (via Veneer)
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_add_option (via Veneer)
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options (via Veneer)
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemReadDirFunCallBack (via Veneer)
</UL>

<P><STRONG><a name="[2e3]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[7dd]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[2e2]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[7de]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[16f]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[7df]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[7e0]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[7e1]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[2e9]"></a>free</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, mallocr.o(i.__free$realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get (via Veneer)
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free (via Veneer)
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc (via Veneer)
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_free_all (via Veneer)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemOpenFunCallBack (via Veneer)
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemCloseFunCallBack (via Veneer)
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemCloseDirFunCallBack (via Veneer)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>

<P><STRONG><a name="[2e6]"></a>malloc</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, mallocr.o(i.__malloc$realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get (via Veneer)
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc (via Veneer)
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc (via Veneer)
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemOpenFunCallBack (via Veneer)
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MyFileSystemOpenDirFunCallBack (via Veneer)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
</UL>

<P><STRONG><a name="[7e2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[7e3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[7e4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[2e8]"></a>realloc</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, mallocr.o(i.realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get (via Veneer)
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc (via Veneer)
</UL>

<P><STRONG><a name="[557]"></a>lv_color_fill</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, lv_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_color_fill
</UL>
<BR>[Called By]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal (via Veneer)
</UL>

<P><STRONG><a name="[7e5]"></a>lv_color_lighten</STRONG> (Thumb, 84 bytes, Stack size 4 bytes, lv_color.o(.text), UNUSED)

<P><STRONG><a name="[5b2]"></a>lv_color_darken</STRONG> (Thumb, 80 bytes, Stack size 4 bytes, lv_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_color_darken
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dark_color_filter_cb (via Veneer)
</UL>

<P><STRONG><a name="[7e6]"></a>lv_color_change_lightness</STRONG> (Thumb, 256 bytes, Stack size 16 bytes, lv_color.o(.text), UNUSED)

<P><STRONG><a name="[616]"></a>lv_color_hsv_to_rgb</STRONG> (Thumb, 278 bytes, Stack size 16 bytes, lv_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_color_hsv_to_rgb
</UL>
<BR>[Called By]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_get_rgb (via Veneer)
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event (via Veneer)
</UL>

<P><STRONG><a name="[613]"></a>lv_color_rgb_to_hsv</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, lv_color.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_set_rgb (via Veneer)
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_to_hsv
</UL>

<P><STRONG><a name="[743]"></a>lv_color_to_hsv</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lv_color.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_rgb_to_hsv
</UL>

<P><STRONG><a name="[399]"></a>lv_palette_main</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, lv_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_palette_main
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets (via Veneer)
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_primary (via Veneer)
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init (via Veneer)
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create (via Veneer)
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create (via Veneer)
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb (via Veneer)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create (via Veneer)
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_meter_box (via Veneer)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_chart_event_cb (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_event_cb (via Veneer)
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_secondary (via Veneer)
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register (via Veneer)
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init (via Veneer)
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_part_begin_event_cb (via Veneer)
</UL>

<P><STRONG><a name="[3d6]"></a>lv_palette_lighten</STRONG> (Thumb, 76 bytes, Stack size 4 bytes, lv_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_palette_lighten
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create (via Veneer)
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init (via Veneer)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grey_filter_cb (via Veneer)
</UL>

<P><STRONG><a name="[3e1]"></a>lv_palette_darken</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, lv_color.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_palette_darken
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb (via Veneer)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create (via Veneer)
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init (via Veneer)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grey_filter_cb (via Veneer)
</UL>

<P><STRONG><a name="[54f]"></a>lv_trigo_sin</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, lv_math.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_angle_init (via Veneer)
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_init (via Veneer)
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area (via Veneer)
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle_init (via Veneer)
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc_get_area (via Veneer)
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc (via Veneer)
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event (via Veneer)
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_knob_pos (via Veneer)
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels (via Veneer)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event (via Veneer)
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_line (via Veneer)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event (via Veneer)
</UL>

<P><STRONG><a name="[664]"></a>lv_bezier3</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, lv_math.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_bezier3
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_path_ease_out (via Veneer)
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_path_ease_in_out (via Veneer)
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_path_bounce (via Veneer)
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_path_overshoot (via Veneer)
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_path_ease_in (via Veneer)
</UL>

<P><STRONG><a name="[7e7]"></a>lv_sqrt</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, lv_math.o(.text), UNUSED)

<P><STRONG><a name="[618]"></a>lv_atan2</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, lv_math.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event (via Veneer)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event (via Veneer)
</UL>

<P><STRONG><a name="[637]"></a>lv_pow</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lv_math.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_set_pos (via Veneer)
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_set_digit_format (via Veneer)
</UL>

<P><STRONG><a name="[38c]"></a>lv_map</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, lv_math.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_map
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_anim_cb (via Veneer)
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_path_ease_out (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_path_linear (via Veneer)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event (via Veneer)
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks (via Veneer)
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks (via Veneer)
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_point_pos_by_id (via Veneer)
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels (via Veneer)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event (via Veneer)
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc (via Veneer)
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_line (via Veneer)
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_path_ease_in_out (via Veneer)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event (via Veneer)
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update (via Veneer)
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_path_bounce (via Veneer)
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_path_overshoot (via Veneer)
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_path_ease_in (via Veneer)
</UL>

<P><STRONG><a name="[3d1]"></a>lv_rand</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lv_math.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create (via Veneer)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create (via Veneer)
</UL>

<P><STRONG><a name="[7e8]"></a>lv_timer_enable</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_timer.o(.text), UNUSED)

<P><STRONG><a name="[475]"></a>_lv_timer_core_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _lv_timer_core_init
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init (via Veneer)
</UL>

<P><STRONG><a name="[65c]"></a>lv_timer_del</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lv_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free (via Veneer)
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_remove (via Veneer)
</UL>

<P><STRONG><a name="[193]"></a>lv_timer_handler</STRONG> (Thumb, 406 bytes, Stack size 40 bytes, lv_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = lv_timer_handler &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get (via Veneer)
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps (via Veneer)
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free (via Veneer)
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove (via Veneer)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next (via Veneer)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head (via Veneer)
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_test (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LvglTask (via Veneer)
</UL>

<P><STRONG><a name="[3db]"></a>lv_timer_create</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lv_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lv_timer_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get (via Veneer)
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create (via Veneer)
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_anim_core_init (via Veneer)
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_async_call (via Veneer)
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register (via Veneer)
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register (via Veneer)
</UL>

<P><STRONG><a name="[744]"></a>lv_timer_create_basic</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, lv_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get (via Veneer)
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head (via Veneer)
</UL>

<P><STRONG><a name="[7e9]"></a>lv_timer_set_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_timer.o(.text), UNUSED)

<P><STRONG><a name="[660]"></a>lv_timer_pause</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start (via Veneer)
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_anim_core_init (via Veneer)
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del_all (via Veneer)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer (via Veneer)
</UL>

<P><STRONG><a name="[4b5]"></a>lv_timer_resume</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del (via Veneer)
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start (via Veneer)
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_layout (via Veneer)
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size (via Veneer)
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty (via Veneer)
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_anim_core_init (via Veneer)
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del_all (via Veneer)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer (via Veneer)
</UL>

<P><STRONG><a name="[7ea]"></a>lv_timer_set_period</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_timer.o(.text), UNUSED)

<P><STRONG><a name="[659]"></a>lv_timer_ready</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_timer_ready
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register (via Veneer)
</UL>

<P><STRONG><a name="[667]"></a>lv_timer_set_repeat_count</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_timer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_async_call (via Veneer)
</UL>

<P><STRONG><a name="[745]"></a>lv_timer_reset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get (via Veneer)
</UL>

<P><STRONG><a name="[544]"></a>lv_timer_get_idle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer (via Veneer)
</UL>

<P><STRONG><a name="[746]"></a>lv_timer_get_next</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_timer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next (via Veneer)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head (via Veneer)
</UL>

<P><STRONG><a name="[19c]"></a>MX_LTDC_Init</STRONG> (Thumb, 184 bytes, Stack size 72 bytes, ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MX_LTDC_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main (via Veneer)
</UL>

<P><STRONG><a name="[2ec]"></a>HAL_LTDC_MspInit</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_LTDC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority (via Veneer)
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ (via Veneer)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
</UL>

<P><STRONG><a name="[2ed]"></a>HAL_LTDC_MspDeInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ (via Veneer)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_DeInit
</UL>

<P><STRONG><a name="[1a6]"></a>LCD_Fill</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, ltdc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main (via Veneer)
</UL>

<P><STRONG><a name="[7eb]"></a>LCD_Draw_Rectangle</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, ltdc.o(.text), UNUSED)

<P><STRONG><a name="[2ef]"></a>SAI1_Config</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = SAI1_Config &rArr; HAL_SAI_InitProtocol &rArr; HAL_SAI_Init &rArr; HAL_SAI_MspInit &rArr; HAL_DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_InitProtocol
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayer
</UL>

<P><STRONG><a name="[389]"></a>ASI_DMA_DoubleBufferTransferStart</STRONG> (Thumb, 410 bytes, Stack size 56 bytes, sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ASI_DMA_DoubleBufferTransferStart
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayer
</UL>

<P><STRONG><a name="[1a1]"></a>MX_SAI1_Init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MX_SAI1_Init &rArr; HAL_SAI_InitProtocol &rArr; HAL_SAI_Init &rArr; HAL_SAI_MspInit &rArr; HAL_DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_InitProtocol
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main (via Veneer)
</UL>

<P><STRONG><a name="[2f1]"></a>HAL_SAI_MspInit</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_SAI_MspInit &rArr; HAL_DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init (via Veneer)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Init
</UL>

<P><STRONG><a name="[2f3]"></a>HAL_SAI_MspDeInit</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_SAI_MspDeInit &rArr; HAL_DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_DeInit
</UL>

<P><STRONG><a name="[19f]"></a>MX_SDMMC1_SD_Init</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = MX_SDMMC1_SD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main (via Veneer)
</UL>

<P><STRONG><a name="[2f5]"></a>HAL_SD_MspInit</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_SD_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority (via Veneer)
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ (via Veneer)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
</UL>

<P><STRONG><a name="[2f6]"></a>HAL_SD_MspDeInit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, sdmmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ (via Veneer)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_DeInit
</UL>

<P><STRONG><a name="[1af]"></a>HAL_DMA2D_Init</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, stm32h7xx_hal_dma2d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init (via Veneer)
</UL>

<P><STRONG><a name="[2f8]"></a>HAL_DMA2D_CLUTLoading_Abort</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>

<P><STRONG><a name="[2f9]"></a>HAL_DMA2D_Abort</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>

<P><STRONG><a name="[2fa]"></a>HAL_DMA2D_DeInit</STRONG> (Thumb, 324 bytes, Stack size 32 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspDeInit (via Veneer)
</UL>

<P><STRONG><a name="[2fc]"></a>HAL_DMA2D_Start</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_SetConfig
</UL>

<P><STRONG><a name="[2fe]"></a>HAL_DMA2D_Start_IT</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_SetConfig
</UL>

<P><STRONG><a name="[2ff]"></a>HAL_DMA2D_BlendingStart</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_SetConfig
</UL>

<P><STRONG><a name="[300]"></a>HAL_DMA2D_BlendingStart_IT</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_SetConfig
</UL>

<P><STRONG><a name="[301]"></a>HAL_DMA2D_Suspend</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>

<P><STRONG><a name="[7ec]"></a>HAL_DMA2D_Resume</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[7ed]"></a>HAL_DMA2D_EnableCLUT</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[7ee]"></a>HAL_DMA2D_CLUTStartLoad</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[7ef]"></a>HAL_DMA2D_CLUTStartLoad_IT</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[7f0]"></a>HAL_DMA2D_CLUTLoad</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[7f1]"></a>HAL_DMA2D_CLUTLoad_IT</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[302]"></a>HAL_DMA2D_CLUTLoading_Suspend</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>

<P><STRONG><a name="[7f2]"></a>HAL_DMA2D_CLUTLoading_Resume</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[303]"></a>HAL_DMA2D_PollForTransfer</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>

<P><STRONG><a name="[306]"></a>HAL_DMA2D_CLUTLoadingCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[305]"></a>HAL_DMA2D_LineEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[304]"></a>HAL_DMA2D_IRQHandler</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_LineEventCallback
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoadingCpltCallback
</UL>

<P><STRONG><a name="[1b1]"></a>HAL_DMA2D_ConfigLayer</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, stm32h7xx_hal_dma2d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA2D_ConfigLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init (via Veneer)
</UL>

<P><STRONG><a name="[7f3]"></a>HAL_DMA2D_ConfigCLUT</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[7f4]"></a>HAL_DMA2D_ProgramLineEvent</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[7f5]"></a>HAL_DMA2D_EnableDeadTime</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[7f6]"></a>HAL_DMA2D_DisableDeadTime</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[7f7]"></a>HAL_DMA2D_ConfigDeadTime</STRONG> (Thumb, 62 bytes, Stack size 4 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[7f8]"></a>HAL_DMA2D_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[7f9]"></a>HAL_DMA2D_GetError</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)

<P><STRONG><a name="[2f2]"></a>HAL_DMA_Init</STRONG> (Thumb, 1290 bytes, Stack size 40 bytes, stm32h7xx_hal_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_MspInit
</UL>

<P><STRONG><a name="[2f4]"></a>HAL_DMA_DeInit</STRONG> (Thumb, 630 bytes, Stack size 40 bytes, stm32h7xx_hal_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_MspDeInit
</UL>

<P><STRONG><a name="[308]"></a>HAL_DMA_Start</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>

<P><STRONG><a name="[30a]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 664 bytes, Stack size 40 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Receive_DMA
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Transmit_DMA
</UL>

<P><STRONG><a name="[30b]"></a>HAL_DMA_Abort</STRONG> (Thumb, 758 bytes, Stack size 40 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_PollForTransfer
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Abort
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_DMAStop
</UL>

<P><STRONG><a name="[346]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 622 bytes, Stack size 40 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_IRQHandler
</UL>

<P><STRONG><a name="[30c]"></a>HAL_DMA_PollForTransfer</STRONG> (Thumb, 1152 bytes, Stack size 56 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>

<P><STRONG><a name="[1bb]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 1784 bytes, Stack size 40 bytes, stm32h7xx_hal_dma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream0_IRQHandler (via Veneer)
</UL>

<P><STRONG><a name="[7fa]"></a>HAL_DMA_RegisterCallback</STRONG> (Thumb, 188 bytes, Stack size 4 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[7fb]"></a>HAL_DMA_UnRegisterCallback</STRONG> (Thumb, 114 bytes, Stack size 4 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[7fc]"></a>HAL_DMA_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[33f]"></a>HAL_DMA_GetError</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_DMAError
</UL>

<P><STRONG><a name="[30d]"></a>HAL_MDMA_Init</STRONG> (Thumb, 286 bytes, Stack size 16 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>

<P><STRONG><a name="[7fd]"></a>HAL_MDMA_DeInit</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)

<P><STRONG><a name="[7fe]"></a>HAL_MDMA_ConfigPostRequestMask</STRONG> (Thumb, 104 bytes, Stack size 4 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)

<P><STRONG><a name="[7ff]"></a>HAL_MDMA_RegisterCallback</STRONG> (Thumb, 102 bytes, Stack size 4 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)

<P><STRONG><a name="[800]"></a>HAL_MDMA_UnRegisterCallback</STRONG> (Thumb, 114 bytes, Stack size 4 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)

<P><STRONG><a name="[801]"></a>HAL_MDMA_LinkedList_CreateNode</STRONG> (Thumb, 286 bytes, Stack size 20 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)

<P><STRONG><a name="[802]"></a>HAL_MDMA_LinkedList_AddNode</STRONG> (Thumb, 242 bytes, Stack size 28 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)

<P><STRONG><a name="[803]"></a>HAL_MDMA_LinkedList_RemoveNode</STRONG> (Thumb, 228 bytes, Stack size 20 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)

<P><STRONG><a name="[804]"></a>HAL_MDMA_LinkedList_EnableCircularMode</STRONG> (Thumb, 108 bytes, Stack size 4 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)

<P><STRONG><a name="[805]"></a>HAL_MDMA_LinkedList_DisableCircularMode</STRONG> (Thumb, 104 bytes, Stack size 4 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)

<P><STRONG><a name="[806]"></a>HAL_MDMA_Start</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)

<P><STRONG><a name="[20a]"></a>HAL_MDMA_Start_IT</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive_DMA (via Veneer)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit_DMA (via Veneer)
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Write_DMA
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Read_DMA
</UL>

<P><STRONG><a name="[20f]"></a>HAL_MDMA_Abort</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort (via Veneer)
</UL>

<P><STRONG><a name="[204]"></a>HAL_MDMA_Abort_IT</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort_IT (via Veneer)
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_IRQHandler (via Veneer)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_DMAError (via Veneer)
</UL>

<P><STRONG><a name="[30e]"></a>HAL_MDMA_PollForTransfer</STRONG> (Thumb, 474 bytes, Stack size 40 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>

<P><STRONG><a name="[807]"></a>HAL_MDMA_GenerateSWRequest</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)

<P><STRONG><a name="[808]"></a>HAL_MDMA_IRQHandler</STRONG> (Thumb, 418 bytes, Stack size 32 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)

<P><STRONG><a name="[809]"></a>HAL_MDMA_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)

<P><STRONG><a name="[80a]"></a>HAL_MDMA_GetError</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_mdma.o(.text), UNUSED)

<P><STRONG><a name="[80b]"></a>FMC_NORSRAM_Init</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)

<P><STRONG><a name="[80c]"></a>FMC_NORSRAM_DeInit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)

<P><STRONG><a name="[80d]"></a>FMC_NORSRAM_Timing_Init</STRONG> (Thumb, 118 bytes, Stack size 20 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)

<P><STRONG><a name="[80e]"></a>FMC_NORSRAM_Extended_Timing_Init</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)

<P><STRONG><a name="[80f]"></a>FMC_NORSRAM_WriteOperation_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)

<P><STRONG><a name="[810]"></a>FMC_NORSRAM_WriteOperation_Disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)

<P><STRONG><a name="[811]"></a>FMC_NAND_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)

<P><STRONG><a name="[812]"></a>FMC_NAND_CommonSpace_Timing_Init</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)

<P><STRONG><a name="[813]"></a>FMC_NAND_AttributeSpace_Timing_Init</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)

<P><STRONG><a name="[814]"></a>FMC_NAND_DeInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)

<P><STRONG><a name="[815]"></a>FMC_NAND_ECC_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)

<P><STRONG><a name="[816]"></a>FMC_NAND_ECC_Disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)

<P><STRONG><a name="[30f]"></a>FMC_NAND_GetECC</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>

<P><STRONG><a name="[310]"></a>FMC_SDRAM_Init</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, stm32h7xx_ll_fmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[311]"></a>FMC_SDRAM_Timing_Init</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, stm32h7xx_ll_fmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FMC_SDRAM_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[313]"></a>FMC_SDRAM_DeInit</STRONG> (Thumb, 40 bytes, Stack size 4 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_DeInit
</UL>

<P><STRONG><a name="[31b]"></a>FMC_SDRAM_WriteProtection_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_WriteProtection_Enable
</UL>

<P><STRONG><a name="[31d]"></a>FMC_SDRAM_WriteProtection_Disable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_WriteProtection_Disable
</UL>

<P><STRONG><a name="[31e]"></a>FMC_SDRAM_SendCommand</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32h7xx_ll_fmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FMC_SDRAM_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
</UL>

<P><STRONG><a name="[31f]"></a>FMC_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
</UL>

<P><STRONG><a name="[320]"></a>FMC_SDRAM_SetAutoRefreshNumber</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SetAutoRefreshNumber
</UL>

<P><STRONG><a name="[322]"></a>FMC_SDRAM_GetModeStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_ll_fmc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_GetModeStatus
</UL>

<P><STRONG><a name="[1b2]"></a>HAL_SDRAM_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32h7xx_hal_sdram.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_SDRAM_Init &rArr; HAL_SDRAM_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit (via Veneer)
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Timing_Init
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init (via Veneer)
</UL>

<P><STRONG><a name="[312]"></a>HAL_SDRAM_DeInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32h7xx_hal_sdram.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspDeInit (via Veneer)
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_DeInit
</UL>

<P><STRONG><a name="[315]"></a>HAL_SDRAM_RefreshErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_sdram.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_IRQHandler
</UL>

<P><STRONG><a name="[314]"></a>HAL_SDRAM_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32h7xx_hal_sdram.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_RefreshErrorCallback
</UL>

<P><STRONG><a name="[317]"></a>HAL_SDRAM_DMA_XferCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_sdram.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_DMACplt
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_DMACpltProt
</UL>

<P><STRONG><a name="[316]"></a>HAL_SDRAM_DMA_XferErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_sdram.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_DMAError
</UL>

<P><STRONG><a name="[817]"></a>HAL_SDRAM_Read_8b</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, stm32h7xx_hal_sdram.o(.text), UNUSED)

<P><STRONG><a name="[818]"></a>HAL_SDRAM_Write_8b</STRONG> (Thumb, 96 bytes, Stack size 4 bytes, stm32h7xx_hal_sdram.o(.text), UNUSED)

<P><STRONG><a name="[819]"></a>HAL_SDRAM_Read_16b</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, stm32h7xx_hal_sdram.o(.text), UNUSED)

<P><STRONG><a name="[81a]"></a>HAL_SDRAM_Write_16b</STRONG> (Thumb, 126 bytes, Stack size 12 bytes, stm32h7xx_hal_sdram.o(.text), UNUSED)

<P><STRONG><a name="[81b]"></a>HAL_SDRAM_Read_32b</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, stm32h7xx_hal_sdram.o(.text), UNUSED)

<P><STRONG><a name="[81c]"></a>HAL_SDRAM_Write_32b</STRONG> (Thumb, 96 bytes, Stack size 4 bytes, stm32h7xx_hal_sdram.o(.text), UNUSED)

<P><STRONG><a name="[318]"></a>HAL_SDRAM_Read_DMA</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32h7xx_hal_sdram.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Start_IT
</UL>

<P><STRONG><a name="[319]"></a>HAL_SDRAM_Write_DMA</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32h7xx_hal_sdram.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Start_IT
</UL>

<P><STRONG><a name="[31a]"></a>HAL_SDRAM_WriteProtection_Enable</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32h7xx_hal_sdram.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_WriteProtection_Enable
</UL>

<P><STRONG><a name="[31c]"></a>HAL_SDRAM_WriteProtection_Disable</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32h7xx_hal_sdram.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_WriteProtection_Disable
</UL>

<P><STRONG><a name="[1b3]"></a>HAL_SDRAM_SendCommand</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32h7xx_hal_sdram.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init (via Veneer)
</UL>

<P><STRONG><a name="[1b5]"></a>HAL_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32h7xx_hal_sdram.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SDRAM_ProgramRefreshRate
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_ProgramRefreshRate
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init (via Veneer)
</UL>

<P><STRONG><a name="[1b4]"></a>HAL_SDRAM_SetAutoRefreshNumber</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32h7xx_hal_sdram.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SDRAM_SetAutoRefreshNumber
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_SetAutoRefreshNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init (via Veneer)
</UL>

<P><STRONG><a name="[321]"></a>HAL_SDRAM_GetModeStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_hal_sdram.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_GetModeStatus
</UL>

<P><STRONG><a name="[81d]"></a>HAL_SDRAM_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_sdram.o(.text), UNUSED)

<P><STRONG><a name="[2ea]"></a>HAL_LTDC_Init</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[323]"></a>HAL_LTDC_DeInit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspDeInit
</UL>

<P><STRONG><a name="[326]"></a>HAL_LTDC_ReloadEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[325]"></a>HAL_LTDC_LineEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[324]"></a>HAL_LTDC_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[1bd]"></a>HAL_LTDC_IRQHandler</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, stm32h7xx_hal_ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_LTDC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ErrorCallback
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ReloadEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler (via Veneer)
</UL>

<P><STRONG><a name="[2eb]"></a>HAL_LTDC_ConfigLayer</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, stm32h7xx_hal_ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[81e]"></a>HAL_LTDC_ConfigColorKeying</STRONG> (Thumb, 82 bytes, Stack size 4 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[81f]"></a>HAL_LTDC_ConfigCLUT</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[820]"></a>HAL_LTDC_EnableColorKeying</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[821]"></a>HAL_LTDC_DisableColorKeying</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[822]"></a>HAL_LTDC_EnableCLUT</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[823]"></a>HAL_LTDC_DisableCLUT</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[824]"></a>HAL_LTDC_EnableDither</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[825]"></a>HAL_LTDC_DisableDither</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[328]"></a>HAL_LTDC_SetWindowSize</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[329]"></a>HAL_LTDC_SetWindowPosition</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[32a]"></a>HAL_LTDC_SetPixelFormat</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[32b]"></a>HAL_LTDC_SetAlpha</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[32c]"></a>HAL_LTDC_SetAddress</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[826]"></a>HAL_LTDC_SetPitch</STRONG> (Thumb, 162 bytes, Stack size 12 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[827]"></a>HAL_LTDC_ProgramLineEvent</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[828]"></a>HAL_LTDC_Reload</STRONG> (Thumb, 62 bytes, Stack size 4 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[32d]"></a>HAL_LTDC_ConfigLayer_NoReload</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[32e]"></a>HAL_LTDC_SetWindowSize_NoReload</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[32f]"></a>HAL_LTDC_SetWindowPosition_NoReload</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[330]"></a>HAL_LTDC_SetPixelFormat_NoReload</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[331]"></a>HAL_LTDC_SetAlpha_NoReload</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[332]"></a>HAL_LTDC_SetAddress_NoReload</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
</UL>

<P><STRONG><a name="[829]"></a>HAL_LTDC_SetPitch_NoReload</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[82a]"></a>HAL_LTDC_ConfigColorKeying_NoReload</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[82b]"></a>HAL_LTDC_EnableColorKeying_NoReload</STRONG> (Thumb, 66 bytes, Stack size 4 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[82c]"></a>HAL_LTDC_DisableColorKeying_NoReload</STRONG> (Thumb, 66 bytes, Stack size 4 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[82d]"></a>HAL_LTDC_EnableCLUT_NoReload</STRONG> (Thumb, 66 bytes, Stack size 4 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[82e]"></a>HAL_LTDC_DisableCLUT_NoReload</STRONG> (Thumb, 66 bytes, Stack size 4 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[82f]"></a>HAL_LTDC_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[830]"></a>HAL_LTDC_GetError</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_ltdc.o(.text), UNUSED)

<P><STRONG><a name="[333]"></a>HAL_SAI_Init</STRONG> (Thumb, 862 bytes, Stack size 40 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_SAI_Init &rArr; HAL_SAI_MspInit &rArr; HAL_DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq (via Veneer)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetREVID (via Veneer)
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_MspInit
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_InitProtocol
</UL>

<P><STRONG><a name="[2f0]"></a>HAL_SAI_InitProtocol</STRONG> (Thumb, 396 bytes, Stack size 40 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = HAL_SAI_InitProtocol &rArr; HAL_SAI_Init &rArr; HAL_SAI_MspInit &rArr; HAL_DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI1_Config
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SAI1_Init
</UL>

<P><STRONG><a name="[335]"></a>HAL_SAI_DeInit</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_SAI_DeInit &rArr; HAL_SAI_MspDeInit &rArr; HAL_DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_MspDeInit
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayer
</UL>

<P><STRONG><a name="[336]"></a>HAL_SAI_Transmit</STRONG> (Thumb, 514 bytes, Stack size 32 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>

<P><STRONG><a name="[337]"></a>HAL_SAI_Receive</STRONG> (Thumb, 380 bytes, Stack size 32 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>

<P><STRONG><a name="[339]"></a>HAL_SAI_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_DMATxCplt
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Transmit_IT8Bit
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Transmit_IT16Bit
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Transmit_IT32Bit
</UL>

<P><STRONG><a name="[33a]"></a>HAL_SAI_Transmit_IT</STRONG> (Thumb, 284 bytes, Stack size 24 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_InterruptFlag
</UL>

<P><STRONG><a name="[33b]"></a>HAL_SAI_RxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_DMARxCplt
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Receive_IT8Bit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Receive_IT16Bit
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Receive_IT32Bit
</UL>

<P><STRONG><a name="[33c]"></a>HAL_SAI_Receive_IT</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_InterruptFlag
</UL>

<P><STRONG><a name="[831]"></a>HAL_SAI_DMAPause</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)

<P><STRONG><a name="[832]"></a>HAL_SAI_DMAResume</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)

<P><STRONG><a name="[33d]"></a>HAL_SAI_DMAStop</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Disable
</UL>

<P><STRONG><a name="[33e]"></a>HAL_SAI_Abort</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_IRQHandler
</UL>

<P><STRONG><a name="[340]"></a>HAL_SAI_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_IRQHandler
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_DMAAbort
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_DMAError
</UL>

<P><STRONG><a name="[341]"></a>HAL_SAI_TxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_DMATxHalfCplt
</UL>

<P><STRONG><a name="[342]"></a>HAL_SAI_Transmit_DMA</STRONG> (Thumb, 258 bytes, Stack size 24 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_InterruptFlag
</UL>

<P><STRONG><a name="[343]"></a>HAL_SAI_RxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_DMARxHalfCplt
</UL>

<P><STRONG><a name="[344]"></a>HAL_SAI_Receive_DMA</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_InterruptFlag
</UL>

<P><STRONG><a name="[833]"></a>HAL_SAI_EnableTxMuteMode</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)

<P><STRONG><a name="[834]"></a>HAL_SAI_DisableTxMuteMode</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)

<P><STRONG><a name="[835]"></a>HAL_SAI_EnableRxMuteMode</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)

<P><STRONG><a name="[836]"></a>HAL_SAI_DisableRxMuteMode</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)

<P><STRONG><a name="[345]"></a>HAL_SAI_IRQHandler</STRONG> (Thumb, 546 bytes, Stack size 16 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_ErrorCallback
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Abort
</UL>

<P><STRONG><a name="[837]"></a>HAL_SAI_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)

<P><STRONG><a name="[838]"></a>HAL_SAI_GetError</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_sai.o(.text), UNUSED)

<P><STRONG><a name="[35e]"></a>SDMMC_Init</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDMMC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigWideBusOperation
</UL>

<P><STRONG><a name="[361]"></a>SDMMC_ReadFIFO</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_UltraHighSpeed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_HighSpeed
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigSpeedBusOperation
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardStatus
</UL>

<P><STRONG><a name="[36f]"></a>SDMMC_WriteFIFO</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks
</UL>

<P><STRONG><a name="[363]"></a>SDMMC_PowerState_ON</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>

<P><STRONG><a name="[839]"></a>SDMMC_PowerState_Cycle</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text), UNUSED)

<P><STRONG><a name="[36e]"></a>SDMMC_PowerState_OFF</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_DeInit
</UL>

<P><STRONG><a name="[368]"></a>SDMMC_GetPowerState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>

<P><STRONG><a name="[83a]"></a>SDMMC_SendCommand</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32h7xx_ll_sdmmc.o(.text), UNUSED)

<P><STRONG><a name="[83b]"></a>SDMMC_GetCommandResponse</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text), UNUSED)

<P><STRONG><a name="[35c]"></a>SDMMC_GetResponse</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Abort_IT
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Abort
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigSpeedBusOperation
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Erase
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardStatus
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigWideBusOperation
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardState
</UL>

<P><STRONG><a name="[360]"></a>SDMMC_ConfigData</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDMMC_ConfigData
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_UltraHighSpeed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_HighSpeed
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigSpeedBusOperation
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks_DMA
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks_DMA
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks_IT
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks_IT
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardStatus
</UL>

<P><STRONG><a name="[83c]"></a>SDMMC_GetDataCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text), UNUSED)

<P><STRONG><a name="[83d]"></a>SDMMC_GetFIFOCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text), UNUSED)

<P><STRONG><a name="[83e]"></a>SDMMC_SetSDMMCReadWaitMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text), UNUSED)

<P><STRONG><a name="[347]"></a>SDMMC_CmdBlockLength</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDMMC_CmdBlockLength &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_UltraHighSpeed
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_HighSpeed
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigSpeedBusOperation
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardStatus
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigWideBusOperation
</UL>

<P><STRONG><a name="[349]"></a>SDMMC_CmdReadSingleBlock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDMMC_CmdReadSingleBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks_DMA
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks_IT
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks
</UL>

<P><STRONG><a name="[34a]"></a>SDMMC_CmdReadMultiBlock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDMMC_CmdReadMultiBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks_DMA
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks_IT
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks
</UL>

<P><STRONG><a name="[34b]"></a>SDMMC_CmdWriteSingleBlock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDMMC_CmdWriteSingleBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks_DMA
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks_IT
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks
</UL>

<P><STRONG><a name="[34c]"></a>SDMMC_CmdWriteMultiBlock</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDMMC_CmdWriteMultiBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks_DMA
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks_IT
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks
</UL>

<P><STRONG><a name="[34d]"></a>SDMMC_CmdSDEraseStartAdd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Erase
</UL>

<P><STRONG><a name="[34e]"></a>SDMMC_CmdSDEraseEndAdd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Erase
</UL>

<P><STRONG><a name="[34f]"></a>SDMMC_CmdEraseStartAdd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>

<P><STRONG><a name="[350]"></a>SDMMC_CmdEraseEndAdd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>

<P><STRONG><a name="[351]"></a>SDMMC_CmdErase</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Erase
</UL>

<P><STRONG><a name="[352]"></a>SDMMC_CmdStopTransfer</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SDMMC_CmdStopTransfer &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Abort_IT
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Abort
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_WriteBlocks
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ReadBlocks
</UL>

<P><STRONG><a name="[353]"></a>SDMMC_CmdSelDesel</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDMMC_CmdSelDesel &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>

<P><STRONG><a name="[364]"></a>SDMMC_CmdGoIdleState</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>

<P><STRONG><a name="[365]"></a>SDMMC_CmdOperCond</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>

<P><STRONG><a name="[354]"></a>SDMMC_CmdAppCommand</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDMMC_CmdAppCommand &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardStatus
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigWideBusOperation
</UL>

<P><STRONG><a name="[366]"></a>SDMMC_CmdAppOperCommand</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>

<P><STRONG><a name="[355]"></a>SDMMC_CmdBusWidth</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDMMC_CmdBusWidth &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigWideBusOperation
</UL>

<P><STRONG><a name="[356]"></a>SDMMC_CmdSendSCR</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDMMC_CmdSendSCR &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
</UL>

<P><STRONG><a name="[369]"></a>SDMMC_CmdSendCID</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>

<P><STRONG><a name="[36b]"></a>SDMMC_CmdSendCSD</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>

<P><STRONG><a name="[36a]"></a>SDMMC_CmdSetRelAdd</STRONG> (Thumb, 174 bytes, Stack size 12 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SDMMC_CmdSetRelAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>

<P><STRONG><a name="[357]"></a>SDMMC_CmdSendStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDMMC_CmdSendStatus &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Abort_IT
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Abort
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigSpeedBusOperation
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardState
</UL>

<P><STRONG><a name="[358]"></a>SDMMC_CmdStatusRegister</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDMMC_CmdStatusRegister &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardStatus
</UL>

<P><STRONG><a name="[83f]"></a>SDMMC_CmdOpCondition</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text), UNUSED)

<P><STRONG><a name="[359]"></a>SDMMC_CmdSwitch</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_UltraHighSpeed
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_HighSpeed
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigSpeedBusOperation
</UL>

<P><STRONG><a name="[35a]"></a>SDMMC_CmdVoltageSwitch</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDMMC_CmdVoltageSwitch &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>

<P><STRONG><a name="[35b]"></a>SDMMC_CmdSendEXTCSD</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32h7xx_ll_sdmmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetCmdResp1
</UL>

<P><STRONG><a name="[220]"></a>HAL_SD_GetCardState</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_SD_GetCardState &rArr; SDMMC_CmdSendStatus &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendStatus
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_GetCardState (via Veneer)
</UL>

<P><STRONG><a name="[214]"></a>HAL_SD_ConfigWideBusOperation</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = HAL_SD_ConfigWideBusOperation &rArr; SD_FindSCR &rArr; SDMMC_CmdSendSCR &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_FindSCR
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBusWidth
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdAppCommand
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBlockLength
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetResponse
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_Init (via Veneer)
</UL>

<P><STRONG><a name="[35f]"></a>HAL_SD_GetCardStatus</STRONG> (Thumb, 444 bytes, Stack size 128 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = HAL_SD_GetCardStatus &rArr; SDMMC_CmdStatusRegister &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdStatusRegister
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdAppCommand
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBlockLength
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ConfigData
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetResponse
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ReadFIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
</UL>

<P><STRONG><a name="[36c]"></a>HAL_SD_GetCardCSD</STRONG> (Thumb, 460 bytes, Stack size 12 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_SD_GetCardCSD
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>

<P><STRONG><a name="[367]"></a>HAL_SD_DriveTransceiver_1_8V_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_UltraHighSpeed
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigSpeedBusOperation
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_DeInit
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
</UL>

<P><STRONG><a name="[362]"></a>HAL_SD_InitCard</STRONG> (Thumb, 702 bytes, Stack size 88 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = HAL_SD_InitCard &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_GetPeriphCLKFreq (via Veneer)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdVoltageSwitch
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSetRelAdd
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendCSD
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendCID
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdAppOperCommand
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdAppCommand
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdOperCond
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdGoIdleState
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSelDesel
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBlockLength
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetResponse
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetPowerState
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_PowerState_ON
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_Init
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay (via Veneer)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_DriveTransceiver_1_8V_Callback
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardCSD
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_Init
</UL>

<P><STRONG><a name="[213]"></a>HAL_SD_Init</STRONG> (Thumb, 258 bytes, Stack size 48 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = HAL_SD_Init &rArr; HAL_SD_InitCard &rArr; HAL_RCCEx_GetPeriphCLKFreq &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspInit
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendStatus
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetResponse
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_InitCard
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_GetCardStatus
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigWideBusOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_Init (via Veneer)
</UL>

<P><STRONG><a name="[36d]"></a>HAL_SD_DeInit</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, stm32h7xx_hal_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_MspDeInit
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_PowerState_OFF
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_DriveTransceiver_1_8V_Callback
</UL>

<P><STRONG><a name="[216]"></a>HAL_SD_ReadBlocks</STRONG> (Thumb, 516 bytes, Stack size 64 bytes, stm32h7xx_hal_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdStopTransfer
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdReadMultiBlock
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdReadSingleBlock
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ConfigData
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ReadFIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_ReadBlocks (via Veneer)
</UL>

<P><STRONG><a name="[218]"></a>HAL_SD_WriteBlocks</STRONG> (Thumb, 526 bytes, Stack size 88 bytes, stm32h7xx_hal_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdStopTransfer
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdWriteMultiBlock
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdWriteSingleBlock
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ConfigData
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_WriteFIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_WriteBlocks (via Veneer)
</UL>

<P><STRONG><a name="[370]"></a>HAL_SD_ReadBlocks_IT</STRONG> (Thumb, 208 bytes, Stack size 48 bytes, stm32h7xx_hal_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdReadMultiBlock
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdReadSingleBlock
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ConfigData
</UL>

<P><STRONG><a name="[371]"></a>HAL_SD_WriteBlocks_IT</STRONG> (Thumb, 198 bytes, Stack size 48 bytes, stm32h7xx_hal_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdWriteMultiBlock
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdWriteSingleBlock
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ConfigData
</UL>

<P><STRONG><a name="[21a]"></a>HAL_SD_ReadBlocks_DMA</STRONG> (Thumb, 232 bytes, Stack size 56 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_SD_ReadBlocks_DMA &rArr; SDMMC_CmdReadMultiBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdReadMultiBlock
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdReadSingleBlock
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ConfigData
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_ReadBlocks_DMA (via Veneer)
</UL>

<P><STRONG><a name="[21c]"></a>HAL_SD_WriteBlocks_DMA</STRONG> (Thumb, 228 bytes, Stack size 56 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_SD_WriteBlocks_DMA &rArr; SDMMC_CmdWriteMultiBlock &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdWriteMultiBlock
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdWriteSingleBlock
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ConfigData
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_WriteBlocks_DMA (via Veneer)
</UL>

<P><STRONG><a name="[21e]"></a>HAL_SD_Erase</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, stm32h7xx_hal_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdErase
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSDEraseEndAdd
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSDEraseStartAdd
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_Erase (via Veneer)
</UL>

<P><STRONG><a name="[376]"></a>HAL_SDEx_Read_DMADoubleBuf0CpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
</UL>

<P><STRONG><a name="[373]"></a>HAL_SDEx_Write_DMADoubleBuf0CpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
</UL>

<P><STRONG><a name="[375]"></a>HAL_SDEx_Read_DMADoubleBuf1CpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
</UL>

<P><STRONG><a name="[374]"></a>HAL_SDEx_Write_DMADoubleBuf1CpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
</UL>

<P><STRONG><a name="[372]"></a>HAL_SD_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_IRQHandler
</UL>

<P><STRONG><a name="[1bc]"></a>HAL_SD_IRQHandler</STRONG> (Thumb, 632 bytes, Stack size 32 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_SD_IRQHandler &rArr; SDMMC_CmdStopTransfer &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdStopTransfer
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_WriteFIFO
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ReadFIFO
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ErrorCallback
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDEx_Write_DMADoubleBuf1CpltCallback
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDEx_Read_DMADoubleBuf1CpltCallback
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDEx_Write_DMADoubleBuf0CpltCallback
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDEx_Read_DMADoubleBuf0CpltCallback
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_RxCpltCallback (via Veneer)
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_TxCpltCallback (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC1_IRQHandler (via Veneer)
</UL>

<P><STRONG><a name="[840]"></a>HAL_SD_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32h7xx_hal_sd.o(.text), UNUSED)

<P><STRONG><a name="[841]"></a>HAL_SD_GetError</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32h7xx_hal_sd.o(.text), UNUSED)

<P><STRONG><a name="[842]"></a>HAL_SD_GetCardCID</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, stm32h7xx_hal_sd.o(.text), UNUSED)

<P><STRONG><a name="[222]"></a>HAL_SD_GetCardInfo</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SD_GetCardInfo (via Veneer)
</UL>

<P><STRONG><a name="[378]"></a>HAL_SD_ConfigSpeedBusOperation</STRONG> (Thumb, 848 bytes, Stack size 144 bytes, stm32h7xx_hal_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_UltraHighSpeed
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_HighSpeed
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayBlock_Enable (via Veneer)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSwitch
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendStatus
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBlockLength
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ConfigData
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetResponse
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ReadFIFO
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_DriveTransceiver_1_8V_Callback
</UL>

<P><STRONG><a name="[37a]"></a>HAL_SD_Abort</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, stm32h7xx_hal_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendStatus
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdStopTransfer
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetResponse
</UL>

<P><STRONG><a name="[37b]"></a>HAL_SD_Abort_IT</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, stm32h7xx_hal_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendStatus
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdStopTransfer
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_GetResponse
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_AbortCallback (via Veneer)
</UL>

<P><STRONG><a name="[37c]"></a>GT9147_WR_Reg</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gt9147.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
</UL>

<P><STRONG><a name="[381]"></a>GT9147_Send_Cfg</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, gt9147.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GT9147_Send_Cfg &rArr; CT_IIC_Wait_Ack
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
</UL>

<P><STRONG><a name="[382]"></a>GT9147_RD_Reg</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gt9147.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GT9147_RD_Reg &rArr; CT_IIC_Read_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Scan
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
</UL>

<P><STRONG><a name="[2]"></a>GT9147_Init</STRONG> (Thumb, 356 bytes, Stack size 64 bytes, gt9147.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GT9147_Init &rArr; CT_IIC_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin (via Veneer)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init (via Veneer)
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay (via Veneer)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Init
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_RD_Reg
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Send_Cfg
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_scan (via Veneer)
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt9147.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>GT9147_Scan</STRONG> (Thumb, 618 bytes, Stack size 56 bytes, gt9147.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GT9147_Scan &rArr; GT9147_RD_Reg &rArr; CT_IIC_Read_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_RD_Reg
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_scan (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gt9147.o(.data)
</UL>
<P><STRONG><a name="[843]"></a>CT_Delay</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ctiic.o(.text), UNUSED)

<P><STRONG><a name="[844]"></a>CT_Delay1</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ctiic.o(.text), UNUSED)

<P><STRONG><a name="[384]"></a>CT_IIC_Init</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, ctiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CT_IIC_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
</UL>

<P><STRONG><a name="[37d]"></a>CT_IIC_Start</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, ctiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CT_IIC_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Scan
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_RD_Reg
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Send_Cfg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_WR_Reg
</UL>

<P><STRONG><a name="[380]"></a>CT_IIC_Stop</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, ctiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CT_IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Scan
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_RD_Reg
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Send_Cfg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_WR_Reg
</UL>

<P><STRONG><a name="[37f]"></a>CT_IIC_Wait_Ack</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, ctiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CT_IIC_Wait_Ack
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin (via Veneer)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Scan
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_RD_Reg
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Send_Cfg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_WR_Reg
</UL>

<P><STRONG><a name="[387]"></a>CT_IIC_Ack</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, ctiic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin (via Veneer)
</UL>

<P><STRONG><a name="[388]"></a>CT_IIC_NAck</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, ctiic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin (via Veneer)
</UL>

<P><STRONG><a name="[37e]"></a>CT_IIC_Send_Byte</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, ctiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CT_IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Scan
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Init
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_RD_Reg
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Send_Cfg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_WR_Reg
</UL>

<P><STRONG><a name="[383]"></a>CT_IIC_Read_Byte</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, ctiic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CT_IIC_Read_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin (via Veneer)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_Scan
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GT9147_RD_Reg
</UL>

<P><STRONG><a name="[189]"></a>AudioPlayer</STRONG> (Thumb, 796 bytes, Stack size 680 bytes, musicdecode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1520<LI>Call Chain = AudioPlayer &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ASI_DMA_DoubleBufferTransferStart
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI1_Config
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read (via Veneer)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open (via Veneer)
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close (via Veneer)
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_DeInit
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_recv (via Veneer)
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mq_create (via Veneer)
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek (via Veneer)
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioTask (via Veneer)
</UL>

<P><STRONG><a name="[192]"></a>lv_demo_widgets</STRONG> (Thumb, 514 bytes, Stack size 32 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = lv_demo_widgets &rArr; profile_create &rArr; lv_textarea_set_password_mode &rArr; pwd_char_hider &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_primary
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab_btns
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_font
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_left
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main (via Veneer)
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_opa
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_font
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LvglTask (via Veneer)
</UL>

<P><STRONG><a name="[3ff]"></a>lv_disp_get_scr_act</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_disp_get_scr_act
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[41e]"></a>lv_disp_get_scr_prev</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_disp_get_scr_prev
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
</UL>

<P><STRONG><a name="[41f]"></a>lv_disp_load_scr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_disp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>

<P><STRONG><a name="[3ef]"></a>lv_disp_get_layer_top</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_disp_get_layer_top
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_event_cb
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[421]"></a>lv_disp_get_layer_sys</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_disp_get_layer_sys
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_set_cursor
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[422]"></a>lv_disp_set_theme</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lv_disp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>

<P><STRONG><a name="[424]"></a>lv_disp_get_theme</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_disp_get_theme
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_primary
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_font_small
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_font_normal
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_font_large
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_secondary
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_from_obj
</UL>

<P><STRONG><a name="[425]"></a>lv_disp_set_bg_color</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, lv_disp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>

<P><STRONG><a name="[428]"></a>lv_disp_set_bg_image</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, lv_disp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>

<P><STRONG><a name="[429]"></a>lv_disp_set_bg_opa</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, lv_disp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>

<P><STRONG><a name="[42d]"></a>lv_scr_load_anim</STRONG> (Thumb, 584 bytes, Stack size 168 bytes, lv_disp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_local_style_prop
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
</UL>

<P><STRONG><a name="[430]"></a>lv_disp_get_inactive_time</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_disp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_next
</UL>

<P><STRONG><a name="[433]"></a>lv_disp_trig_activity</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_disp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>

<P><STRONG><a name="[435]"></a>lv_disp_clean_dcache</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lv_disp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>

<P><STRONG><a name="[436]"></a>_lv_disp_get_refr_timer</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_disp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>

<P><STRONG><a name="[60b]"></a>lv_obj_event_base</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lv_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_obj_event_base
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_event
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_event
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
</UL>

<P><STRONG><a name="[43b]"></a>lv_event_send</STRONG> (Thumb, 80 bytes, Stack size 48 bytes, lv_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_anim_ready_cb
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_x_anim
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_y_anim
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_self_height
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_self_width
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_hit_test
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_send_data
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_del
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_down
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_up
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_swap
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_background
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_event
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileview_event_cb
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cont_scroll_end_event_cb
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_update
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_handler
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[398]"></a>lv_event_get_target</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_event.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_event_cb
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_event_cb
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_part_begin_event_cb
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;year_event_cb
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_event
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileview_event_cb
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_event
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btns_value_changed_event_cb
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cont_scroll_end_event_cb
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
</UL>

<P><STRONG><a name="[845]"></a>lv_event_get_current_target</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_event.o(.text), UNUSED)

<P><STRONG><a name="[392]"></a>lv_event_get_code</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_event.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_event_cb
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_chart_event_cb
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_event_cb
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_event_cb
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_event
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileview_event_cb
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_event
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cont_scroll_end_event_cb
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
</UL>

<P><STRONG><a name="[3a8]"></a>lv_event_get_param</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_event.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_chart_event_cb
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_part_begin_event_cb
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_event
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
</UL>

<P><STRONG><a name="[393]"></a>lv_event_get_user_data</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_event.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_event_cb
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_event_cb
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_event_cb
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;year_event_cb
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
</UL>

<P><STRONG><a name="[846]"></a>lv_event_register_id</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_event.o(.text), UNUSED)

<P><STRONG><a name="[48b]"></a>_lv_event_mark_deleted</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lv_event.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
</UL>

<P><STRONG><a name="[3cb]"></a>lv_obj_add_event_cb</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, lv_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_obj_add_event_cb &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_constructor
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_constructor
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
</UL>

<P><STRONG><a name="[43e]"></a>lv_obj_remove_event_cb</STRONG> (Thumb, 314 bytes, Stack size 32 bytes, lv_event.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>

<P><STRONG><a name="[43f]"></a>lv_obj_remove_event_dsc</STRONG> (Thumb, 328 bytes, Stack size 32 bytes, lv_event.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>

<P><STRONG><a name="[493]"></a>lv_event_get_indev</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, lv_event.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[847]"></a>lv_event_get_draw_part_dsc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_event.o(.text), UNUSED)

<P><STRONG><a name="[848]"></a>lv_event_get_clip_area</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lv_event.o(.text), UNUSED)

<P><STRONG><a name="[849]"></a>lv_event_get_old_size</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_event.o(.text), UNUSED)

<P><STRONG><a name="[84a]"></a>lv_event_get_key</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_event.o(.text), UNUSED)

<P><STRONG><a name="[84b]"></a>lv_event_get_scroll_anim</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_event.o(.text), UNUSED)

<P><STRONG><a name="[60e]"></a>lv_event_set_ext_draw_size</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lv_event.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[84c]"></a>lv_event_get_self_size_info</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_event.o(.text), UNUSED)

<P><STRONG><a name="[84d]"></a>lv_event_get_hit_test_info</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_event.o(.text), UNUSED)

<P><STRONG><a name="[84e]"></a>lv_event_get_cover_area</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_event.o(.text), UNUSED)

<P><STRONG><a name="[84f]"></a>lv_event_set_cover_res</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_event.o(.text), UNUSED)

<P><STRONG><a name="[440]"></a>_lv_group_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_group.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[442]"></a>lv_group_create</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lv_group.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
</UL>

<P><STRONG><a name="[444]"></a>lv_group_del</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lv_group.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_indev
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>

<P><STRONG><a name="[850]"></a>lv_group_set_default</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_group.o(.text), UNUSED)

<P><STRONG><a name="[3c5]"></a>lv_group_get_default</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_group.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
</UL>

<P><STRONG><a name="[449]"></a>lv_group_focus_prev</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_group.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lv_group_focus_prev &rArr; focus_next_core &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
</UL>

<P><STRONG><a name="[44b]"></a>lv_group_focus_next</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_group.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lv_group_focus_next &rArr; focus_next_core &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
</UL>

<P><STRONG><a name="[3c6]"></a>lv_group_add_obj</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, lv_group.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = lv_group_add_obj &rArr; focus_next_core &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_tail
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
</UL>

<P><STRONG><a name="[45f]"></a>lv_group_get_focused</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_group.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
</UL>

<P><STRONG><a name="[44e]"></a>lv_group_set_editing</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lv_group.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = lv_group_set_editing &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_indev
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[44f]"></a>lv_group_focus_obj</STRONG> (Thumb, 368 bytes, Stack size 24 bytes, lv_group.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = lv_group_focus_obj &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_indev
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_swap_obj
</UL>

<P><STRONG><a name="[451]"></a>lv_group_swap_obj</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, lv_group.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_down
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_up
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_swap
</UL>

<P><STRONG><a name="[452]"></a>lv_group_remove_obj</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, lv_group.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = lv_group_remove_obj &rArr; focus_next_core &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_indev
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
</UL>

<P><STRONG><a name="[453]"></a>lv_group_remove_all_objs</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lv_group.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_indev
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>

<P><STRONG><a name="[851]"></a>lv_group_focus_freeze</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_group.o(.text), UNUSED)

<P><STRONG><a name="[454]"></a>lv_group_send_data</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lv_group.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = lv_group_send_data &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
</UL>

<P><STRONG><a name="[852]"></a>lv_group_set_focus_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_group.o(.text), UNUSED)

<P><STRONG><a name="[853]"></a>lv_group_set_refocus_policy</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_group.o(.text), UNUSED)

<P><STRONG><a name="[854]"></a>lv_group_set_wrap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_group.o(.text), UNUSED)

<P><STRONG><a name="[855]"></a>lv_group_get_focus_cb</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_group.o(.text), UNUSED)

<P><STRONG><a name="[461]"></a>lv_group_get_editing</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_group.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[856]"></a>lv_group_get_wrap</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_group.o(.text), UNUSED)

<P><STRONG><a name="[455]"></a>lv_group_get_obj_count</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_group.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_len
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
</UL>

<P><STRONG><a name="[45a]"></a>lv_indev_search_obj</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, lv_indev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + In Cycle
<LI>Call Chain = lv_indev_search_obj &rArr;  lv_indev_search_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_hit_test
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
</UL>

<P><STRONG><a name="[10b]"></a>lv_indev_read_timer_cb</STRONG> (Thumb, 2330 bytes, Stack size 56 bytes, lv_indev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 420<LI>Call Chain = lv_indev_read_timer_cb &rArr; indev_proc_press &rArr; _lv_indev_scroll_handler &rArr; lv_obj_scroll_by &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_editable
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_read
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_obj_count
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_send_data
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_focused
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_next
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_prev
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_hal_indev.o(.text)
</UL>
<P><STRONG><a name="[857]"></a>lv_indev_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_indev.o(.text), UNUSED)

<P><STRONG><a name="[3f1]"></a>lv_indev_get_act</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_indev.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[3f2]"></a>lv_indev_get_type</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_indev.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_indev
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[3f8]"></a>lv_indev_reset</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, lv_indev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_indev_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>

<P><STRONG><a name="[462]"></a>lv_indev_reset_long_press</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_indev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_indev_reset_long_press
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[463]"></a>lv_indev_set_cursor</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lv_indev.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
</UL>

<P><STRONG><a name="[858]"></a>lv_indev_set_group</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_indev.o(.text), UNUSED)

<P><STRONG><a name="[859]"></a>lv_indev_set_button_points</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_indev.o(.text), UNUSED)

<P><STRONG><a name="[60d]"></a>lv_indev_get_point</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lv_indev.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[85a]"></a>lv_indev_get_gesture_dir</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_indev.o(.text), UNUSED)

<P><STRONG><a name="[85b]"></a>lv_indev_get_key</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_indev.o(.text), UNUSED)

<P><STRONG><a name="[4d3]"></a>lv_indev_get_scroll_dir</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lv_indev.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
</UL>

<P><STRONG><a name="[48e]"></a>lv_indev_get_scroll_obj</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_indev.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_scrolling
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
</UL>

<P><STRONG><a name="[712]"></a>lv_indev_get_vect</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lv_indev.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[617]"></a>lv_indev_wait_release</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_indev.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
</UL>

<P><STRONG><a name="[467]"></a>lv_indev_get_obj_act</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_indev.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[85c]"></a>lv_indev_get_read_timer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_indev.o(.text), UNUSED)

<P><STRONG><a name="[45d]"></a>_lv_indev_scroll_handler</STRONG> (Thumb, 1158 bytes, Stack size 96 bytes, lv_indev_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = _lv_indev_scroll_handler &rArr; lv_obj_scroll_by &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_y
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_x
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_dir
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
</UL>

<P><STRONG><a name="[459]"></a>_lv_indev_scroll_throw_handler</STRONG> (Thumb, 698 bytes, Stack size 48 bytes, lv_indev_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = _lv_indev_scroll_throw_handler &rArr; lv_obj_scroll_by &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_y
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_x
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_release
</UL>

<P><STRONG><a name="[713]"></a>lv_indev_scroll_throw_predict</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, lv_indev_scroll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[473]"></a>lv_indev_scroll_get_snap_dist</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_indev_scroll.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_snap
</UL>

<P><STRONG><a name="[85d]"></a>lv_is_initialized</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj.o(.text), UNUSED)

<P><STRONG><a name="[190]"></a>lv_init</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = lv_init &rArr; lv_extra_init &rArr; lv_grid_init &rArr; lv_layout_register &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_init
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_set_size
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_extra_init
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_timer_core_init (via Veneer)
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_init
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_init
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_fs_init
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_anim_core_init
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_group_init
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LvglTask (via Veneer)
</UL>

<P><STRONG><a name="[39e]"></a>lv_obj_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_obj_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_meter_box
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_shop_item
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
</UL>

<P><STRONG><a name="[439]"></a>lv_obj_is_valid</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_next
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_valid_child
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_local_style_prop
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_password_mode
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_state
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options_static
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_zoom_x
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_type
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_series_color
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_point_count
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_next_value
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_div_line_count
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_axis_tick
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_type
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_series_next
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_add_series
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_value
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_placeholder_text
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_one_line
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_set_textarea
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_range
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_width
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_cnt
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_add_cell_ctrl
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_set_points
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_ext_click_area
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_visible
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y2
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x2
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_layout
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_content_height
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_content_width
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_event_dsc
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_event_cb
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_down
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_up
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_swap
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_background
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del_async
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_id
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;walk_core
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del_async_cb
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fade_in_anim_ready
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scrollbar_mode
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_selected
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_selected
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_selected_btn
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl_all
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_has_btn_ctrl
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_selected_btn
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_btn_text
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_x_array
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_y_array
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_ext_x_array
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_ext_y_array
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_value_by_id2
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_value_by_id
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_next_value2
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_all_value
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_cursor_point
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_cursor_pos
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_add_cursor
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_x_start_point
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_hide_series
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_remove_series
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_point_count
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_zoom_y
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_zoom_x
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_zoom_y
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_update_mode
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_range
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_refresh
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_text
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_one_line
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_cursor_pos
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_right
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_left
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_ctrl_map
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_click_pos
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_one_checked
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_rotation
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_bg_angles
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_cut_text
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_selection_end
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_selection_start
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_recolor
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_long_mode
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_sel_end
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_sel_start
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_recolor
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_size_mode
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_antialias
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_zoom
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_pivot
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_angle
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_offset_y
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_offset_x
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_src
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_size_mode
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_offset_y
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_offset_x
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_static
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_dir
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_selected_highlight
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_symbol
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_selected_str
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_option_cnt
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_options
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_text
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_list
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_selected_highlight
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_symbol
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_dir
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_clear_options
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_add_option
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_text
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_constructor
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_one_checked
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_map
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_width
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_max_value
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_min_value
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_start_value
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_mode
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_mode
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_mode
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_max_value
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_min_value
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_value
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_bg_angle_end
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_bg_angle_start
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_angle_end
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_angle_start
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_change_rate
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_range
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_mode
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_value
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_bg_end_angle
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_bg_start_angle
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_angles
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_password_show_time
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_text_selection
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_text_is_selected
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_password_mode
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_cursor_click_pos
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_placeholder_text
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_align
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_label
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_password_show_time
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text_selection
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_insert_replace
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_max_length
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_accepted_chars
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char_forward
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_accepted_chars
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_max_length
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_has_cell_ctrl
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_get_col_width
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_get_col_cnt
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_get_row_cnt
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_get_cell_value
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_clear_cell_ctrl
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value_fmt
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_row_cnt
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_is_dragged
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_get_option_cnt
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_get_options
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_get_selected_str
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_get_selected
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_visible_row_count
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_selected
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_get_y_invert
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_set_y_invert
</UL>

<P><STRONG><a name="[438]"></a>lv_obj_has_class</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_obj.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_local_style_prop
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_password_mode
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options_static
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_zoom_x
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_type
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_series_color
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_point_count
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_next_value
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_div_line_count
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_axis_tick
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_type
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_series_next
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_add_series
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_value
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_placeholder_text
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_one_line
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_set_textarea
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_range
<LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_width
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_cnt
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_add_cell_ctrl
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_set_points
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_ext_click_area
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_visible
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y2
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x2
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_layout
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_content_height
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_content_width
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_event_dsc
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_event_cb
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_down
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_up
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_swap
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_background
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del_async
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_id
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;walk_core
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del_async_cb
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fade_in_anim_ready
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scrollbar_mode
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_selected
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_selected
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_selected_btn
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl_all
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_has_btn_ctrl
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_selected_btn
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_btn_text
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_x_array
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_y_array
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_ext_x_array
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_ext_y_array
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_value_by_id2
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_value_by_id
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_next_value2
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_all_value
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_cursor_point
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_cursor_pos
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_add_cursor
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_x_start_point
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_hide_series
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_remove_series
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_point_count
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_zoom_y
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_zoom_x
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_zoom_y
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_update_mode
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_range
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_refresh
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_text
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_one_line
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_cursor_pos
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_right
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_left
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_ctrl_map
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_click_pos
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_one_checked
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_rotation
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_bg_angles
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_cut_text
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_selection_end
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_selection_start
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_recolor
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_long_mode
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_sel_end
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_sel_start
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_recolor
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_size_mode
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_antialias
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_zoom
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_pivot
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_angle
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_offset_y
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_offset_x
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_get_src
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_size_mode
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_offset_y
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_offset_x
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_static
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_dir
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_selected_highlight
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_symbol
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_selected_str
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_option_cnt
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_options
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_text
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_list
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_selected_highlight
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_symbol
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_dir
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_clear_options
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_add_option
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_text
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_constructor
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_one_checked
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_map
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_width
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_max_value
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_min_value
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_start_value
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_mode
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_mode
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_mode
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_max_value
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_min_value
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_value
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_bg_angle_end
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_bg_angle_start
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_angle_end
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_get_angle_start
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_change_rate
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_range
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_mode
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_value
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_bg_end_angle
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_bg_start_angle
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_angles
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_password_show_time
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_text_selection
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_text_is_selected
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_password_mode
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_cursor_click_pos
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_placeholder_text
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_align
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_label
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_password_show_time
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text_selection
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_insert_replace
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_max_length
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_accepted_chars
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char_forward
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_accepted_chars
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_max_length
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_has_cell_ctrl
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_get_col_width
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_get_col_cnt
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_get_row_cnt
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_get_cell_value
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_clear_cell_ctrl
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value_fmt
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_row_cnt
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_is_dragged
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_get_option_cnt
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_get_options
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_get_selected_str
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_get_selected
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_visible_row_count
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_selected
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_get_y_invert
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_set_y_invert
</UL>

<P><STRONG><a name="[3c7]"></a>lv_obj_add_flag</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_add_flag &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_set_textarea
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_set_cursor
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_constructor
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_constructor
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_constructor
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_constructor
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_constructor
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_constructor
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_constructor
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_constructor
</UL>

<P><STRONG><a name="[3f0]"></a>lv_obj_clear_flag</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_clear_flag &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_event_cb
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_set_cursor
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_constructor
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_constructor
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinner_constructor
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_constructor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_constructor
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdownlist_constructor
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_constructor
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_constructor
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_constructor
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_constructor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_constructor
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_constructor
</UL>

<P><STRONG><a name="[3fe]"></a>lv_obj_add_state</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_add_state &rArr; lv_obj_set_state &rArr; _lv_obj_style_create_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[3f7]"></a>lv_obj_clear_state</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_obj_clear_state &rArr; lv_obj_set_state &rArr; _lv_obj_style_create_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_set_textarea
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[43a]"></a>lv_obj_has_flag</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_obj_has_flag &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_hit_test
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
</UL>

<P><STRONG><a name="[46b]"></a>lv_obj_has_flag_any</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_obj_has_flag_any &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
</UL>

<P><STRONG><a name="[457]"></a>lv_obj_get_state</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_obj_get_state &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
</UL>

<P><STRONG><a name="[3ea]"></a>lv_obj_has_state</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_obj_has_state &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
</UL>

<P><STRONG><a name="[44c]"></a>lv_obj_get_group</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_obj_get_group &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_swap_obj
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[43c]"></a>lv_obj_allocate_spec_attr</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_x_anim
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_y_anim
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_ext_click_area
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scroll_snap_y
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scroll_snap_x
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scroll_dir
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scrollbar_mode
</UL>

<P><STRONG><a name="[5de]"></a>lv_obj_check_type</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_obj.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply
</UL>

<P><STRONG><a name="[85e]"></a>lv_obj_get_class</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_obj.o(.text), UNUSED)

<P><STRONG><a name="[47d]"></a>lv_obj_class_create_obj</STRONG> (Thumb, 250 bytes, Stack size 24 bytes, lv_obj_class.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_obj_class_create_obj &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_create
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_create
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_header_dropdown_create
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_create
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_create
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_create
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_create
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_create
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_create
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_create
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_create
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_create
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_header_arrow_create
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_create
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_create
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinner_create
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_create
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_add_tile
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_create
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_constructor
</UL>

<P><STRONG><a name="[85f]"></a>lv_obj_is_group_def</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lv_obj_class.o(.text), UNUSED)

<P><STRONG><a name="[47e]"></a>lv_obj_class_init_obj</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, lv_obj_class.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_default
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_construct
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_enable_style_refresh
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_create
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_create
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_header_dropdown_create
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_create
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_create
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_create
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_create
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_create
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_create
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_create
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_create
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_create
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_create
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_header_arrow_create
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_create
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_create
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinner_create
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_create
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_add_tile
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_create
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_create
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_constructor
</UL>

<P><STRONG><a name="[528]"></a>_lv_obj_destruct</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lv_obj_class.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _lv_obj_destruct
</UL>
<BR>[Called By]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>

<P><STRONG><a name="[460]"></a>lv_obj_is_editable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lv_obj_class.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
</UL>

<P><STRONG><a name="[498]"></a>lv_obj_init_draw_rect_dsc</STRONG> (Thumb, 696 bytes, Stack size 32 bytes, lv_obj_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_init_draw_rect_dsc &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_event
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[4a0]"></a>lv_obj_init_draw_label_dsc</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, lv_obj_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = lv_obj_init_draw_label_dsc &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[4a1]"></a>lv_obj_init_draw_img_dsc</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, lv_obj_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = lv_obj_init_draw_img_dsc &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[4a2]"></a>lv_obj_init_draw_line_dsc</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, lv_obj_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = lv_obj_init_draw_line_dsc &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
</UL>

<P><STRONG><a name="[4a3]"></a>lv_obj_init_draw_arc_dsc</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, lv_obj_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = lv_obj_init_draw_arc_dsc &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
</UL>

<P><STRONG><a name="[494]"></a>lv_obj_calculate_ext_draw_size</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, lv_obj_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = lv_obj_calculate_ext_draw_size &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[499]"></a>lv_obj_draw_dsc_init</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lv_obj_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_obj_draw_dsc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_event
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[860]"></a>lv_obj_draw_part_check_type</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_obj_draw.o(.text), UNUSED)

<P><STRONG><a name="[4a9]"></a>_lv_obj_get_ext_draw_size</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_draw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_visible
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
</UL>

<P><STRONG><a name="[408]"></a>lv_obj_refresh_ext_draw_size</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, lv_obj_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = lv_obj_refresh_ext_draw_size &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_axis_tick
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_zoom
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_angle
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_pivot
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[480]"></a>lv_obj_is_layout_positioned</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = lv_obj_is_layout_positioned &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
</UL>

<P><STRONG><a name="[42a]"></a>lv_obj_set_y</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_y
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_y_anim
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_y_anim
</UL>

<P><STRONG><a name="[42b]"></a>lv_obj_set_x</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = lv_obj_set_x &rArr; lv_obj_set_style_x &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_x
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_x_anim
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>

<P><STRONG><a name="[42f]"></a>lv_obj_set_pos</STRONG> (Thumb, 246 bytes, Stack size 32 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = lv_obj_set_pos &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_y
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_x
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_set_cursor
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_tile_constructor
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[4a7]"></a>lv_obj_area_is_visible</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_prev
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_ext_draw_size
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_visible
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
</UL>

<P><STRONG><a name="[4aa]"></a>lv_obj_invalidate_area</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_zoom
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_angle
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_point
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_knob_pos
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_line
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_pivot
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cursor_blink_anim_cb
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
</UL>

<P><STRONG><a name="[3bf]"></a>lv_obj_invalidate</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_ext_draw_size
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_load_scr
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scr_load_anim_start
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_scale_ticks
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_scale_range
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_scale_major_ticks
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_value
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_start_value
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_end_value
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_add_scale_lines
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_add_needle_line
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_add_arc
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_zoom_x
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_type
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_series_color
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_point_count
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_div_line_count
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_axis_tick
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_placeholder_text
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_range
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_set_points
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_antialias
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_x_anim
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_y_anim
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_del
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_down
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_up
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_swap
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_background
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scrollbar_mode
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_point
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_selected
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_set_mode
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_set_hsv
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_ext_x_array
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_ext_y_array
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_next_value2
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_all_value
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_cursor_point
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_cursor_pos
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_hide_series
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_zoom_y
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_update_mode
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_range
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_refresh
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_toggle
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_off
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_on
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_set_brightness
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_set_color
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_add_needle_img
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_rotation
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_update
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_cut_text
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_sel_end
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_sel_start
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ofs_x_anim
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ofs_y_anim
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_size_mode
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_offset_y
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_offset_x
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_selected_highlight
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_symbol
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_dir
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_clear_options
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_add_option
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_text
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_mode
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_anim
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_anim_ready
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value_fmt
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_anim_exec_cb
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_anim_ready
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_set_y_invert
</UL>

<P><STRONG><a name="[4ab]"></a>lv_obj_get_coords</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_obj_get_coords &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_point
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_update
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
</UL>

<P><STRONG><a name="[4ac]"></a>lv_obj_get_content_coords</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lv_obj_get_content_coords &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_increase
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_line
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[ec]"></a>lv_obj_get_height</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_obj_get_height &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_zoom
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_angle
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_pivot
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_constructor
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_flex.o(.text)
</UL>
<P><STRONG><a name="[eb]"></a>lv_obj_get_width</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_obj_get_width &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_event_cb
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_event_cb
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_anim_cb
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_zoom
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_angle
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_knob_pos
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_pivot
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_constructor
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_flex.o(.text)
</UL>
<P><STRONG><a name="[861]"></a>lv_clamp_height</STRONG> (Thumb, 134 bytes, Stack size 4 bytes, lv_obj_pos.o(.text), UNUSED)

<P><STRONG><a name="[4ae]"></a>lv_obj_get_content_height</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = lv_obj_get_content_height &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_point_pos_by_id
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_tile_constructor
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileview_event_cb
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_tile_id
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>

<P><STRONG><a name="[862]"></a>lv_clamp_width</STRONG> (Thumb, 134 bytes, Stack size 4 bytes, lv_obj_pos.o(.text), UNUSED)

<P><STRONG><a name="[41b]"></a>lv_obj_get_content_width</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = lv_obj_get_content_width &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_point
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_point_pos_by_id
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_tile_constructor
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileview_event_cb
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cont_scroll_end_event_cb
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_tile_id
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>

<P><STRONG><a name="[4af]"></a>lv_obj_refr_size</STRONG> (Thumb, 1094 bytes, Stack size 72 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = lv_obj_refr_size &rArr; lv_obj_scrollbar_invalidate &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[3af]"></a>lv_obj_set_height</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = lv_obj_set_height &rArr; lv_obj_set_style_height &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_height
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_meter_box
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_one_line
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_visible_row_count
</UL>

<P><STRONG><a name="[38d]"></a>lv_obj_set_width</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = lv_obj_set_width &rArr; lv_obj_set_style_width &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_width
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_meter_box
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_anim_cb
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_one_line
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_constructor
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
</UL>

<P><STRONG><a name="[3a0]"></a>lv_obj_set_size</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = lv_obj_set_size &rArr; lv_obj_set_style_width &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_width
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_height
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_meter_box
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_shop_item
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_tile_constructor
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_constructor
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_add_btn
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
</UL>

<P><STRONG><a name="[4b3]"></a>lv_obj_set_content_width</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, lv_obj_pos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_width
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[4b4]"></a>lv_obj_set_content_height</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, lv_obj_pos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_height
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[481]"></a>lv_obj_mark_layout_as_dirty</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lv_obj_mark_layout_as_dirty &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_resume (via Veneer)
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_cell
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_layout_cb
</UL>

<P><STRONG><a name="[4b6]"></a>lv_obj_set_layout</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lv_obj_pos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_resume (via Veneer)
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_layout
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[4b8]"></a>lv_obj_move_children_by</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + In Cycle
<LI>Call Chain = lv_obj_move_children_by &rArr;  lv_obj_move_children_by (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_x_anim
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_y_anim
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[4b9]"></a>lv_obj_move_to</STRONG> (Thumb, 418 bytes, Stack size 48 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = lv_obj_move_to &rArr; lv_obj_scrollbar_invalidate &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
</UL>

<P><STRONG><a name="[4ba]"></a>lv_obj_refr_pos</STRONG> (Thumb, 658 bytes, Stack size 48 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = lv_obj_refr_pos &rArr; lv_obj_move_to &rArr; lv_obj_scrollbar_invalidate &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[3e8]"></a>lv_obj_update_layout</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_view_recursive
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_snap
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_view
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_tile_constructor
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[4bc]"></a>lv_layout_register</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_layout_register &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_grid_init
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_flex_init
</UL>

<P><STRONG><a name="[4bd]"></a>lv_obj_set_align</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj_pos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_align
</UL>

<P><STRONG><a name="[38e]"></a>lv_obj_align</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = lv_obj_align &rArr; lv_obj_set_pos &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_align
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_anim_cb
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_constructor
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_add_btn
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_align
</UL>

<P><STRONG><a name="[3e9]"></a>lv_obj_align_to</STRONG> (Thumb, 2206 bytes, Stack size 56 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = lv_obj_align_to &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_align
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[4bf]"></a>lv_obj_get_x</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lv_obj_get_x &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileview_event_cb
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_tile_id
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_tile
</UL>

<P><STRONG><a name="[4c0]"></a>lv_obj_get_x2</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, lv_obj_pos.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[4c1]"></a>lv_obj_get_y</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lv_obj_get_y &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileview_event_cb
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_tile_id
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_tile
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>

<P><STRONG><a name="[4c2]"></a>lv_obj_get_y2</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lv_obj_get_y2 &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[4c3]"></a>lv_obj_get_self_width</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
</UL>

<P><STRONG><a name="[4c4]"></a>lv_obj_get_self_height</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_get_self_height &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
</UL>

<P><STRONG><a name="[49e]"></a>lv_obj_refresh_self_size</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lv_obj_refresh_self_size &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_resume (via Veneer)
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_set_text
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_zoom_x
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_set_points
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_zoom_y
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_set_text_static
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[4c5]"></a>lv_obj_is_visible</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = lv_obj_is_visible &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_ext_draw_size
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[4c6]"></a>lv_obj_set_ext_click_area</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_set_ext_click_area &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_constructor
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_constructor
</UL>

<P><STRONG><a name="[6f4]"></a>lv_obj_get_click_area</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_obj_get_click_area
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
</UL>

<P><STRONG><a name="[45b]"></a>lv_obj_hit_test</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lv_obj_hit_test &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
</UL>

<P><STRONG><a name="[4c8]"></a>lv_obj_set_scrollbar_mode</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_obj_set_scrollbar_mode &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
</UL>

<P><STRONG><a name="[4c9]"></a>lv_obj_set_scroll_dir</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_set_scroll_dir &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_tile_constructor
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileview_event_cb
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_tile_id
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_tile
</UL>

<P><STRONG><a name="[4ca]"></a>lv_obj_set_scroll_snap_x</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_set_scroll_snap_x &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_constructor
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
</UL>

<P><STRONG><a name="[4cb]"></a>lv_obj_set_scroll_snap_y</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = lv_obj_set_scroll_snap_y &rArr; lv_obj_allocate_spec_attr &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_constructor
</UL>

<P><STRONG><a name="[863]"></a>lv_obj_get_scrollbar_mode</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_obj_scroll.o(.text), UNUSED)

<P><STRONG><a name="[46d]"></a>lv_obj_get_scroll_dir</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
</UL>

<P><STRONG><a name="[469]"></a>lv_obj_get_scroll_snap_x</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
</UL>

<P><STRONG><a name="[466]"></a>lv_obj_get_scroll_snap_y</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
</UL>

<P><STRONG><a name="[491]"></a>lv_obj_get_scroll_x</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x2
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
</UL>

<P><STRONG><a name="[48f]"></a>lv_obj_get_scroll_y</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y2
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
</UL>

<P><STRONG><a name="[46e]"></a>lv_obj_get_scroll_top</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_constructor
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_point_pos_by_id
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
</UL>

<P><STRONG><a name="[46f]"></a>lv_obj_get_scroll_bottom</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = lv_obj_get_scroll_bottom &rArr; lv_obj_get_self_height &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_self_height
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
</UL>

<P><STRONG><a name="[470]"></a>lv_obj_get_scroll_left</STRONG> (Thumb, 248 bytes, Stack size 40 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_self_width
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_constructor
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_point
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_point_pos_by_id
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
</UL>

<P><STRONG><a name="[471]"></a>lv_obj_get_scroll_right</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = lv_obj_get_scroll_right &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_self_width
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
</UL>

<P><STRONG><a name="[4cc]"></a>lv_obj_get_scroll_end</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_obj_get_scroll_end &rArr; lv_anim_get
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_get
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileview_event_cb
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cont_scroll_end_event_cb
</UL>

<P><STRONG><a name="[472]"></a>lv_obj_scroll_by</STRONG> (Thumb, 346 bytes, Stack size 96 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = lv_obj_scroll_by &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_speed_to_time
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_snap
</UL>

<P><STRONG><a name="[490]"></a>lv_obj_scroll_to_y</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = lv_obj_scroll_to_y &rArr; lv_obj_scroll_by &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[492]"></a>lv_obj_scroll_to_x</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = lv_obj_scroll_to_x &rArr; lv_obj_scroll_by &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
</UL>
<BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
</UL>

<P><STRONG><a name="[4b0]"></a>lv_obj_scroll_to</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = lv_obj_scroll_to &rArr; lv_obj_scroll_by &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_one_line
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_tile_id
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_tile
</UL>

<P><STRONG><a name="[4d0]"></a>lv_obj_scroll_to_view</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lv_obj_scroll.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
</UL>

<P><STRONG><a name="[3fa]"></a>lv_obj_scroll_to_view_recursive</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = lv_obj_scroll_to_view_recursive &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[4d1]"></a>lv_obj_is_scrolling</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lv_obj_scroll.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_scroll_obj
</UL>

<P><STRONG><a name="[4d2]"></a>lv_obj_update_snap</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lv_obj_scroll.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_scroll_get_snap_dist
</UL>

<P><STRONG><a name="[495]"></a>lv_obj_get_scrollbar_area</STRONG> (Thumb, 1922 bytes, Stack size 104 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_scroll_obj
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_scroll_dir
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
</UL>

<P><STRONG><a name="[4b1]"></a>lv_obj_scrollbar_invalidate</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = lv_obj_scrollbar_invalidate &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
</UL>

<P><STRONG><a name="[4b2]"></a>lv_obj_readjust_scroll</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = lv_obj_readjust_scroll &rArr; lv_obj_scroll_by &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_zoom_x
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_zoom_y
</UL>

<P><STRONG><a name="[468]"></a>lv_obj_get_style_prop</STRONG> (Thumb, 450 bytes, Stack size 56 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116 + In Cycle
<LI>Call Chain = lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_prop_get_default
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_style_get_prop_group
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_zoom
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_angle
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y2
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x2
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_content_height
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_content_width
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_arc_dsc
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_constructor
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elastic_diff
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_point
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_knob_pos
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_point_pos_by_id
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cont_scroll_end_event_cb
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_pivot
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value_fmt
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_knob
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_visible_row_count
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
</UL>

<P><STRONG><a name="[478]"></a>_lv_obj_style_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_obj_style.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[489]"></a>lv_obj_refresh_style</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_report_style_change
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
</UL>

<P><STRONG><a name="[3a7]"></a>lv_obj_add_style</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_add_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memclr4_8
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_meter_box
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_shop_item
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply
</UL>

<P><STRONG><a name="[39f]"></a>lv_obj_remove_style</STRONG> (Thumb, 530 bytes, Stack size 64 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_meter_box
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_shop_item
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[4dc]"></a>lv_obj_report_style_change</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = lv_obj_report_style_change &rArr; report_style_change_core &rArr;  report_style_change_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_next
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[48c]"></a>lv_obj_enable_style_refresh</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj_style.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
</UL>

<P><STRONG><a name="[4de]"></a>lv_obj_set_local_style_prop</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memclr4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_width
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_font
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_align
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_shadow_width
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_radius
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_top
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_row
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_right
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_left
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_column
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_bottom
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_outline_width
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_outline_color
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_opa
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_max_height
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_height
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_border_side
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_img_src
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_dsc_array
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_cell
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_align
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_color
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_shadow_color
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_line_color
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_img_recolor
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_border_color
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_opa
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_color
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_arc_color
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_y
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_x
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_layout
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_align
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_arc_img_src
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_arc_opa
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_arc_color_filtered
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_arc_rounded
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_arc_width
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_line_opa
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_line_color_filtered
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_line_rounded
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_line_dash_gap
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_line_dash_width
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_line_width
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_shadow_opa
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_shadow_color_filtered
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_shadow_spread
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_shadow_ofs_y
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_shadow_ofs_x
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_outline_pad
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_outline_opa
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_outline_color_filtered
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_img_recolor_opa
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_img_recolor_filtered
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_img_opa
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_decor
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_line_space
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_letter_space
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_opa
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_color_filtered
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_border_post
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_border_width
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_border_opa
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_border_color_filtered
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_img_tiled
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_img_recolor_opa
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_img_recolor_filtered
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_img_recolor
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_img_opa
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_grad_stop
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_main_stop
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_grad_dir
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_grad_color_filtered
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_grad_color
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_color_filtered
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_base_dir
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_blend_mode
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_transition
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_anim_speed
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_anim_time
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_color_filter_opa
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_color_filter_dsc
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_clip_corner
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_transform_angle
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_transform_zoom
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_translate_y
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_translate_x
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_transform_height
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_transform_width
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_min_height
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_max_width
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_min_width
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_grid_cell_column_pos
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_grid_cell_row_pos
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_grid_cell_x_align
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_grid_cell_column_span
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_grid_cell_row_span
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_grid_cell_y_align
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_align
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_grid_column_align
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_grid_row_align
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_grid_column_dsc_array
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_grid_row_dsc_array
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_flex_grow
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_flex_main_place
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_flex_cross_place
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_flex_track_place
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_flex_flow
</UL>

<P><STRONG><a name="[4a4]"></a>lv_obj_get_local_style_prop</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_obj_get_local_style_prop &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_content_height
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_content_width
</UL>

<P><STRONG><a name="[42c]"></a>lv_obj_remove_local_style_prop</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_obj_remove_local_style_prop &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scr_anim_ready
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_one_line
</UL>

<P><STRONG><a name="[487]"></a>_lv_obj_style_create_transition</STRONG> (Thumb, 292 bytes, Stack size 104 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _lv_obj_style_create_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
</UL>
<BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>

<P><STRONG><a name="[483]"></a>_lv_obj_style_state_compare</STRONG> (Thumb, 620 bytes, Stack size 40 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _lv_obj_style_state_compare &rArr; lv_style_get_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>

<P><STRONG><a name="[4e2]"></a>lv_obj_fade_in</STRONG> (Thumb, 52 bytes, Stack size 88 bytes, lv_obj_style.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
</UL>

<P><STRONG><a name="[4e3]"></a>lv_obj_fade_out</STRONG> (Thumb, 48 bytes, Stack size 88 bytes, lv_obj_style.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
</UL>

<P><STRONG><a name="[485]"></a>lv_obj_style_get_selector_state</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_obj_style.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>

<P><STRONG><a name="[486]"></a>lv_obj_style_get_selector_part</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_obj_style.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
</UL>

<P><STRONG><a name="[4e4]"></a>lv_obj_calculate_style_text_align</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = lv_obj_calculate_style_text_align &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bidi_calculate_align
</UL>
<BR>[Called By]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>

<P><STRONG><a name="[3de]"></a>lv_obj_set_style_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_width &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_content_width
</UL>

<P><STRONG><a name="[4e6]"></a>lv_obj_set_style_min_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4e7]"></a>lv_obj_set_style_max_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[3df]"></a>lv_obj_set_style_height</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_height &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_content_height
</UL>

<P><STRONG><a name="[4e8]"></a>lv_obj_set_style_min_height</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[3c3]"></a>lv_obj_set_style_max_height</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_max_height &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[4a6]"></a>lv_obj_set_style_x</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_x &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
</UL>

<P><STRONG><a name="[4a5]"></a>lv_obj_set_style_y</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
</UL>

<P><STRONG><a name="[4be]"></a>lv_obj_set_style_align</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_align &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_align
</UL>

<P><STRONG><a name="[4e9]"></a>lv_obj_set_style_transform_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4ea]"></a>lv_obj_set_style_transform_height</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4eb]"></a>lv_obj_set_style_translate_x</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4ec]"></a>lv_obj_set_style_translate_y</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4ed]"></a>lv_obj_set_style_transform_zoom</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4ee]"></a>lv_obj_set_style_transform_angle</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[417]"></a>lv_obj_set_style_pad_top</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_pad_top &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[418]"></a>lv_obj_set_style_pad_bottom</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_pad_bottom &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[3dc]"></a>lv_obj_set_style_pad_left</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_pad_left &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[3dd]"></a>lv_obj_set_style_pad_right</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_pad_right &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[3d4]"></a>lv_obj_set_style_pad_row</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_pad_row &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[3d5]"></a>lv_obj_set_style_pad_column</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_pad_column &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[3ce]"></a>lv_obj_set_style_radius</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_radius &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[4ef]"></a>lv_obj_set_style_clip_corner</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[391]"></a>lv_obj_set_style_opa</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_opa &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opa_scale_anim
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_anim_cb
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fade_anim_cb
</UL>

<P><STRONG><a name="[4f0]"></a>lv_obj_set_style_color_filter_dsc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4f1]"></a>lv_obj_set_style_color_filter_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4f2]"></a>lv_obj_set_style_anim_time</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4f3]"></a>lv_obj_set_style_anim_speed</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4f4]"></a>lv_obj_set_style_transition</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4f5]"></a>lv_obj_set_style_blend_mode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4b7]"></a>lv_obj_set_style_layout</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_layout &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_dsc_array
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_align
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_layout
</UL>

<P><STRONG><a name="[4f6]"></a>lv_obj_set_style_base_dir</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_base_dir &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_constructor
</UL>

<P><STRONG><a name="[3b2]"></a>lv_obj_set_style_bg_color</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = lv_obj_set_style_bg_color &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_meter_box
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[4f7]"></a>lv_obj_set_style_bg_color_filtered</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[3e0]"></a>lv_obj_set_style_bg_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_bg_opa &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_event_cb
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[4f8]"></a>lv_obj_set_style_bg_grad_color</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4f9]"></a>lv_obj_set_style_bg_grad_color_filtered</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4fa]"></a>lv_obj_set_style_bg_grad_dir</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4fb]"></a>lv_obj_set_style_bg_main_stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4fc]"></a>lv_obj_set_style_bg_grad_stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[41a]"></a>lv_obj_set_style_bg_img_src</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_bg_img_src &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[4fd]"></a>lv_obj_set_style_bg_img_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4fe]"></a>lv_obj_set_style_bg_img_recolor</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[4ff]"></a>lv_obj_set_style_bg_img_recolor_filtered</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[500]"></a>lv_obj_set_style_bg_img_recolor_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[501]"></a>lv_obj_set_style_bg_img_tiled</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[502]"></a>lv_obj_set_style_border_color</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[503]"></a>lv_obj_set_style_border_color_filtered</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[504]"></a>lv_obj_set_style_border_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[505]"></a>lv_obj_set_style_border_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[3cd]"></a>lv_obj_set_style_border_side</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_border_side &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[506]"></a>lv_obj_set_style_border_post</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[3e4]"></a>lv_obj_set_style_text_color</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = lv_obj_set_style_text_color &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[507]"></a>lv_obj_set_style_text_color_filtered</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[508]"></a>lv_obj_set_style_text_opa</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[411]"></a>lv_obj_set_style_text_font</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_text_font &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
</UL>

<P><STRONG><a name="[509]"></a>lv_obj_set_style_text_letter_space</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[50a]"></a>lv_obj_set_style_text_line_space</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[50b]"></a>lv_obj_set_style_text_decor</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[40a]"></a>lv_obj_set_style_text_align</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_text_align &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_align
</UL>

<P><STRONG><a name="[50c]"></a>lv_obj_set_style_img_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[50d]"></a>lv_obj_set_style_img_recolor</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[50e]"></a>lv_obj_set_style_img_recolor_filtered</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[50f]"></a>lv_obj_set_style_img_recolor_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[3e3]"></a>lv_obj_set_style_outline_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_outline_width &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[3e2]"></a>lv_obj_set_style_outline_color</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = lv_obj_set_style_outline_color &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[510]"></a>lv_obj_set_style_outline_color_filtered</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[511]"></a>lv_obj_set_style_outline_opa</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[512]"></a>lv_obj_set_style_outline_pad</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[419]"></a>lv_obj_set_style_shadow_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_obj_set_style_shadow_width &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
</UL>

<P><STRONG><a name="[513]"></a>lv_obj_set_style_shadow_ofs_x</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[514]"></a>lv_obj_set_style_shadow_ofs_y</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[515]"></a>lv_obj_set_style_shadow_spread</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[516]"></a>lv_obj_set_style_shadow_color</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[517]"></a>lv_obj_set_style_shadow_color_filtered</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[518]"></a>lv_obj_set_style_shadow_opa</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[519]"></a>lv_obj_set_style_line_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[51a]"></a>lv_obj_set_style_line_dash_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[51b]"></a>lv_obj_set_style_line_dash_gap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[51c]"></a>lv_obj_set_style_line_rounded</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[51d]"></a>lv_obj_set_style_line_color</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[51e]"></a>lv_obj_set_style_line_color_filtered</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[51f]"></a>lv_obj_set_style_line_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[520]"></a>lv_obj_set_style_arc_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[521]"></a>lv_obj_set_style_arc_rounded</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[522]"></a>lv_obj_set_style_arc_color</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[523]"></a>lv_obj_set_style_arc_color_filtered</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[524]"></a>lv_obj_set_style_arc_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[525]"></a>lv_obj_set_style_arc_img_src</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[390]"></a>lv_obj_get_child</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lv_obj_tree.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_obj_get_child &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_tab_btns
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter1_indic1_anim_cb
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter1_indic2_anim_cb
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter1_indic3_anim_cb
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter2_timer_cb
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter3_anim_cb
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_anim_cb
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileview_event_cb
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_get_content
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_get_content
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_add_btn
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_add_title
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_get_header
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_tile_id
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_get_options
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_get_selected_str
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>

<P><STRONG><a name="[38f]"></a>lv_obj_get_child_cnt</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lv_obj_tree.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_obj_get_child_cnt &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_theme
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_anim_cb
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_y
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_snap_point_x
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_report_style_change
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tileview_event_cb
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_tile_id
</UL>

<P><STRONG><a name="[38a]"></a>lv_obj_get_parent</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_obj_tree.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_obj_get_parent &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_cell
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_view_recursive
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter1_indic1_anim_cb
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter1_indic2_anim_cb
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter1_indic3_anim_cb
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter2_timer_cb
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_event_cb
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_anim_cb
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y2
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x2
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_layout_positioned
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tileview_tile_constructor
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btns_value_changed_event_cb
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cont_scroll_end_event_cb
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_anim_ready_cb
</UL>

<P><STRONG><a name="[526]"></a>lv_obj_get_child_id</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, lv_obj_tree.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lv_obj_get_child_id &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_down
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_up
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_swap
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_background
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_foreground
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme_apply
</UL>

<P><STRONG><a name="[4a8]"></a>lv_obj_get_screen</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_obj_tree.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_obj_get_screen &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_layout
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[420]"></a>lv_obj_get_disp</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, lv_obj_tree.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_load_scr
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scr_load_anim_start
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scr_anim_ready
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_primary
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_font_small
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_font_normal
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_font_large
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_layout
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_secondary
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_from_obj
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>

<P><STRONG><a name="[3ee]"></a>lv_obj_del</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, lv_obj_tree.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = lv_obj_del &rArr; lv_obj_scrollbar_invalidate &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_test
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scr_anim_ready
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_event_cb
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del_anim_ready_cb
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del_async_cb
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_remove
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_close
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_destructor
</UL>

<P><STRONG><a name="[52a]"></a>lv_obj_clean</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, lv_obj_tree.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_test
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>

<P><STRONG><a name="[52b]"></a>lv_obj_del_anim_ready_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_obj_tree.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = lv_obj_del_anim_ready_cb &rArr; lv_obj_del &rArr; lv_obj_scrollbar_invalidate &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj_tree.o(.text)
</UL>
<P><STRONG><a name="[52c]"></a>lv_obj_del_delayed</STRONG> (Thumb, 44 bytes, Stack size 80 bytes, lv_obj_tree.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
</UL>

<P><STRONG><a name="[52d]"></a>lv_obj_del_async</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_obj_tree.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_async_call
</UL>

<P><STRONG><a name="[464]"></a>lv_obj_set_parent</STRONG> (Thumb, 454 bytes, Stack size 40 bytes, lv_obj_tree.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_id
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_set_cursor
</UL>

<P><STRONG><a name="[52f]"></a>lv_obj_move_foreground</STRONG> (Thumb, 258 bytes, Stack size 24 bytes, lv_obj_tree.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_id
</UL>

<P><STRONG><a name="[530]"></a>lv_obj_move_background</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, lv_obj_tree.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_id
</UL>

<P><STRONG><a name="[531]"></a>lv_obj_swap</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, lv_obj_tree.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_swap_obj
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_id
</UL>

<P><STRONG><a name="[532]"></a>lv_obj_move_up</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, lv_obj_tree.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_swap_obj
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_id
</UL>

<P><STRONG><a name="[533]"></a>lv_obj_move_down</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, lv_obj_tree.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_swap_obj
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_id
</UL>

<P><STRONG><a name="[535]"></a>lv_obj_tree_walk</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_obj_tree.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;walk_core
</UL>
<BR>[Called By]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_update
</UL>

<P><STRONG><a name="[479]"></a>_lv_refr_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_refr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[552]"></a>_lv_refr_get_disp_refreshing</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_refr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
</UL>

<P><STRONG><a name="[104]"></a>_lv_disp_refr_timer</STRONG> (Thumb, 1336 bytes, Stack size 56 bytes, lv_refr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1300<LI>Call Chain = _lv_disp_refr_timer &rArr; lv_refr_area_part &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_align
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_top
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_right
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_left
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_bottom
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_color
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_opa
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_color
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_get_idle (via Veneer)
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_free_all
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_draw_buf
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_font_clean_up_fmt_txt
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_draw_mask_cleanup
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_join
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_on
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_flush
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_now
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_hal_disp.o(.text)
</UL>
<P><STRONG><a name="[545]"></a>lv_refr_now</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lv_refr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_next
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_refr_now
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[427]"></a>_lv_inv_area</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, lv_refr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _lv_inv_area &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_resume (via Veneer)
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_opa
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_image
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_color
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
</UL>

<P><STRONG><a name="[864]"></a>_lv_refr_set_disp_refreshing</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_refr.o(.text), UNUSED)

<P><STRONG><a name="[865]"></a>lv_refr_get_fps_avg</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_refr.o(.text), UNUSED)

<P><STRONG><a name="[547]"></a>lv_theme_get_from_obj</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lv_theme.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_theme
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>

<P><STRONG><a name="[423]"></a>lv_theme_apply</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_theme.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_theme
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_theme
</UL>
<BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_theme
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
</UL>

<P><STRONG><a name="[866]"></a>lv_theme_set_parent</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_theme.o(.text), UNUSED)

<P><STRONG><a name="[867]"></a>lv_theme_set_apply_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_theme.o(.text), UNUSED)

<P><STRONG><a name="[549]"></a>lv_theme_get_font_small</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lv_theme.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_theme
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>

<P><STRONG><a name="[54a]"></a>lv_theme_get_font_normal</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lv_theme.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_theme
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>

<P><STRONG><a name="[54b]"></a>lv_theme_get_font_large</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lv_theme.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_theme
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>

<P><STRONG><a name="[3cf]"></a>lv_theme_get_color_primary</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lv_theme.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lv_theme_get_color_primary &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_theme
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main (via Veneer)
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_part_begin_event_cb
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_constructor
</UL>

<P><STRONG><a name="[54c]"></a>lv_theme_get_color_secondary</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lv_theme.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_theme
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main (via Veneer)
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>

<P><STRONG><a name="[631]"></a>lv_draw_arc_dsc_init</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, lv_draw_arc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_draw_arc_dsc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
</UL>

<P><STRONG><a name="[54d]"></a>lv_draw_arc</STRONG> (Thumb, 2844 bytes, Stack size 392 bytes, lv_draw_arc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1516<LI>Call Chain = lv_draw_arc &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin (via Veneer)
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle_init
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
</UL>

<P><STRONG><a name="[550]"></a>lv_draw_arc_get_area</STRONG> (Thumb, 1012 bytes, Stack size 56 bytes, lv_draw_arc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lv_draw_arc_get_area
</UL>
<BR>[Calls]<UL><LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[551]"></a>_lv_blend_fill</STRONG> (Thumb, 870 bytes, Stack size 120 bytes, lv_draw_blend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = _lv_blend_fill &rArr; fill_normal &rArr; lv_color_fill
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_draw_buf
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_move
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
</UL>

<P><STRONG><a name="[556]"></a>_lv_blend_map</STRONG> (Thumb, 2458 bytes, Stack size 112 bytes, lv_draw_blend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _lv_blend_map &rArr; _lv_area_intersect
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_draw_buf
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
</UL>

<P><STRONG><a name="[53b]"></a>lv_draw_img_dsc_init</STRONG> (Thumb, 66 bytes, Stack size 4 bytes, lv_draw_img.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_draw_img_dsc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[57b]"></a>lv_img_cf_has_alpha</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lv_draw_img.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_init
</UL>

<P><STRONG><a name="[57a]"></a>lv_img_cf_is_chroma_keyed</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lv_draw_img.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_init
</UL>

<P><STRONG><a name="[53d]"></a>lv_draw_img</STRONG> (Thumb, 806 bytes, Stack size 144 bytes, lv_draw_img.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 948 + In Cycle
<LI>Call Chain = lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_read_line
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set_height
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[574]"></a>lv_img_cf_get_px_size</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, lv_draw_img.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_set_px_color
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_set_px_alpha
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_color
</UL>

<P><STRONG><a name="[49f]"></a>lv_img_src_get_type</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lv_draw_img.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_invalidate_src
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[3bd]"></a>lv_draw_label_dsc_init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, lv_draw_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_draw_label_dsc_init &rArr; lv_palette_main
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[561]"></a>lv_draw_letter</STRONG> (Thumb, 1972 bytes, Stack size 208 bytes, lv_draw_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = lv_draw_letter &rArr; _lv_blend_fill &rArr; fill_normal &rArr; lv_color_fill
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_draw_buf
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_bitmap
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
</UL>

<P><STRONG><a name="[3be]"></a>lv_draw_label</STRONG> (Thumb, 1858 bytes, Stack size 240 bytes, lv_draw_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 804 + In Cycle
<LI>Call Chain = lv_draw_label &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_test
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bidi_calculate_align
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_encoded_letter_next_2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_process_paragraph
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_get_logical_pos
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[566]"></a>lv_draw_line_dsc_init</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_draw_line.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_draw_line_dsc_init
</UL>
<BR>[Calls]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memclr4_10
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
</UL>

<P><STRONG><a name="[56b]"></a>lv_draw_line</STRONG> (Thumb, 2498 bytes, Stack size 320 bytes, lv_draw_line.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 564 + In Cycle
<LI>Call Chain = lv_draw_line &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_draw_buf
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_line_event
</UL>

<P><STRONG><a name="[3b6]"></a>lv_draw_mask_add</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lv_draw_mask.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>

<P><STRONG><a name="[55c]"></a>lv_draw_mask_apply</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, lv_draw_mask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_draw_mask_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
</UL>

<P><STRONG><a name="[3b9]"></a>lv_draw_mask_remove_id</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lv_draw_mask.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>

<P><STRONG><a name="[49b]"></a>lv_draw_mask_remove_custom</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lv_draw_mask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_draw_mask_remove_custom
</UL>
<BR>[Called By]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
</UL>

<P><STRONG><a name="[49c]"></a>lv_draw_mask_free_param</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lv_draw_mask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_draw_mask_free_param &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>

<P><STRONG><a name="[543]"></a>_lv_draw_mask_cleanup</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, lv_draw_mask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _lv_draw_mask_cleanup &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[868]"></a>lv_draw_mask_get_cnt</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lv_draw_mask.o(.text), UNUSED)

<P><STRONG><a name="[559]"></a>lv_draw_mask_is_any</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lv_draw_mask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lv_draw_mask_is_any &rArr; _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_out
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
</UL>

<P><STRONG><a name="[3b5]"></a>lv_draw_mask_line_points_init</STRONG> (Thumb, 296 bytes, Stack size 12 bytes, lv_draw_mask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_draw_mask_line_points_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_angle_init
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle_init
</UL>

<P><STRONG><a name="[56e]"></a>lv_draw_mask_line_angle_init</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, lv_draw_mask.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin (via Veneer)
</UL>

<P><STRONG><a name="[54e]"></a>lv_draw_mask_angle_init</STRONG> (Thumb, 278 bytes, Stack size 48 bytes, lv_draw_mask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_draw_mask_angle_init &rArr; lv_draw_mask_line_points_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
</UL>

<P><STRONG><a name="[49a]"></a>lv_draw_mask_radius_init</STRONG> (Thumb, 1334 bytes, Stack size 72 bytes, lv_draw_mask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = lv_draw_mask_radius_init &rArr; lv_mem_buf_get &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>

<P><STRONG><a name="[3b7]"></a>lv_draw_mask_fade_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lv_draw_mask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_draw_mask_fade_init
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
</UL>

<P><STRONG><a name="[869]"></a>lv_draw_mask_map_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lv_draw_mask.o(.text), UNUSED)

<P><STRONG><a name="[3a9]"></a>lv_draw_rect_dsc_init</STRONG> (Thumb, 208 bytes, Stack size 4 bytes, lv_draw_rect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_draw_rect_dsc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_chart_event_cb
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_event
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[56f]"></a>draw_border_generic</STRONG> (Thumb, 1678 bytes, Stack size 192 bytes, lv_draw_rect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = draw_border_generic &rArr; _lv_blend_fill &rArr; fill_normal &rArr; lv_color_fill
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[3aa]"></a>lv_draw_rect</STRONG> (Thumb, 2166 bytes, Stack size 176 bytes, lv_draw_rect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1124<LI>Call Chain = lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_test
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grad_get
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_chart_event_cb
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_event
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[573]"></a>lv_img_buf_get_px_color</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, lv_img_buf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_img_buf_get_px_color
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
</UL>
<BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_anti_alias
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_px_true_color_alpha
</UL>

<P><STRONG><a name="[57d]"></a>lv_img_buf_get_px_alpha</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, lv_img_buf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_img_buf_get_px_alpha
</UL>
<BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_anti_alias
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_px_true_color_alpha
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_px_alpha_generic
</UL>

<P><STRONG><a name="[575]"></a>lv_img_buf_set_px_alpha</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, lv_img_buf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_img_buf_set_px_alpha
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_px_true_color_alpha
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_px_alpha_generic
</UL>

<P><STRONG><a name="[576]"></a>lv_img_buf_set_px_color</STRONG> (Thumb, 338 bytes, Stack size 40 bytes, lv_img_buf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lv_img_buf_set_px_color &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_px_true_color_alpha
</UL>

<P><STRONG><a name="[86a]"></a>lv_img_buf_set_palette</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, lv_img_buf.o(.text), UNUSED)

<P><STRONG><a name="[578]"></a>lv_img_buf_get_img_size</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, lv_img_buf.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_alloc
</UL>

<P><STRONG><a name="[577]"></a>lv_img_buf_alloc</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, lv_img_buf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_img_size
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>

<P><STRONG><a name="[579]"></a>lv_img_buf_free</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lv_img_buf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>

<P><STRONG><a name="[55a]"></a>_lv_img_buf_transform_init</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, lv_img_buf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _lv_img_buf_transform_init
</UL>
<BR>[Calls]<UL><LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_is_chroma_keyed
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_has_alpha
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
</UL>

<P><STRONG><a name="[55e]"></a>_lv_img_buf_get_transformed_area</STRONG> (Thumb, 558 bytes, Stack size 40 bytes, lv_img_buf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _lv_img_buf_get_transformed_area
</UL>
<BR>[Calls]<UL><LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_zoom
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_angle
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_line
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_pivot
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
</UL>

<P><STRONG><a name="[57c]"></a>_lv_img_buf_transform_anti_alias</STRONG> (Thumb, 780 bytes, Stack size 112 bytes, lv_img_buf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _lv_img_buf_transform_anti_alias &rArr; lv_img_buf_get_px_alpha
</UL>
<BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_alpha
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_color
</UL>
<BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform
</UL>

<P><STRONG><a name="[55b]"></a>_lv_img_buf_transform</STRONG> (Thumb, 394 bytes, Stack size 48 bytes, lv_img_buf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = _lv_img_buf_transform &rArr; _lv_img_buf_transform_anti_alias &rArr; lv_img_buf_get_px_alpha
</UL>
<BR>[Calls]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_anti_alias
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_alpha
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_color
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
</UL>

<P><STRONG><a name="[55d]"></a>_lv_img_cache_open</STRONG> (Thumb, 378 bytes, Stack size 48 bytes, lv_img_cache.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _lv_img_cache_open &rArr; lv_img_decoder_open &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
</UL>

<P><STRONG><a name="[57f]"></a>lv_img_cache_invalidate_src</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, lv_img_cache.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>

<P><STRONG><a name="[47b]"></a>lv_img_cache_set_size</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, lv_img_cache.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lv_img_cache_set_size &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[580]"></a>lv_img_decoder_built_in_close</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lv_img_decoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_img_decoder_built_in_close &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img_decoder.o(.text)
</UL>
<P><STRONG><a name="[86b]"></a>lv_img_decoder_set_close_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_img_decoder.o(.text), UNUSED)

<P><STRONG><a name="[582]"></a>lv_img_decoder_built_in_read_line</STRONG> (Thumb, 938 bytes, Stack size 72 bytes, lv_img_decoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = lv_img_decoder_built_in_read_line &rArr; lv_mem_buf_get &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_seek
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img_decoder.o(.text)
</UL>
<P><STRONG><a name="[86c]"></a>lv_img_decoder_set_read_line_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_img_decoder.o(.text), UNUSED)

<P><STRONG><a name="[585]"></a>lv_img_decoder_built_in_open</STRONG> (Thumb, 562 bytes, Stack size 40 bytes, lv_img_decoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lv_img_decoder_built_in_open &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cf_get_px_size
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_seek
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_ext
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_close
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img_decoder.o(.text)
</UL>
<P><STRONG><a name="[86d]"></a>lv_img_decoder_set_open_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_img_decoder.o(.text), UNUSED)

<P><STRONG><a name="[588]"></a>lv_img_decoder_built_in_info</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, lv_img_decoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = lv_img_decoder_built_in_info &rArr; lv_fs_read
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_read
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_ext
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_close
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img_decoder.o(.text)
</UL>
<P><STRONG><a name="[86e]"></a>lv_img_decoder_set_info_cb</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_img_decoder.o(.text), UNUSED)

<P><STRONG><a name="[589]"></a>lv_img_decoder_create</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_img_decoder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>

<P><STRONG><a name="[47a]"></a>_lv_img_decoder_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lv_img_decoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _lv_img_decoder_init &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[53c]"></a>lv_img_decoder_get_info</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, lv_img_decoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_img_decoder_get_info
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_line
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[57e]"></a>lv_img_decoder_open</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, lv_img_decoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lv_img_decoder_open &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
</UL>

<P><STRONG><a name="[55f]"></a>lv_img_decoder_read_line</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, lv_img_decoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_img_decoder_read_line
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
</UL>

<P><STRONG><a name="[560]"></a>lv_img_decoder_close</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lv_img_decoder.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_img_decoder_close &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_set_size
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_invalidate_src
</UL>

<P><STRONG><a name="[58c]"></a>lv_img_decoder_delete</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lv_img_decoder.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
</UL>

<P><STRONG><a name="[58f]"></a>lv_flex_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lv_flex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lv_flex_init &rArr; lv_layout_register &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_layout_register
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_register_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_extra_init
</UL>

<P><STRONG><a name="[591]"></a>lv_obj_set_style_flex_flow</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_flex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[3c2]"></a>lv_obj_set_flex_flow</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lv_flex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = lv_obj_set_flex_flow &rArr; lv_obj_set_style_layout &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_layout
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
</UL>

<P><STRONG><a name="[592]"></a>lv_obj_set_style_flex_track_place</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_flex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[593]"></a>lv_obj_set_style_flex_cross_place</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_flex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[594]"></a>lv_obj_set_style_flex_main_place</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_flex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[416]"></a>lv_obj_set_flex_align</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, lv_flex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = lv_obj_set_flex_align &rArr; lv_obj_set_style_layout &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_layout
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
</UL>

<P><STRONG><a name="[595]"></a>lv_obj_set_style_flex_grow</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_flex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[3b0]"></a>lv_obj_set_flex_grow</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lv_flex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = lv_obj_set_flex_grow &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_meter_box
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_add_title
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_constructor
</UL>

<P><STRONG><a name="[596]"></a>lv_style_set_flex_flow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_flex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[597]"></a>lv_style_set_flex_main_place</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_flex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[598]"></a>lv_style_set_flex_cross_place</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_flex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[599]"></a>lv_style_set_flex_track_place</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_flex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[59a]"></a>lv_style_set_flex_grow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_flex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[59c]"></a>lv_grid_init</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, lv_grid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lv_grid_init &rArr; lv_layout_register &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_layout_register
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_register_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_extra_init
</UL>

<P><STRONG><a name="[59d]"></a>lv_obj_set_style_grid_row_dsc_array</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[59e]"></a>lv_obj_set_style_grid_column_dsc_array</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[3a1]"></a>lv_obj_set_grid_dsc_array</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lv_grid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = lv_obj_set_grid_dsc_array &rArr; lv_obj_set_style_layout &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_layout
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_meter_box
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_shop_item
</UL>

<P><STRONG><a name="[59f]"></a>lv_obj_set_style_grid_row_align</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[5a0]"></a>lv_obj_set_style_grid_column_align</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[5a1]"></a>lv_obj_set_grid_align</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[5a2]"></a>lv_obj_set_style_grid_cell_y_align</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[5a3]"></a>lv_obj_set_style_grid_cell_row_span</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[5a4]"></a>lv_obj_set_style_grid_cell_column_span</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[5a5]"></a>lv_obj_set_style_grid_cell_x_align</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[5a6]"></a>lv_obj_set_style_grid_cell_row_pos</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[5a7]"></a>lv_obj_set_style_grid_cell_column_pos</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>

<P><STRONG><a name="[3a4]"></a>lv_obj_set_grid_cell</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, lv_grid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = lv_obj_set_grid_cell &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_meter_box
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_shop_item
</UL>

<P><STRONG><a name="[5a8]"></a>lv_style_set_grid_row_dsc_array</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5a9]"></a>lv_style_set_grid_column_dsc_array</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5aa]"></a>lv_style_set_grid_row_align</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5ab]"></a>lv_style_set_grid_column_align</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5ac]"></a>lv_style_set_grid_cell_column_pos</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5ad]"></a>lv_style_set_grid_cell_column_span</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5ae]"></a>lv_style_set_grid_cell_row_pos</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5af]"></a>lv_style_set_grid_cell_row_span</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5b0]"></a>lv_style_set_grid_cell_x_align</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5b1]"></a>lv_style_set_grid_cell_y_align</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_grid.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[39a]"></a>lv_theme_default_init</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, lv_theme_default.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_theme_default_init &rArr; lv_obj_report_style_change &rArr; report_style_change_core &rArr;  report_style_change_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_theme
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_report_style_change
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_event_cb
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[658]"></a>lv_theme_default_is_inited</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_theme_default.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
</UL>

<P><STRONG><a name="[3f3]"></a>lv_calendar_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_calendar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_calendar_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb
</UL>

<P><STRONG><a name="[5df]"></a>lv_calendar_set_day_names</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, lv_calendar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove4 (via Veneer)
</UL>

<P><STRONG><a name="[5e1]"></a>lv_calendar_set_today_date</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_calendar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;highlight_update
</UL>

<P><STRONG><a name="[5e3]"></a>lv_calendar_set_highlighted_dates</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_calendar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;highlight_update
</UL>

<P><STRONG><a name="[3f4]"></a>lv_calendar_set_showed_date</STRONG> (Thumb, 574 bytes, Stack size 40 bytes, lv_calendar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = lv_calendar_set_showed_date &rArr; lv_snprintf &rArr; _vsnprintf &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;highlight_update
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_selected_btn
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_selected_btn
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;year_event_cb
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
</UL>

<P><STRONG><a name="[86f]"></a>lv_calendar_get_today_date</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_calendar.o(.text), UNUSED)

<P><STRONG><a name="[5ed]"></a>lv_calendar_get_showed_date</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_calendar.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;year_event_cb
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
</UL>

<P><STRONG><a name="[870]"></a>lv_calendar_get_highlighted_dates</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_calendar.o(.text), UNUSED)

<P><STRONG><a name="[871]"></a>lv_calendar_get_highlighted_dates_num</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_calendar.o(.text), UNUSED)

<P><STRONG><a name="[3ec]"></a>lv_calendar_get_pressed_date</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, lv_calendar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lv_calendar_get_pressed_date &rArr; lv_btnmatrix_get_btn_text &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_selected_btn
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_btn_text
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_event_cb
</UL>

<P><STRONG><a name="[5ec]"></a>lv_calendar_header_arrow_create</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_calendar_header_arrow.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>

<P><STRONG><a name="[3f5]"></a>lv_calendar_header_dropdown_create</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_calendar_header_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_calendar_header_dropdown_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb
</UL>

<P><STRONG><a name="[3c4]"></a>lv_chart_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_chart_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[5f1]"></a>lv_chart_refresh</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[3d3]"></a>lv_chart_set_type</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = lv_chart_set_type &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[3ca]"></a>lv_chart_set_point_count</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = lv_chart_set_point_count &rArr; new_points_alloc &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_points_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[5f3]"></a>lv_chart_set_range</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[5f4]"></a>lv_chart_set_update_mode</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[3c9]"></a>lv_chart_set_div_line_count</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_chart_set_div_line_count &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[3cc]"></a>lv_chart_set_zoom_x</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = lv_chart_set_zoom_x &rArr; lv_obj_readjust_scroll &rArr; lv_obj_scroll_by &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[5f5]"></a>lv_chart_set_zoom_y</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_readjust_scroll
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[5f6]"></a>lv_chart_get_zoom_x</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[5f7]"></a>lv_chart_get_zoom_y</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[872]"></a>get_tick_gsc</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lv_chart.o(.text), UNUSED)

<P><STRONG><a name="[3c8]"></a>lv_chart_set_axis_tick</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = lv_chart_set_axis_tick &rArr; lv_obj_refresh_ext_draw_size &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[3bb]"></a>lv_chart_get_type</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_chart_get_type &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
</UL>

<P><STRONG><a name="[5f8]"></a>lv_chart_get_point_count</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[873]"></a>lv_chart_get_x_start_point</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_chart.o(.text), UNUSED)

<P><STRONG><a name="[5f9]"></a>lv_chart_get_point_pos_by_id</STRONG> (Thumb, 424 bytes, Stack size 40 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = lv_chart_get_point_pos_by_id &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_len
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[3d0]"></a>lv_chart_add_series</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lv_chart_add_series &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[5fa]"></a>lv_chart_remove_series</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[5fb]"></a>lv_chart_hide_series</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[39c]"></a>lv_chart_set_series_color</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = lv_chart_set_series_color &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_event_cb
</UL>

<P><STRONG><a name="[5fc]"></a>lv_chart_set_x_start_point</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[3c0]"></a>lv_chart_get_series_next</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_chart_get_series_next &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
</UL>

<P><STRONG><a name="[5fd]"></a>lv_chart_add_cursor</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[5fe]"></a>lv_chart_set_cursor_pos</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[5ff]"></a>lv_chart_set_cursor_point</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[874]"></a>lv_chart_get_cursor_point</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_chart.o(.text), UNUSED)

<P><STRONG><a name="[600]"></a>lv_chart_set_all_value</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[3d2]"></a>lv_chart_set_next_value</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = lv_chart_set_next_value &rArr; invalidate_point &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_point
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[602]"></a>lv_chart_set_next_value2</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_point
</UL>

<P><STRONG><a name="[603]"></a>lv_chart_set_value_by_id</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[604]"></a>lv_chart_set_value_by_id2</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[605]"></a>lv_chart_set_ext_y_array</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[606]"></a>lv_chart_set_ext_x_array</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[607]"></a>lv_chart_get_y_array</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[608]"></a>lv_chart_get_x_array</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lv_chart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[3ba]"></a>lv_chart_get_pressed_point</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_chart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
</UL>

<P><STRONG><a name="[60f]"></a>lv_colorwheel_create</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_colorwheel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>

<P><STRONG><a name="[611]"></a>lv_colorwheel_set_hsv</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, lv_colorwheel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lv_colorwheel_set_hsv &rArr; refr_knob_pos &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_knob_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_set_rgb
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
</UL>

<P><STRONG><a name="[612]"></a>lv_colorwheel_set_rgb</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lv_colorwheel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_rgb_to_hsv (via Veneer)
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_set_hsv
</UL>

<P><STRONG><a name="[614]"></a>lv_colorwheel_set_mode</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lv_colorwheel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_knob_pos
</UL>

<P><STRONG><a name="[875]"></a>lv_colorwheel_set_mode_fixed</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_colorwheel.o(.text), UNUSED)

<P><STRONG><a name="[876]"></a>lv_colorwheel_get_hsv</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_colorwheel.o(.text), UNUSED)

<P><STRONG><a name="[615]"></a>lv_colorwheel_get_rgb</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_colorwheel.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hsv_to_rgb (via Veneer)
</UL>

<P><STRONG><a name="[877]"></a>lv_colorwheel_get_color_mode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_colorwheel.o(.text), UNUSED)

<P><STRONG><a name="[878]"></a>lv_colorwheel_get_color_mode_fixed</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_colorwheel.o(.text), UNUSED)

<P><STRONG><a name="[400]"></a>lv_keyboard_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_keyboard_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
</UL>

<P><STRONG><a name="[3f9]"></a>lv_keyboard_set_textarea</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lv_keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = lv_keyboard_set_textarea &rArr; lv_obj_clear_state &rArr; lv_obj_set_state &rArr; _lv_obj_style_create_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
</UL>

<P><STRONG><a name="[61a]"></a>lv_keyboard_set_mode</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lv_keyboard.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_ctrl_map
</UL>

<P><STRONG><a name="[61c]"></a>lv_keyboard_set_map</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_keyboard.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_ctrl_map
</UL>

<P><STRONG><a name="[879]"></a>lv_keyboard_get_textarea</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_keyboard.o(.text), UNUSED)

<P><STRONG><a name="[87a]"></a>lv_keyboard_get_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_keyboard.o(.text), UNUSED)

<P><STRONG><a name="[61d]"></a>lv_keyboard_def_event_cb</STRONG> (Thumb, 554 bytes, Stack size 24 bytes, lv_keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 840<LI>Call Chain = lv_keyboard_def_event_cb &rArr; lv_textarea_del_char &rArr; lv_textarea_add_text &rArr; lv_textarea_add_char &rArr;  lv_textarea_add_text (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_selected_btn
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_btn_text
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_text
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_one_line
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_cursor_pos
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_right
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_left
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_ctrl_map
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_keyboard.o(.text)
</UL>
<P><STRONG><a name="[627]"></a>lv_led_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_led.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>

<P><STRONG><a name="[628]"></a>lv_led_set_color</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_led.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>

<P><STRONG><a name="[629]"></a>lv_led_set_brightness</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lv_led.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>

<P><STRONG><a name="[62a]"></a>lv_led_on</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_led.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>

<P><STRONG><a name="[62b]"></a>lv_led_off</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lv_led.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>

<P><STRONG><a name="[87b]"></a>lv_led_get_brightness</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_led.o(.text), UNUSED)

<P><STRONG><a name="[62c]"></a>lv_led_toggle</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lv_led.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>

<P><STRONG><a name="[3b1]"></a>lv_meter_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_meter_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_meter_box
</UL>

<P><STRONG><a name="[3d7]"></a>lv_meter_add_scale</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lv_meter_add_scale &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[3d9]"></a>lv_meter_set_scale_ticks</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lv_meter_set_scale_ticks &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[3e5]"></a>lv_meter_set_scale_major_ticks</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = lv_meter_set_scale_major_ticks &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[3d8]"></a>lv_meter_set_scale_range</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = lv_meter_set_scale_range &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[3e7]"></a>lv_meter_add_needle_line</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lv_meter_add_needle_line &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[62e]"></a>lv_meter_add_needle_img</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, lv_meter.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>

<P><STRONG><a name="[3da]"></a>lv_meter_add_arc</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lv_meter_add_arc &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[3e6]"></a>lv_meter_add_scale_lines</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lv_meter_add_scale_lines &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[3ac]"></a>lv_meter_set_indicator_value</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = lv_meter_set_indicator_value &rArr; inv_arc &rArr; lv_obj_get_content_coords &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_line
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter3_anim_cb
</UL>

<P><STRONG><a name="[3b3]"></a>lv_meter_set_indicator_start_value</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = lv_meter_set_indicator_start_value &rArr; inv_arc &rArr; lv_obj_get_content_coords &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_line
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter2_timer_cb
</UL>

<P><STRONG><a name="[3b4]"></a>lv_meter_set_indicator_end_value</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = lv_meter_set_indicator_end_value &rArr; inv_arc &rArr; lv_obj_get_content_coords &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_line
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter1_indic1_anim_cb
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter1_indic2_anim_cb
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter1_indic3_anim_cb
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter2_timer_cb
</UL>

<P><STRONG><a name="[633]"></a>lv_spinbox_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_spinbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>

<P><STRONG><a name="[635]"></a>lv_spinbox_set_value</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lv_spinbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[87c]"></a>lv_spinbox_set_rollover</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_spinbox.o(.text), UNUSED)

<P><STRONG><a name="[636]"></a>lv_spinbox_set_digit_format</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, lv_spinbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_pow (via Veneer)
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[638]"></a>lv_spinbox_set_step</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_spinbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[639]"></a>lv_spinbox_set_range</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lv_spinbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[63a]"></a>lv_spinbox_set_pos</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lv_spinbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_pow (via Veneer)
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[87d]"></a>lv_spinbox_get_value</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_spinbox.o(.text), UNUSED)

<P><STRONG><a name="[87e]"></a>lv_spinbox_get_step</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_spinbox.o(.text), UNUSED)

<P><STRONG><a name="[63b]"></a>lv_spinbox_step_next</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lv_spinbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[63c]"></a>lv_spinbox_step_prev</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lv_spinbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[87f]"></a>lv_spinbox_get_rollover</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_spinbox.o(.text), UNUSED)

<P><STRONG><a name="[63d]"></a>lv_spinbox_increment</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lv_spinbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[63e]"></a>lv_spinbox_decrement</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lv_spinbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[640]"></a>lv_spinner_create</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_spinner.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>

<P><STRONG><a name="[410]"></a>lv_tabview_create</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_tabview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_tabview_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
</UL>

<P><STRONG><a name="[412]"></a>lv_tabview_get_tab_btns</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_tabview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_tabview_get_tab_btns &rArr; lv_obj_get_child &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
</UL>

<P><STRONG><a name="[645]"></a>lv_tabview_get_content</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_tabview.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
</UL>

<P><STRONG><a name="[646]"></a>lv_tabview_set_act</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, lv_tabview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = lv_tabview_set_act &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_event
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btns_value_changed_event_cb
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cont_scroll_end_event_cb
</UL>

<P><STRONG><a name="[413]"></a>lv_tabview_add_tab</STRONG> (Thumb, 278 bytes, Stack size 40 bytes, lv_tabview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = lv_tabview_add_tab &rArr; lv_tabview_set_act &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl_all
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
</UL>

<P><STRONG><a name="[880]"></a>lv_tabview_get_tab_act</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_tabview.o(.text), UNUSED)

<P><STRONG><a name="[64a]"></a>lv_tileview_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_tileview.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>

<P><STRONG><a name="[64b]"></a>lv_tileview_add_tile</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, lv_tileview.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>

<P><STRONG><a name="[64c]"></a>lv_obj_set_tile</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, lv_tileview.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scroll_dir
</UL>

<P><STRONG><a name="[64d]"></a>lv_obj_set_tile_id</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, lv_tileview.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scroll_dir
</UL>

<P><STRONG><a name="[881]"></a>lv_tileview_get_tile_act</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_tileview.o(.text), UNUSED)

<P><STRONG><a name="[64e]"></a>lv_win_create</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_win.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>

<P><STRONG><a name="[64f]"></a>lv_win_get_header</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_win.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
</UL>

<P><STRONG><a name="[650]"></a>lv_win_add_title</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_win.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
</UL>

<P><STRONG><a name="[651]"></a>lv_win_add_btn</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lv_win.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
</UL>

<P><STRONG><a name="[652]"></a>lv_win_get_content</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_win.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
</UL>

<P><STRONG><a name="[47c]"></a>lv_extra_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lv_extra.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lv_extra_init &rArr; lv_grid_init &rArr; lv_layout_register &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_grid_init
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_flex_init
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[563]"></a>lv_font_get_glyph_bitmap</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_font.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
</UL>

<P><STRONG><a name="[562]"></a>lv_font_get_glyph_dsc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_font.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
</UL>

<P><STRONG><a name="[56a]"></a>lv_font_get_glyph_width</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_font.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_font_get_glyph_width
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
</UL>

<P><STRONG><a name="[145]"></a>lv_font_get_bitmap_fmt_txt</STRONG> (Thumb, 772 bytes, Stack size 56 bytes, lv_font_fmt_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = lv_font_get_bitmap_fmt_txt &rArr; lv_mem_buf_get &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_glyph_dsc_id
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompress_line
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_font_montserrat_16.o(.constdata)
</UL>
<P><STRONG><a name="[144]"></a>lv_font_get_glyph_dsc_fmt_txt</STRONG> (Thumb, 312 bytes, Stack size 40 bytes, lv_font_fmt_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_font_get_glyph_dsc_fmt_txt &rArr; get_glyph_dsc_id &rArr; _lv_utils_bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_utils_bsearch
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_glyph_dsc_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_font_montserrat_16.o(.constdata)
</UL>
<P><STRONG><a name="[542]"></a>_lv_font_clean_up_fmt_txt</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lv_font_fmt_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _lv_font_clean_up_fmt_txt &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[73e]"></a>lv_disp_drv_init</STRONG> (Thumb, 94 bytes, Stack size 4 bytes, lv_hal_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_disp_drv_init
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LvgBspInit
</UL>

<P><STRONG><a name="[73d]"></a>lv_disp_draw_buf_init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lv_hal_disp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LvgBspInit
</UL>

<P><STRONG><a name="[657]"></a>lv_disp_drv_register</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, lv_hal_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = lv_disp_drv_register &rArr; lv_theme_default_init &rArr; lv_obj_report_style_change &rArr; report_style_change_core &rArr;  report_style_change_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main (via Veneer)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create (via Veneer)
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scrollbar_mode
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_is_inited
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_ready (via Veneer)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LvgBspInit
</UL>

<P><STRONG><a name="[394]"></a>lv_disp_get_default</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_hal_disp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_get_refr_timer
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_clean_dcache
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_trig_activity
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_opa
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_image
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_color
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_theme
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_theme
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_prev
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scr_load_anim_start
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_primary
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;birthday_event_cb
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_event_cb
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_event_cb
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_event_cb
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_font_small
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_font_normal
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_font_large
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_secondary
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_from_obj
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[3f6]"></a>lv_disp_get_ver_res</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lv_hal_disp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_opa
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_image
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_color
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[395]"></a>lv_disp_get_hor_res</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, lv_hal_disp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_opa
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_image
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_color
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ta_event_cb
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_event_cb
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_event_cb
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
</UL>

<P><STRONG><a name="[65a]"></a>lv_disp_drv_update</STRONG> (Thumb, 276 bytes, Stack size 32 bytes, lv_hal_disp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_tree_walk
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set_height
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set_width
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_rotation
</UL>

<P><STRONG><a name="[882]"></a>lv_disp_set_default</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_hal_disp.o(.text), UNUSED)

<P><STRONG><a name="[65b]"></a>lv_disp_remove</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, lv_hal_disp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_del (via Veneer)
</UL>

<P><STRONG><a name="[883]"></a>lv_disp_get_antialiasing</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_hal_disp.o(.text), UNUSED)

<P><STRONG><a name="[38b]"></a>lv_disp_get_dpi</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lv_hal_disp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_anim_cb
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_dpx
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_constructor
</UL>

<P><STRONG><a name="[1be]"></a>lv_disp_flush_ready</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_hal_disp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_IRQHandler (via Veneer)
</UL>

<P><STRONG><a name="[884]"></a>lv_disp_flush_is_last</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_hal_disp.o(.text), UNUSED)

<P><STRONG><a name="[432]"></a>lv_disp_get_next</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_hal_disp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_inactive_time
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_now
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;walk_core
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_report_style_change
</UL>

<P><STRONG><a name="[537]"></a>lv_disp_get_draw_buf</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_hal_disp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_flush
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
</UL>

<P><STRONG><a name="[65d]"></a>lv_disp_set_rotation</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lv_hal_disp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_update
</UL>

<P><STRONG><a name="[885]"></a>lv_disp_get_rotation</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_hal_disp.o(.text), UNUSED)

<P><STRONG><a name="[886]"></a>lv_disp_drv_use_generic_set_px_cb</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lv_hal_disp.o(.text), UNUSED)

<P><STRONG><a name="[73f]"></a>lv_indev_drv_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lv_hal_indev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_indev_drv_init
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LvgBspInit
</UL>

<P><STRONG><a name="[65f]"></a>lv_indev_drv_register</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_hal_indev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lv_indev_drv_register &rArr; lv_timer_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create (via Veneer)
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LvgBspInit
</UL>

<P><STRONG><a name="[887]"></a>lv_indev_drv_update</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_hal_indev.o(.text), UNUSED)

<P><STRONG><a name="[450]"></a>lv_indev_get_next</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_hal_indev.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_reset
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_indev
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_scrolling
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_remove
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[45e]"></a>_lv_indev_read</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, lv_hal_indev.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
</UL>

<P><STRONG><a name="[888]"></a>lv_tick_inc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_hal_tick.o(.text), UNUSED)

<P><STRONG><a name="[434]"></a>lv_tick_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_hal_tick.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler (via Veneer)
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_trig_activity
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_reset_long_press
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_ready (via Veneer)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_constructor
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_reset (via Veneer)
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create_basic (via Veneer)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
</UL>

<P><STRONG><a name="[431]"></a>lv_tick_elaps</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lv_hal_tick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_tick_elaps
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler (via Veneer)
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_inactive_time
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;indev_proc_press
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_cache_open
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
</UL>

<P><STRONG><a name="[477]"></a>_lv_anim_core_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lv_anim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _lv_anim_core_init &rArr; lv_timer_create &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create (via Veneer)
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_resume (via Veneer)
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_pause (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[f3]"></a>lv_anim_path_linear</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lv_anim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_anim_path_linear &rArr; lv_map
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> lv_theme_default.o(.text)
<LI> lv_anim.o(.text)
<LI> lv_style.o(.text)
</UL>
<P><STRONG><a name="[396]"></a>lv_anim_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lv_anim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_anim_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_event_cb
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_event_cb
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del_delayed
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_fade_out
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_fade_in
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinner_constructor
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>

<P><STRONG><a name="[42e]"></a>lv_anim_del</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, lv_anim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = lv_anim_del &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_resume (via Veneer)
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_pause (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_area_into_view
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_destructor
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_destructor
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>

<P><STRONG><a name="[397]"></a>lv_anim_start</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, lv_anim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_resume (via Veneer)
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_is_empty
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_pause (via Veneer)
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_scr_load_anim
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_event_cb
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_event_cb
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del_delayed
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_fade_out
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_fade_in
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinner_constructor
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_event
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>

<P><STRONG><a name="[661]"></a>lv_anim_del_all</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lv_anim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_resume (via Veneer)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_pause (via Veneer)
</UL>

<P><STRONG><a name="[4cd]"></a>lv_anim_get</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lv_anim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_anim_get
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_end
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[662]"></a>lv_anim_count_running</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lv_anim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>

<P><STRONG><a name="[4ce]"></a>lv_anim_speed_to_time</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lv_anim.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[546]"></a>lv_anim_refr_now</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_anim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_now
</UL>

<P><STRONG><a name="[663]"></a>lv_anim_path_ease_in</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_anim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bezier3 (via Veneer)
</UL>

<P><STRONG><a name="[dd]"></a>lv_anim_path_ease_out</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_anim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_anim_path_ease_out &rArr; lv_bezier3
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bezier3 (via Veneer)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> lv_obj_scroll.o(.text)
<LI> lv_roller.o(.text)
</UL>
<P><STRONG><a name="[fc]"></a>lv_anim_path_ease_in_out</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_anim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lv_anim_path_ease_in_out &rArr; lv_bezier3
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bezier3 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_spinner.o(.text)
</UL>
<P><STRONG><a name="[665]"></a>lv_anim_path_overshoot</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_anim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bezier3 (via Veneer)
</UL>

<P><STRONG><a name="[666]"></a>lv_anim_path_bounce</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, lv_anim.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bezier3 (via Veneer)
</UL>

<P><STRONG><a name="[11b]"></a>lv_anim_path_step</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_anim.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lv_textarea.o(.text)
</UL>
<P><STRONG><a name="[426]"></a>lv_area_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_area.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_opa
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_image
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_set_bg_color
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>

<P><STRONG><a name="[ed]"></a>lv_area_set_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_area.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_flex.o(.text)
</UL>
<P><STRONG><a name="[ee]"></a>lv_area_set_height</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_area.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_flex.o(.text)
</UL>
<P><STRONG><a name="[889]"></a>_lv_area_set_pos</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_area.o(.text), UNUSED)

<P><STRONG><a name="[496]"></a>lv_area_get_size</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lv_area.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scrollbar_invalidate
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
</UL>

<P><STRONG><a name="[4ad]"></a>lv_area_increase</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_area.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_area_increase
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
</UL>

<P><STRONG><a name="[553]"></a>lv_area_move</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_area.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_area_move
</UL>
<BR>[Called By]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[3b8]"></a>_lv_area_intersect</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, lv_area.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _lv_area_intersect
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_area_is_visible
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[540]"></a>_lv_area_join</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, lv_area.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[4c7]"></a>_lv_area_is_point_on</STRONG> (Thumb, 540 bytes, Stack size 32 bytes, lv_area.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_hit_test
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_out
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[53f]"></a>_lv_area_is_on</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, lv_area.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[497]"></a>_lv_area_is_in</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, lv_area.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _lv_area_is_in &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_inv_area
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_to
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
</UL>

<P><STRONG><a name="[56d]"></a>_lv_area_is_out</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, lv_area.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _lv_area_is_out &rArr; _lv_area_is_point_on &rArr;  _lv_area_is_point_on (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
</UL>
<BR>[Called By]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
</UL>

<P><STRONG><a name="[88a]"></a>lv_area_align</STRONG> (Thumb, 562 bytes, Stack size 20 bytes, lv_area.o(.text), UNUSED)

<P><STRONG><a name="[52e]"></a>lv_async_call</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_async.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_set_repeat_count (via Veneer)
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create (via Veneer)
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del_async
</UL>

<P><STRONG><a name="[66b]"></a>_lv_bidi_detect_base_dir</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_bidi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _lv_bidi_detect_base_dir &rArr; lv_bidi_get_letter_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bidi_get_letter_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[567]"></a>_lv_bidi_process_paragraph</STRONG> (Thumb, 1070 bytes, Stack size 128 bytes, lv_bidi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bracket_process
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bidi_get_letter_dir
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtl_reverse
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_get_logical_pos
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_get_visual_pos
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_process
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[66c]"></a>_lv_bidi_process</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, lv_bidi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = _lv_bidi_process &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_process_paragraph
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bidi_get_letter_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
</UL>

<P><STRONG><a name="[568]"></a>_lv_bidi_get_logical_pos</STRONG> (Thumb, 180 bytes, Stack size 64 bytes, lv_bidi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_process_paragraph
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[66d]"></a>_lv_bidi_get_visual_pos</STRONG> (Thumb, 214 bytes, Stack size 64 bytes, lv_bidi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _lv_bidi_get_visual_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_process_paragraph
</UL>
<BR>[Called By]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
</UL>

<P><STRONG><a name="[4e5]"></a>lv_bidi_calculate_align</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, lv_bidi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lv_bidi_calculate_align &rArr; lv_bidi_get_letter_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bidi_get_letter_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
</UL>

<P><STRONG><a name="[476]"></a>_lv_fs_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_fs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[66e]"></a>lv_fs_get_drv</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_fs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>

<P><STRONG><a name="[66f]"></a>lv_fs_is_ready</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lv_fs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>

<P><STRONG><a name="[587]"></a>lv_fs_open</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, lv_fs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_fs_open
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
</UL>

<P><STRONG><a name="[581]"></a>lv_fs_close</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_fs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_fs_close
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_close
</UL>

<P><STRONG><a name="[584]"></a>lv_fs_read</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lv_fs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_fs_read
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
</UL>

<P><STRONG><a name="[88b]"></a>lv_fs_write</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, lv_fs.o(.text), UNUSED)

<P><STRONG><a name="[583]"></a>lv_fs_seek</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lv_fs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_fs_seek
</UL>
<BR>[Called By]<UL><LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
</UL>

<P><STRONG><a name="[88c]"></a>lv_fs_tell</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lv_fs.o(.text), UNUSED)

<P><STRONG><a name="[670]"></a>lv_fs_dir_open</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, lv_fs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>

<P><STRONG><a name="[88d]"></a>lv_fs_dir_read</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lv_fs.o(.text), UNUSED)

<P><STRONG><a name="[88e]"></a>lv_fs_dir_close</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lv_fs.o(.text), UNUSED)

<P><STRONG><a name="[741]"></a>lv_fs_drv_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lv_fs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LvgBspInit
</UL>

<P><STRONG><a name="[671]"></a>lv_fs_drv_register</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_fs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lv_fs_drv_register &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LvgBspInit
</UL>

<P><STRONG><a name="[672]"></a>lv_fs_get_letters</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lv_fs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
</UL>

<P><STRONG><a name="[586]"></a>lv_fs_get_ext</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lv_fs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_fs_get_ext
</UL>
<BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_info
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
</UL>

<P><STRONG><a name="[673]"></a>lv_fs_up</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lv_fs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>

<P><STRONG><a name="[674]"></a>lv_fs_get_last</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lv_fs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>

<P><STRONG><a name="[441]"></a>_lv_ll_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_ll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_create
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_timer_core_init (via Veneer)
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_init
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_fs_init
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_anim_core_init
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_group_init
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_constructor
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_constructor
</UL>

<P><STRONG><a name="[443]"></a>_lv_ll_ins_head</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lv_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_add_scale_lines
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_add_scale
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_add_needle_line
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_add_arc
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_add_series
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_create
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create (via Veneer)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_decoder_init
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_create
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_add_cursor
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_add_needle_img
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create_basic (via Veneer)
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_drv_register
</UL>

<P><STRONG><a name="[d6]"></a>_lv_ll_get_prev</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_ll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_type
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_point_count
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_point_pos_by_id
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_group.o(.text)
</UL>
<P><STRONG><a name="[d9]"></a>_lv_ll_get_head</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_ll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler (via Veneer)
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_series_next
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_next
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_anim_core_init
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_swap_obj
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_del
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_get
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_remove
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_destructor
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_cursor_point
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_get_next (via Veneer)
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_letters
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_dir_open
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_is_ready
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_drv
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_count_running
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del_all
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_group.o(.text)
</UL>
<P><STRONG><a name="[675]"></a>_lv_ll_ins_prev</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, lv_ll.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>

<P><STRONG><a name="[44d]"></a>_lv_ll_ins_tail</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lv_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _lv_ll_ins_tail &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
</UL>

<P><STRONG><a name="[d8]"></a>_lv_ll_get_next</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_ll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler (via Veneer)
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_series_next
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_next
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_swap_obj
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_del
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_get
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_open
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_get_next (via Veneer)
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_letters
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_dir_open
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_is_ready
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_get_drv
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_count_running
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_group.o(.text)
</UL>
<P><STRONG><a name="[d7]"></a>_lv_ll_get_tail</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_ll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_type
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_point_count
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_point_pos_by_id
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_group.o(.text)
</UL>
<P><STRONG><a name="[447]"></a>_lv_ll_remove</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, lv_ll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler (via Veneer)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_add_series
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_del
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_remove
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_delete
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_destructor
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_remove_series
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_del (via Veneer)
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_move_before
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_chg_list
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
</UL>

<P><STRONG><a name="[446]"></a>_lv_ll_clear</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lv_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _lv_ll_clear &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_del
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_destructor
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_destructor
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del_all
</UL>

<P><STRONG><a name="[676]"></a>_lv_ll_chg_list</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, lv_ll.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
</UL>

<P><STRONG><a name="[456]"></a>_lv_ll_get_len</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lv_ll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_obj_count
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_point_pos_by_id
</UL>

<P><STRONG><a name="[677]"></a>_lv_ll_move_before</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, lv_ll.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
</UL>

<P><STRONG><a name="[60c]"></a>_lv_ll_is_empty</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lv_ll.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[474]"></a>lv_mem_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_mem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_init
</UL>

<P><STRONG><a name="[88f]"></a>lv_mem_deinit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_mem.o(.text), UNUSED)

<P><STRONG><a name="[890]"></a>lv_mem_monitor</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_mem.o(.text), UNUSED)

<P><STRONG><a name="[48a]"></a>lv_mem_alloc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_password_mode
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_set_text
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_type
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_add_series
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_placeholder_text
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_cnt
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_add_cell_ctrl
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_set_size
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_tail
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_head
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_async_call
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_alloc
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_points_alloc
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_proc
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_set_text_vfmt
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_ins_prev
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_add_option
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_clear_cell_ctrl
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_constructor
</UL>

<P><STRONG><a name="[448]"></a>lv_mem_free</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lv_mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler (via Veneer)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_password_mode
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options_static
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_type
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_add_series
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_placeholder_text
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_cnt
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_cache_set_size
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_destructor
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_del
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_font_clean_up_fmt_txt
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_draw_mask_cleanup
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_async_call
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_close
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_remove
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_delete
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_open
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_close
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_open
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_free
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_alloc
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_destructor
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_points_alloc
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_ext_x_array
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_ext_y_array
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_remove_series
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_destructor
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_del (via Veneer)
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_proc
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_async_timer_cb
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;anim_timer
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_destructor
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_destructor
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_static
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_clear_options
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_destructor
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_constructor
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_set_text_static
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_destructor
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_destructor
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_destructor
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_row_cnt
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_destructor
</UL>

<P><STRONG><a name="[43d]"></a>lv_mem_realloc</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lv_mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc (via Veneer)
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc (via Veneer)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_set_text
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_placeholder_text
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_bitmap_fmt_txt
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_cnt
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_layout_register
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_parent
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_event_dsc
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_event_cb
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_points_alloc
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_add_option
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value_fmt
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_row_cnt
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_constructor
</UL>

<P><STRONG><a name="[529]"></a>lv_mem_test</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lv_mem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_handler (via Veneer)
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[484]"></a>lv_mem_buf_get</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, lv_mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lv_mem_buf_get &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc (via Veneer)
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc (via Veneer)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_bitmap_fmt_txt
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_flush
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_get_logical_pos
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_set_text_vfmt
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_get_visual_pos
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_add_option
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value_fmt
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
</UL>

<P><STRONG><a name="[488]"></a>lv_mem_buf_release</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lv_mem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_bitmap_fmt_txt
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_state
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_flush
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_border_generic
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_get_logical_pos
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_letter
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_map
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_built_in_read_line
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_set_text_vfmt
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_get_visual_pos
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_add_option
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value_fmt
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
</UL>

<P><STRONG><a name="[541]"></a>lv_mem_buf_free_all</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, lv_mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lv_mem_buf_free_all &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[3ab]"></a>lv_snprintf</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lv_printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = lv_snprintf &rArr; _vsnprintf &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_event_cb
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_chart_event_cb
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[67a]"></a>lv_vsnprintf</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_set_text_vfmt
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value_fmt
</UL>

<P><STRONG><a name="[40b]"></a>lv_style_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_style.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4db]"></a>lv_style_reset</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_style_reset &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[590]"></a>lv_style_register_prop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_style.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_grid_init
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_flex_init
</UL>

<P><STRONG><a name="[4da]"></a>lv_style_remove_prop</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, lv_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lv_style_remove_prop &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_local_style_prop
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fade_in_anim_ready
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
</UL>

<P><STRONG><a name="[4d4]"></a>_lv_style_get_prop_group</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_style.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>

<P><STRONG><a name="[4df]"></a>lv_style_set_prop</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, lv_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_opa
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_font
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_width
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_spread
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_opa
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_ofs_y
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_ofs_x
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_width
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_opa
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_img_recolor_opa
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_img_opa
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_side
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_opa
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_blend_mode
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_arc_width
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_arc_opa
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_grid_cell_y_align
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_grid_cell_x_align
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_grid_cell_row_span
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_grid_cell_row_pos
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_grid_cell_column_span
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_grid_cell_column_pos
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_grid_column_align
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_grid_row_align
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_grid_column_dsc_array
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_grid_row_dsc_array
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_grow
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_track_place
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_cross_place
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_main_place
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_flex_flow
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transform_width
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transform_height
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_line_space
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_align
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_color
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_width
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_pad
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_opa
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_color
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_max_width
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_max_height
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_height
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_clip_corner
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_post
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_img_src
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_grad_color
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_arc_rounded
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_width
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_row
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_column
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_color
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_color_filter_opa
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_color_filter_dsc
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_arc_color
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_anim_time
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_decor
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_arc_img_src
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_arc_color_filtered
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_color_filtered
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_rounded
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_dash_gap
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_dash_width
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_color_filtered
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_color_filtered
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_img_recolor_filtered
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_img_recolor
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_letter_space
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color_filtered
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color_filtered
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_img_tiled
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_img_recolor_opa
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_img_recolor_filtered
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_img_recolor
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_img_opa
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_grad_stop
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_main_stop
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_grad_dir
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_grad_color_filtered
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color_filtered
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_base_dir
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_layout
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_anim_speed
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_opa
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transform_angle
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transform_zoom
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_translate_y
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_translate_x
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_align
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_y
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_x
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_min_height
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_min_width
</UL>

<P><STRONG><a name="[4d5]"></a>lv_style_get_prop</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, lv_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_style_get_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_local_style_prop
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_state_compare
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_cb
</UL>

<P><STRONG><a name="[5b4]"></a>lv_style_transition_dsc_init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lv_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_style_transition_dsc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[4d6]"></a>lv_style_prop_get_default</STRONG> (Thumb, 308 bytes, Stack size 8 bytes, lv_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_style_prop_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>

<P><STRONG><a name="[4e0]"></a>lv_style_is_empty</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lv_style.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_ready_cb
</UL>

<P><STRONG><a name="[5ba]"></a>lv_style_set_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[67b]"></a>lv_style_set_min_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5db]"></a>lv_style_set_max_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_max_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5bb]"></a>lv_style_set_height</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_height &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[67c]"></a>lv_style_set_min_height</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5d8]"></a>lv_style_set_max_height</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_max_height &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[67d]"></a>lv_style_set_x</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[67e]"></a>lv_style_set_y</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[67f]"></a>lv_style_set_align</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5d2]"></a>lv_style_set_transform_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_transform_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5d3]"></a>lv_style_set_transform_height</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_transform_height &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[680]"></a>lv_style_set_translate_x</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[681]"></a>lv_style_set_translate_y</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[682]"></a>lv_style_set_transform_zoom</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[683]"></a>lv_style_set_transform_angle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5b9]"></a>lv_style_set_pad_top</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_pad_top &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5c2]"></a>lv_style_set_pad_bottom</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_pad_bottom &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5c1]"></a>lv_style_set_pad_left</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_pad_left &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5b8]"></a>lv_style_set_pad_right</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_pad_right &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5bd]"></a>lv_style_set_pad_row</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_pad_row &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5be]"></a>lv_style_set_pad_column</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_pad_column &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[40f]"></a>lv_style_set_radius</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_radius &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5cf]"></a>lv_style_set_clip_corner</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_clip_corner &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[684]"></a>lv_style_set_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5cd]"></a>lv_style_set_color_filter_dsc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_color_filter_dsc &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5ce]"></a>lv_style_set_color_filter_opa</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_color_filter_opa &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5d4]"></a>lv_style_set_anim_time</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_anim_time &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[685]"></a>lv_style_set_anim_speed</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5b5]"></a>lv_style_set_transition</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[686]"></a>lv_style_set_blend_mode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[687]"></a>lv_style_set_layout</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[688]"></a>lv_style_set_base_dir</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5b6]"></a>lv_style_set_bg_color</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lv_style_set_bg_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[689]"></a>lv_style_set_bg_color_filtered</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5bc]"></a>lv_style_set_bg_opa</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_bg_opa &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5dc]"></a>lv_style_set_bg_grad_color</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lv_style_set_bg_grad_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[68a]"></a>lv_style_set_bg_grad_color_filtered</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[68b]"></a>lv_style_set_bg_grad_dir</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[68c]"></a>lv_style_set_bg_main_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[68d]"></a>lv_style_set_bg_grad_stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5d9]"></a>lv_style_set_bg_img_src</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_bg_img_src &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[68e]"></a>lv_style_set_bg_img_opa</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[68f]"></a>lv_style_set_bg_img_recolor</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[690]"></a>lv_style_set_bg_img_recolor_filtered</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[691]"></a>lv_style_set_bg_img_recolor_opa</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[692]"></a>lv_style_set_bg_img_tiled</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5bf]"></a>lv_style_set_border_color</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lv_style_set_border_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[693]"></a>lv_style_set_border_color_filtered</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[694]"></a>lv_style_set_border_opa</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[40e]"></a>lv_style_set_border_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_border_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5da]"></a>lv_style_set_border_side</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_border_side &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5c0]"></a>lv_style_set_border_post</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_border_post &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[39b]"></a>lv_style_set_text_color</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lv_style_set_text_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_event_cb
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[695]"></a>lv_style_set_text_color_filtered</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[40c]"></a>lv_style_set_text_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_text_opa &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
</UL>

<P><STRONG><a name="[40d]"></a>lv_style_set_text_font</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_text_font &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[696]"></a>lv_style_set_text_letter_space</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5d0]"></a>lv_style_set_text_line_space</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_text_line_space &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[697]"></a>lv_style_set_text_decor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5d1]"></a>lv_style_set_text_align</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_text_align &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[698]"></a>lv_style_set_img_opa</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[699]"></a>lv_style_set_img_recolor</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[69a]"></a>lv_style_set_img_recolor_filtered</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[69b]"></a>lv_style_set_img_recolor_opa</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5c6]"></a>lv_style_set_outline_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_outline_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5c5]"></a>lv_style_set_outline_color</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lv_style_set_outline_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[69c]"></a>lv_style_set_outline_color_filtered</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5c8]"></a>lv_style_set_outline_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_outline_opa &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5c7]"></a>lv_style_set_outline_pad</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_outline_pad &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5ca]"></a>lv_style_set_shadow_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_shadow_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[69d]"></a>lv_style_set_shadow_ofs_x</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5cc]"></a>lv_style_set_shadow_ofs_y</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_shadow_ofs_y &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5dd]"></a>lv_style_set_shadow_spread</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_shadow_spread &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5c9]"></a>lv_style_set_shadow_color</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lv_style_set_shadow_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[69e]"></a>lv_style_set_shadow_color_filtered</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5cb]"></a>lv_style_set_shadow_opa</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_shadow_opa &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5c4]"></a>lv_style_set_line_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_line_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[69f]"></a>lv_style_set_line_dash_width</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[6a0]"></a>lv_style_set_line_dash_gap</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[6a1]"></a>lv_style_set_line_rounded</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5c3]"></a>lv_style_set_line_color</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lv_style_set_line_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[6a2]"></a>lv_style_set_line_color_filtered</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[6a3]"></a>lv_style_set_line_opa</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[5d6]"></a>lv_style_set_arc_width</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_arc_width &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5d7]"></a>lv_style_set_arc_rounded</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lv_style_set_arc_rounded &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[5d5]"></a>lv_style_set_arc_color</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lv_style_gen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lv_style_set_arc_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[6a4]"></a>lv_style_set_arc_color_filtered</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[6a5]"></a>lv_style_set_arc_opa</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[6a6]"></a>lv_style_set_arc_img_src</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_style_gen.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
</UL>

<P><STRONG><a name="[6f6]"></a>_lv_txt_is_cmd</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, lv_txt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[569]"></a>_lv_txt_encoded_letter_next_2</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lv_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _lv_txt_encoded_letter_next_2
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[565]"></a>lv_txt_get_width</STRONG> (Thumb, 188 bytes, Stack size 56 bytes, lv_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = lv_txt_get_width &rArr; lv_font_get_glyph_width
</UL>
<BR>[Calls]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[564]"></a>_lv_txt_get_next_line</STRONG> (Thumb, 592 bytes, Stack size 96 bytes, lv_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _lv_txt_get_next_line &rArr; lv_font_get_glyph_width
</UL>
<BR>[Calls]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[3bc]"></a>lv_txt_get_size</STRONG> (Thumb, 406 bytes, Stack size 80 bytes, lv_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_font_get_glyph_width
</UL>
<BR>[Calls]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chart_event_cb
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_event
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_row_height
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[6a7]"></a>_lv_txt_ins</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, lv_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _lv_txt_ins &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_add_option
</UL>

<P><STRONG><a name="[6a8]"></a>_lv_txt_cut</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, lv_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _lv_txt_cut
</UL>
<BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_cut_text
</UL>

<P><STRONG><a name="[6a9]"></a>_lv_txt_set_text_vfmt</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, lv_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = _lv_txt_set_text_vfmt &rArr; lv_vsnprintf &rArr; _vsnprintf &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_proc
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_calc_bytes_cnt
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
</UL>

<P><STRONG><a name="[6aa]"></a>_lv_txt_ap_calc_bytes_cnt</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, lv_txt_ap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _lv_txt_ap_calc_bytes_cnt
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_set_text
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_set_text_vfmt
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_add_option
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value_fmt
</UL>

<P><STRONG><a name="[6ab]"></a>_lv_txt_ap_proc</STRONG> (Thumb, 850 bytes, Stack size 56 bytes, lv_txt_ap.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _lv_txt_ap_proc &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_set_text
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_set_text_vfmt
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_add_option
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value_fmt
</UL>

<P><STRONG><a name="[656]"></a>_lv_utils_bsearch</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, lv_utils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _lv_utils_bsearch
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc_fmt_txt
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_glyph_dsc_id
</UL>

<P><STRONG><a name="[6ac]"></a>lv_arc_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>

<P><STRONG><a name="[641]"></a>lv_arc_set_start_angle</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, lv_arc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = lv_arc_set_start_angle &rArr; inv_arc_area &rArr; lv_obj_calculate_ext_draw_size &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_anim_start_angle
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_mode
</UL>

<P><STRONG><a name="[642]"></a>lv_arc_set_end_angle</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lv_arc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = lv_arc_set_end_angle &rArr; inv_arc_area &rArr; lv_obj_calculate_ext_draw_size &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arc_anim_end_angle
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_mode
</UL>

<P><STRONG><a name="[6ae]"></a>lv_arc_set_angles</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[6b0]"></a>lv_arc_set_bg_start_angle</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[6b1]"></a>lv_arc_set_bg_end_angle</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>

<P><STRONG><a name="[643]"></a>lv_arc_set_bg_angles</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lv_arc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = lv_arc_set_bg_angles &rArr; value_update &rArr; lv_arc_set_start_angle &rArr; inv_arc_area &rArr; lv_obj_calculate_ext_draw_size &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inv_arc_area
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinner_constructor
</UL>

<P><STRONG><a name="[644]"></a>lv_arc_set_rotation</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_arc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_arc_set_rotation &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinner_constructor
</UL>

<P><STRONG><a name="[6b2]"></a>lv_arc_set_value</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update
</UL>

<P><STRONG><a name="[6b3]"></a>lv_arc_set_mode</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update
</UL>

<P><STRONG><a name="[6b4]"></a>lv_arc_set_range</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update
</UL>

<P><STRONG><a name="[6b5]"></a>lv_arc_set_change_rate</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6b6]"></a>lv_arc_get_angle_start</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6b7]"></a>lv_arc_get_angle_end</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6b8]"></a>lv_arc_get_bg_angle_start</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6b9]"></a>lv_arc_get_bg_angle_end</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6ba]"></a>lv_arc_get_value</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6bb]"></a>lv_arc_get_min_value</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6bc]"></a>lv_arc_get_max_value</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6bd]"></a>lv_arc_get_mode</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_arc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6be]"></a>lv_bar_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_bar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>

<P><STRONG><a name="[6bf]"></a>lv_bar_set_value</STRONG> (Thumb, 188 bytes, Stack size 88 bytes, lv_bar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_bar_set_value &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_range
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_constructor
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[6c0]"></a>lv_bar_set_start_value</STRONG> (Thumb, 180 bytes, Stack size 88 bytes, lv_bar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_bar_set_start_value &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[6c1]"></a>lv_bar_get_mode</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_bar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_bar_get_mode &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[6c2]"></a>lv_bar_set_range</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, lv_bar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
</UL>

<P><STRONG><a name="[6c3]"></a>lv_bar_set_mode</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lv_bar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[3eb]"></a>lv_bar_get_value</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lv_bar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_bar_get_value &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slider_event_cb
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[6c4]"></a>lv_bar_get_start_value</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lv_bar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_bar_get_start_value &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[6c5]"></a>lv_bar_get_min_value</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_bar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6c6]"></a>lv_bar_get_max_value</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_bar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[3fd]"></a>lv_btn_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_btn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_btn_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_changer_create
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_add_btn
</UL>

<P><STRONG><a name="[648]"></a>lv_btnmatrix_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_btnmatrix_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
</UL>

<P><STRONG><a name="[5ea]"></a>lv_btnmatrix_set_map</STRONG> (Thumb, 656 bytes, Stack size 136 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = lv_btnmatrix_set_map &rArr; lv_obj_get_content_height &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_ctrl_map
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_set_map
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_set_mode
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_constructor
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_width
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_constructor
</UL>

<P><STRONG><a name="[61b]"></a>lv_btnmatrix_set_ctrl_map</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_btnmatrix_set_ctrl_map &rArr; lv_btnmatrix_set_map &rArr; lv_obj_get_content_height &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_set_map
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_set_mode
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_constructor
</UL>

<P><STRONG><a name="[5e7]"></a>lv_btnmatrix_set_selected_btn</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lv_btnmatrix_set_selected_btn &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
</UL>

<P><STRONG><a name="[6c9]"></a>lv_btnmatrix_clear_btn_ctrl</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lv_btnmatrix.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>

<P><STRONG><a name="[5e4]"></a>lv_btnmatrix_clear_btn_ctrl_all</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = lv_btnmatrix_clear_btn_ctrl_all &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;highlight_update
</UL>

<P><STRONG><a name="[5e5]"></a>lv_btnmatrix_set_btn_ctrl</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = lv_btnmatrix_set_btn_ctrl &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;highlight_update
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_one_checked
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[5eb]"></a>lv_btnmatrix_set_btn_ctrl_all</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = lv_btnmatrix_set_btn_ctrl_all &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>
<BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_add_tab
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
</UL>

<P><STRONG><a name="[6ca]"></a>lv_btnmatrix_set_btn_width</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lv_btnmatrix.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>

<P><STRONG><a name="[5e9]"></a>lv_btnmatrix_has_btn_ctrl</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_btnmatrix_has_btn_ctrl &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_part_begin_event_cb
</UL>

<P><STRONG><a name="[649]"></a>lv_btnmatrix_set_one_checked</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = lv_btnmatrix_set_one_checked &rArr; lv_btnmatrix_set_btn_ctrl &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_constructor
</UL>

<P><STRONG><a name="[6cb]"></a>lv_btnmatrix_get_map</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_btnmatrix.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[5e6]"></a>lv_btnmatrix_get_selected_btn</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_btnmatrix_get_selected_btn &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_get_pressed_date
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_part_begin_event_cb
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btns_value_changed_event_cb
</UL>

<P><STRONG><a name="[5e8]"></a>lv_btnmatrix_get_btn_text</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = lv_btnmatrix_get_btn_text &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_get_pressed_date
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
</UL>

<P><STRONG><a name="[6cc]"></a>lv_btnmatrix_get_one_checked</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_btnmatrix.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[41c]"></a>lv_checkbox_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_checkbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_checkbox_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
</UL>

<P><STRONG><a name="[41d]"></a>lv_checkbox_set_text</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lv_checkbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_checkbox_set_text &rArr; lv_obj_refresh_self_size &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_proc
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_calc_bytes_cnt
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
</UL>

<P><STRONG><a name="[6ce]"></a>lv_checkbox_set_text_static</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lv_checkbox.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>

<P><STRONG><a name="[891]"></a>lv_checkbox_get_text</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_checkbox.o(.text), UNUSED)

<P><STRONG><a name="[405]"></a>lv_dropdown_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_dropdown_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[6cf]"></a>lv_dropdown_set_text</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[5ef]"></a>lv_dropdown_set_options</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, lv_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = lv_dropdown_set_options &rArr; _lv_txt_ap_proc &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_proc
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_calc_bytes_cnt
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[406]"></a>lv_dropdown_set_options_static</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, lv_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_dropdown_set_options_static &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
</UL>

<P><STRONG><a name="[6d0]"></a>lv_dropdown_add_option</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, lv_dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_proc
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_calc_bytes_cnt
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ins
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat (via Veneer)
</UL>

<P><STRONG><a name="[6d2]"></a>lv_dropdown_clear_options</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, lv_dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[5f0]"></a>lv_dropdown_set_selected</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_dropdown_set_selected &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
</UL>

<P><STRONG><a name="[6d3]"></a>lv_dropdown_set_dir</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, lv_dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6d4]"></a>lv_dropdown_set_symbol</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6d5]"></a>lv_dropdown_set_selected_highlight</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lv_dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6d6]"></a>lv_dropdown_get_list</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6d7]"></a>lv_dropdown_get_text</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lv_dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6d8]"></a>lv_dropdown_get_options</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lv_dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[5ee]"></a>lv_dropdown_get_selected</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_dropdown_get_selected &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;year_event_cb
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
</UL>

<P><STRONG><a name="[6d9]"></a>lv_dropdown_get_option_cnt</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6da]"></a>lv_dropdown_get_selected_str</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, lv_dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>

<P><STRONG><a name="[6db]"></a>lv_dropdown_get_symbol</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6dc]"></a>lv_dropdown_get_selected_highlight</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6dd]"></a>lv_dropdown_get_dir</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6de]"></a>lv_dropdown_open</STRONG> (Thumb, 708 bytes, Stack size 40 bytes, lv_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = lv_dropdown_open &rArr; lv_label_set_text_static &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_screen
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y2
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_static
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_event
</UL>

<P><STRONG><a name="[6e0]"></a>lv_dropdown_close</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_dropdown.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>

<P><STRONG><a name="[3a2]"></a>lv_img_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_img.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_img_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_shop_item
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_add_btn
</UL>

<P><STRONG><a name="[3a3]"></a>lv_img_set_src</STRONG> (Thumb, 380 bytes, Stack size 48 bytes, lv_img.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = lv_img_set_src &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_font_get_glyph_width
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_shop_item
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_add_btn
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
</UL>

<P><STRONG><a name="[6e4]"></a>lv_img_set_offset_x</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_img.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6e5]"></a>lv_img_set_offset_y</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_img.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6e6]"></a>lv_img_set_angle</STRONG> (Thumb, 268 bytes, Stack size 48 bytes, lv_img.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
</UL>

<P><STRONG><a name="[6e7]"></a>lv_img_set_pivot</STRONG> (Thumb, 264 bytes, Stack size 56 bytes, lv_img.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
</UL>

<P><STRONG><a name="[6e8]"></a>lv_img_set_zoom</STRONG> (Thumb, 276 bytes, Stack size 48 bytes, lv_img.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
</UL>

<P><STRONG><a name="[6e9]"></a>lv_img_set_antialias</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lv_img.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>

<P><STRONG><a name="[6ea]"></a>lv_img_set_size_mode</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lv_img.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6eb]"></a>lv_img_get_src</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_img.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6ec]"></a>lv_img_get_offset_x</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_img.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6ed]"></a>lv_img_get_offset_y</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_img.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6ee]"></a>lv_img_get_angle</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_img.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6ef]"></a>lv_img_get_pivot</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lv_img.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6f0]"></a>lv_img_get_zoom</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_img.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6f1]"></a>lv_img_get_antialias</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lv_img.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6f2]"></a>lv_img_get_size_mode</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_img.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[3a5]"></a>lv_label_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_label_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_meter_box
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_shop_item
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_add_title
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdownlist_constructor
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
</UL>

<P><STRONG><a name="[6e2]"></a>lv_label_get_text</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_label_get_text &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_password_mode
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_text
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_get_options
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_get_selected_str
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>

<P><STRONG><a name="[6f5]"></a>lv_label_get_letter_on</STRONG> (Thumb, 738 bytes, Stack size 88 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_encoded_letter_next_2
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_process_paragraph
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_get_logical_pos
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_is_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[3a6]"></a>lv_label_set_text</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_proc
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_calc_bytes_cnt
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_password_mode
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_meter_box
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_shop_item
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_add_title
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
</UL>

<P><STRONG><a name="[3ad]"></a>lv_label_set_text_fmt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_set_text_vfmt
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter1_indic1_anim_cb
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter1_indic2_anim_cb
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter1_indic3_anim_cb
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter2_timer_cb
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;meter3_anim_cb
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;month_event_cb
</UL>

<P><STRONG><a name="[6df]"></a>lv_label_set_text_static</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = lv_label_set_text_static &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>
<BR>[Called By]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
</UL>

<P><STRONG><a name="[3fc]"></a>lv_label_set_long_mode</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = lv_label_set_long_mode &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_constructor
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_win_add_title
</UL>

<P><STRONG><a name="[6f9]"></a>lv_label_set_recolor</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_label.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[6fa]"></a>lv_label_set_text_sel_start</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_label_set_text_sel_start &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
</UL>

<P><STRONG><a name="[6fb]"></a>lv_label_set_text_sel_end</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_label_set_text_sel_end &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
</UL>

<P><STRONG><a name="[6fc]"></a>lv_label_get_long_mode</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_label.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6fd]"></a>lv_label_get_recolor</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_label.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[6fe]"></a>lv_label_get_letter_pos</STRONG> (Thumb, 658 bytes, Stack size 96 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = lv_label_get_letter_pos &rArr; _lv_bidi_get_visual_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_get_visual_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
</UL>

<P><STRONG><a name="[6ff]"></a>lv_label_is_char_under_pos</STRONG> (Thumb, 528 bytes, Stack size 112 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = lv_label_is_char_under_pos &rArr; lv_obj_calculate_style_text_align &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_width
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_get_next_line
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_encoded_letter_next_2
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_is_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[700]"></a>lv_label_get_text_selection_start</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_label_get_text_selection_start &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_text_is_selected
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
</UL>

<P><STRONG><a name="[701]"></a>lv_label_get_text_selection_end</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_label_get_text_selection_end &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_text_is_selected
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
</UL>

<P><STRONG><a name="[702]"></a>lv_label_ins_text</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = lv_label_ins_text &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ins
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_process
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
</UL>

<P><STRONG><a name="[703]"></a>lv_label_cut_text</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, lv_label.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_cut
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>

<P><STRONG><a name="[704]"></a>lv_line_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_line.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>

<P><STRONG><a name="[705]"></a>lv_line_set_points</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, lv_line.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[706]"></a>lv_line_set_y_invert</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lv_line.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[707]"></a>lv_line_get_y_invert</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_line.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[708]"></a>lv_roller_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_roller.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>

<P><STRONG><a name="[709]"></a>lv_roller_set_options</STRONG> (Thumb, 246 bytes, Stack size 40 bytes, lv_roller.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = lv_roller_set_options &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_constructor
</UL>

<P><STRONG><a name="[70c]"></a>lv_roller_set_selected</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lv_roller.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = lv_roller_set_selected &rArr; refr_position &rArr; inf_normalize &rArr; lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[70d]"></a>lv_roller_set_visible_row_count</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, lv_roller.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[70e]"></a>lv_roller_get_selected</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, lv_roller.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[70f]"></a>lv_roller_get_selected_str</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, lv_roller.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>

<P><STRONG><a name="[710]"></a>lv_roller_get_options</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lv_roller.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
</UL>

<P><STRONG><a name="[711]"></a>lv_roller_get_option_cnt</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lv_roller.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[407]"></a>lv_slider_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_slider_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
</UL>

<P><STRONG><a name="[714]"></a>lv_slider_is_dragged</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_slider.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[409]"></a>lv_switch_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_switch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_switch_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
</UL>

<P><STRONG><a name="[716]"></a>lv_table_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>

<P><STRONG><a name="[718]"></a>lv_table_set_row_cnt</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, lv_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_add_cell_ctrl
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_clear_cell_ctrl
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value_fmt
</UL>

<P><STRONG><a name="[719]"></a>lv_table_set_col_cnt</STRONG> (Thumb, 300 bytes, Stack size 32 bytes, lv_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_width
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_add_cell_ctrl
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_clear_cell_ctrl
</UL>

<P><STRONG><a name="[71a]"></a>lv_table_set_cell_value</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, lv_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_cnt
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_proc
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_calc_bytes_cnt
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_row_cnt
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
</UL>

<P><STRONG><a name="[71b]"></a>lv_table_set_cell_value_fmt</STRONG> (Thumb, 430 bytes, Stack size 72 bytes, lv_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_proc
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_calc_bytes_cnt
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_vsnprintf
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_row_cnt
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_row_height
</UL>

<P><STRONG><a name="[71d]"></a>lv_table_set_col_width</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lv_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_cnt
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
</UL>

<P><STRONG><a name="[71e]"></a>lv_table_add_cell_ctrl</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, lv_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_cnt
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_row_cnt
</UL>

<P><STRONG><a name="[71f]"></a>lv_table_clear_cell_ctrl</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, lv_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_cnt
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_row_cnt
</UL>

<P><STRONG><a name="[720]"></a>lv_table_get_cell_value</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[721]"></a>lv_table_get_row_cnt</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lv_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[722]"></a>lv_table_get_col_cnt</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[723]"></a>lv_table_get_col_width</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, lv_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[724]"></a>lv_table_has_cell_ctrl</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, lv_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[892]"></a>lv_table_get_selected_cell</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_table.o(.text), UNUSED)

<P><STRONG><a name="[401]"></a>lv_textarea_create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = lv_textarea_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
</UL>

<P><STRONG><a name="[624]"></a>lv_textarea_get_cursor_pos</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_textarea_get_cursor_pos &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
</UL>

<P><STRONG><a name="[626]"></a>lv_textarea_set_cursor_pos</STRONG> (Thumb, 386 bytes, Stack size 104 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = lv_textarea_set_cursor_pos &rArr; refr_cursor_area &rArr; lv_label_get_letter_pos &rArr; _lv_bidi_get_visual_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_right
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_left
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_up
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_down
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char_forward
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_constructor
</UL>

<P><STRONG><a name="[728]"></a>lv_textarea_clear_selection</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = lv_textarea_clear_selection &rArr; lv_label_set_text_sel_end &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_selection_end
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_selection_start
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_sel_end
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_sel_start
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_password_mode
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text_selection
</UL>

<P><STRONG><a name="[625]"></a>lv_textarea_get_text</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_textarea_get_text &rArr; lv_label_get_text &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
</UL>

<P><STRONG><a name="[729]"></a>lv_textarea_get_max_length</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[72a]"></a>lv_textarea_get_accepted_chars</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[61e]"></a>lv_textarea_add_text</STRONG> (Thumb, 370 bytes, Stack size 88 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = lv_textarea_add_text &rArr; lv_textarea_add_char &rArr;  lv_textarea_add_text (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ins
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_handler
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;insert_handler
</UL>

<P><STRONG><a name="[61f]"></a>lv_textarea_add_char</STRONG> (Thumb, 534 bytes, Stack size 120 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + In Cycle
<LI>Call Chain = lv_textarea_add_char &rArr;  lv_textarea_add_text (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ins
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_ins_text
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[623]"></a>lv_textarea_del_char</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816<LI>Call Chain = lv_textarea_del_char &rArr; lv_textarea_add_text &rArr; lv_textarea_add_char &rArr;  lv_textarea_add_text (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_cut
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char_forward
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
</UL>

<P><STRONG><a name="[72c]"></a>lv_textarea_del_char_forward</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
</UL>

<P><STRONG><a name="[3ed]"></a>lv_textarea_set_text</STRONG> (Thumb, 320 bytes, Stack size 88 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 792<LI>Call Chain = lv_textarea_set_text &rArr; lv_textarea_add_char &rArr;  lv_textarea_add_text (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calendar_event_cb
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>

<P><STRONG><a name="[403]"></a>lv_textarea_set_placeholder_text</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_textarea_set_placeholder_text &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
</UL>

<P><STRONG><a name="[63f]"></a>lv_textarea_set_cursor_click_pos</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = lv_textarea_set_cursor_click_pos &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_constructor
</UL>

<P><STRONG><a name="[404]"></a>lv_textarea_set_password_mode</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = lv_textarea_set_password_mode &rArr; pwd_char_hider &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
</UL>

<P><STRONG><a name="[402]"></a>lv_textarea_set_one_line</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = lv_textarea_set_one_line &rArr; lv_obj_scroll_to &rArr; lv_obj_scroll_by &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_local_style_prop
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;profile_create
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_constructor
</UL>

<P><STRONG><a name="[72d]"></a>lv_textarea_set_accepted_chars</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[72e]"></a>lv_textarea_set_max_length</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[72f]"></a>lv_textarea_set_insert_replace</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[730]"></a>lv_textarea_set_text_selection</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_clear_selection
</UL>

<P><STRONG><a name="[731]"></a>lv_textarea_set_password_show_time</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[732]"></a>lv_textarea_get_label</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[733]"></a>lv_textarea_set_align</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_align
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[734]"></a>lv_textarea_get_placeholder_text</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[735]"></a>lv_textarea_get_cursor_click_pos</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[736]"></a>lv_textarea_get_password_mode</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[620]"></a>lv_textarea_get_one_line</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = lv_textarea_get_one_line &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
</UL>

<P><STRONG><a name="[737]"></a>lv_textarea_text_is_selected</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_selection_end
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text_selection_start
</UL>

<P><STRONG><a name="[738]"></a>lv_textarea_get_text_selection</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[739]"></a>lv_textarea_get_password_show_time</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>

<P><STRONG><a name="[622]"></a>lv_textarea_cursor_right</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = lv_textarea_cursor_right &rArr; lv_textarea_set_cursor_pos &rArr; refr_cursor_area &rArr; lv_label_get_letter_pos &rArr; _lv_bidi_get_visual_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
</UL>

<P><STRONG><a name="[621]"></a>lv_textarea_cursor_left</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = lv_textarea_cursor_left &rArr; lv_textarea_set_cursor_pos &rArr; refr_cursor_area &rArr; lv_label_get_letter_pos &rArr; _lv_bidi_get_visual_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_def_event_cb
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
</UL>

<P><STRONG><a name="[73a]"></a>lv_textarea_cursor_down</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[73b]"></a>lv_textarea_cursor_up</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, lv_textarea.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
</UL>

<P><STRONG><a name="[740]"></a>my_input_read</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lvglbsp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lvglbsp.o(.text)
</UL>
<P><STRONG><a name="[191]"></a>LvgBspInit</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, lvglbsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = LvgBspInit &rArr; lv_disp_drv_register &rArr; lv_theme_default_init &rArr; lv_obj_report_style_change &rArr; report_style_change_core &rArr;  report_style_change_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_register
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_drv_init
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_draw_buf_init
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_register
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_drv_init
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_drv_register
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_fs_drv_init
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LvglTask (via Veneer)
</UL>

<P><STRONG><a name="[1a0]"></a>MX_FATFS_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fatfs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MX_FATFS_Init &rArr; FATFS_LinkDriver
</UL>
<BR>[Calls]<UL><LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FATFS_LinkDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main (via Veneer)
</UL>

<P><STRONG><a name="[24a]"></a>get_fattime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fatfs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open (via Veneer)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir (via Veneer)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync (via Veneer)
</UL>

<P><STRONG><a name="[243]"></a>disk_status</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, diskio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate (via Veneer)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume (via Veneer)
</UL>

<P><STRONG><a name="[244]"></a>disk_initialize</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume (via Veneer)
</UL>

<P><STRONG><a name="[22d]"></a>disk_read</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read (via Veneer)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open (via Veneer)
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek (via Veneer)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window (via Veneer)
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write (via Veneer)
</UL>

<P><STRONG><a name="[22c]"></a>disk_write</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read (via Veneer)
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek (via Veneer)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir (via Veneer)
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate (via Veneer)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync (via Veneer)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next (via Veneer)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs (via Veneer)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window (via Veneer)
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write (via Veneer)
</UL>

<P><STRONG><a name="[22f]"></a>disk_ioctl</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, diskio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs (via Veneer)
</UL>

<P><STRONG><a name="[893]"></a>FATFS_LinkDriverEx</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, ff_gen_drv.o(.text), UNUSED)

<P><STRONG><a name="[742]"></a>FATFS_LinkDriver</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, ff_gen_drv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FATFS_LinkDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FATFS_Init
</UL>

<P><STRONG><a name="[894]"></a>FATFS_UnLinkDriverEx</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ff_gen_drv.o(.text), UNUSED)

<P><STRONG><a name="[895]"></a>FATFS_UnLinkDriver</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ff_gen_drv.o(.text), UNUSED)

<P><STRONG><a name="[896]"></a>FATFS_GetAttachedDriversNbr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ff_gen_drv.o(.text), UNUSED)

<P><STRONG><a name="[249]"></a>ff_cre_syncobj</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ffsystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ff_cre_syncobj &rArr; rt_mutex_create &rArr; rt_object_allocate &rArr; rt_malloc &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_create (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount (via Veneer)
</UL>

<P><STRONG><a name="[248]"></a>ff_del_syncobj</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ffsystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ff_del_syncobj &rArr; rt_mutex_delete &rArr; rt_object_delete &rArr; rt_free &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_delete (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount (via Veneer)
</UL>

<P><STRONG><a name="[242]"></a>ff_req_grant</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ffsystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ff_req_grant &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_take (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate (via Veneer)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume (via Veneer)
</UL>

<P><STRONG><a name="[247]"></a>ff_rel_grant</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ffsystem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ff_rel_grant &rArr; rt_mutex_release &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mutex_release (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read (via Veneer)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open (via Veneer)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount (via Veneer)
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close (via Veneer)
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek (via Veneer)
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename (via Veneer)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir (via Veneer)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink (via Veneer)
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate (via Veneer)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree (via Veneer)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat (via Veneer)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync (via Veneer)
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate (via Veneer)
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write (via Veneer)
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir (via Veneer)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir (via Veneer)
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir (via Veneer)
</UL>

<P><STRONG><a name="[240]"></a>ff_uni2oem</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, ffunicode.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path (via Veneer)
</UL>

<P><STRONG><a name="[23c]"></a>ff_oem2uni</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ffunicode.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo (via Veneer)
</UL>

<P><STRONG><a name="[237]"></a>ff_wtoupper</STRONG> (Thumb, 160 bytes, Stack size 4 bytes, ffunicode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ff_wtoupper
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find (via Veneer)
</UL>

<P><STRONG><a name="[56c]"></a>__ARM_common_memclr4_10</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_draw_line.o(i.__ARM_common_memclr4_10))
<BR><BR>[Called By]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
</UL>

<P><STRONG><a name="[4d9]"></a>__ARM_common_memclr4_8</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_obj_style.o(i.__ARM_common_memclr4_8))
<BR><BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_local_style_prop
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2fd]"></a>DMA2D_SetConfig</STRONG> (Thumb, 182 bytes, Stack size 12 bytes, stm32h7xx_hal_dma2d.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_BlendingStart_IT
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_BlendingStart
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Start_IT
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Start
</UL>

<P><STRONG><a name="[1cf]"></a>RCCEx_PLL3_Config</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCCEx_PLL3_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[1d0]"></a>RCCEx_PLL2_Config</STRONG> (Thumb, 304 bytes, Stack size 32 bytes, stm32h7xx_hal_rcc_ex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RCCEx_PLL2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>

<P><STRONG><a name="[307]"></a>DMA_CalcBaseAndBitshift</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, stm32h7xx_hal_dma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
</UL>

<P><STRONG><a name="[309]"></a>DMA_SetConfig</STRONG> (Thumb, 612 bytes, Stack size 36 bytes, stm32h7xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start
</UL>

<P><STRONG><a name="[b6]"></a>SDRAM_DMAError</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32h7xx_hal_sdram.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDRAM_DMAError
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_DMA_XferErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_sdram.o(.text)
</UL>
<P><STRONG><a name="[b5]"></a>SDRAM_DMACpltProt</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32h7xx_hal_sdram.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDRAM_DMACpltProt
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_DMA_XferCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_sdram.o(.text)
</UL>
<P><STRONG><a name="[b4]"></a>SDRAM_DMACplt</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32h7xx_hal_sdram.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDRAM_DMACplt
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_DMA_XferCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_sdram.o(.text)
</UL>
<P><STRONG><a name="[327]"></a>LTDC_SetConfig</STRONG> (Thumb, 478 bytes, Stack size 40 bytes, stm32h7xx_hal_ltdc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAddress_NoReload
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAlpha_NoReload
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetPixelFormat_NoReload
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetWindowPosition_NoReload
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetWindowSize_NoReload
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer_NoReload
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAddress
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetAlpha
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetPixelFormat
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetWindowPosition
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_SetWindowSize
</UL>

<P><STRONG><a name="[1fa]"></a>QSPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, stm32h7xx_hal_qspi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling_IT
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command_IT
</UL>

<P><STRONG><a name="[a4]"></a>QSPI_DMAAbortCplt</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32h7xx_hal_qspi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = QSPI_DMAAbortCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_qspi.o(.text)
</UL>
<P><STRONG><a name="[206]"></a>QSPI_Config</STRONG> (Thumb, 592 bytes, Stack size 20 bytes, stm32h7xx_hal_qspi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling_IT
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command_IT
</UL>

<P><STRONG><a name="[a6]"></a>QSPI_DMAError</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, stm32h7xx_hal_qspi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = QSPI_DMAError
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AbortCpltCallback
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MDMA_Abort_IT (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_qspi.o(.text)
</UL>
<P><STRONG><a name="[a5]"></a>QSPI_DMATxCplt</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_qspi.o(.text)
</UL>
<P><STRONG><a name="[a7]"></a>QSPI_DMARxCplt</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32h7xx_hal_qspi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_qspi.o(.text)
</UL>
<P><STRONG><a name="[b7]"></a>SAI_Transmit_IT32Bit</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SAI_Transmit_IT32Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_TxCpltCallback
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_InterruptFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_sai.o(.text)
</UL>
<P><STRONG><a name="[b8]"></a>SAI_Transmit_IT16Bit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SAI_Transmit_IT16Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_TxCpltCallback
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_InterruptFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_sai.o(.text)
</UL>
<P><STRONG><a name="[b9]"></a>SAI_Transmit_IT8Bit</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SAI_Transmit_IT8Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_TxCpltCallback
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_InterruptFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_sai.o(.text)
</UL>
<P><STRONG><a name="[ba]"></a>SAI_Receive_IT32Bit</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SAI_Receive_IT32Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_RxCpltCallback
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_InterruptFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_sai.o(.text)
</UL>
<P><STRONG><a name="[bb]"></a>SAI_Receive_IT16Bit</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SAI_Receive_IT16Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_RxCpltCallback
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_InterruptFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_sai.o(.text)
</UL>
<P><STRONG><a name="[bc]"></a>SAI_Receive_IT8Bit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SAI_Receive_IT8Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_RxCpltCallback
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_InterruptFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_sai.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>SAI_DMAError</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SAI_DMAError &rArr; SAI_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_GetError
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_ErrorCallback
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_sai.o(.text)
</UL>
<P><STRONG><a name="[be]"></a>SAI_DMATxCplt</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SAI_DMATxCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_TxCpltCallback
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_InterruptFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_sai.o(.text)
</UL>
<P><STRONG><a name="[bd]"></a>SAI_DMATxHalfCplt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SAI_DMATxHalfCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_TxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_sai.o(.text)
</UL>
<P><STRONG><a name="[c1]"></a>SAI_DMARxCplt</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SAI_DMARxCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_RxCpltCallback
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_InterruptFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_sai.o(.text)
</UL>
<P><STRONG><a name="[c0]"></a>SAI_DMARxHalfCplt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SAI_DMARxHalfCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_RxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_sai.o(.text)
</UL>
<P><STRONG><a name="[c2]"></a>SAI_DMAAbort</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SAI_DMAAbort &rArr; SAI_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_ErrorCallback
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32h7xx_hal_sai.o(.text)
</UL>
<P><STRONG><a name="[334]"></a>SAI_Disable</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SAI_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Abort
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_DMAStop
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_DeInit
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_DMAAbort
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_DMAError
</UL>

<P><STRONG><a name="[338]"></a>SAI_InterruptFlag</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, stm32h7xx_hal_sai.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Receive_DMA
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Transmit_DMA
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Receive_IT
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SAI_Transmit_IT
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_DMARxCplt
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_DMATxCplt
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Receive_IT8Bit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Receive_IT16Bit
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Receive_IT32Bit
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Transmit_IT8Bit
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Transmit_IT16Bit
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAI_Transmit_IT32Bit
</UL>

<P><STRONG><a name="[348]"></a>SDMMC_GetCmdResp1</STRONG> (Thumb, 416 bytes, Stack size 4 bytes, stm32h7xx_ll_sdmmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SDMMC_GetCmdResp1
</UL>
<BR>[Called By]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendEXTCSD
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdVoltageSwitch
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSwitch
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdStatusRegister
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendStatus
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendSCR
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBusWidth
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdAppCommand
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSelDesel
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdStopTransfer
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdErase
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdEraseEndAdd
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdEraseStartAdd
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSDEraseEndAdd
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSDEraseStartAdd
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdWriteMultiBlock
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdWriteSingleBlock
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdReadMultiBlock
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdReadSingleBlock
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBlockLength
</UL>

<P><STRONG><a name="[377]"></a>SD_HighSpeed</STRONG> (Thumb, 324 bytes, Stack size 144 bytes, stm32h7xx_hal_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSwitch
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBlockLength
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ConfigData
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ReadFIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigSpeedBusOperation
</UL>

<P><STRONG><a name="[35d]"></a>SD_FindSCR</STRONG> (Thumb, 284 bytes, Stack size 64 bytes, stm32h7xx_hal_sd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SD_FindSCR &rArr; SDMMC_CmdSendSCR &rArr; SDMMC_GetCmdResp1
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSendSCR
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdAppCommand
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBlockLength
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ConfigData
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ReadFIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigWideBusOperation
</UL>

<P><STRONG><a name="[379]"></a>SD_UltraHighSpeed</STRONG> (Thumb, 386 bytes, Stack size 144 bytes, stm32h7xx_hal_sd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick (via Veneer)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayBlock_Enable (via Veneer)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdSwitch
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_CmdBlockLength
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ConfigData
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDMMC_ReadFIFO
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_DriveTransceiver_1_8V_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SD_ConfigSpeedBusOperation
</UL>

<P><STRONG><a name="[c3]"></a>color_changer_anim_cb</STRONG> (Thumb, 476 bytes, Stack size 32 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = color_changer_anim_cb &rArr; lv_obj_align &rArr; lv_obj_set_pos &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_opa
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_demo_widgets.o(.text)
</UL>
<P><STRONG><a name="[cf]"></a>color_changer_event_cb</STRONG> (Thumb, 126 bytes, Stack size 80 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = color_changer_event_cb &rArr; lv_anim_start &rArr; _lv_ll_ins_head &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_user_data
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_demo_widgets.o(.text)
</UL>
<P><STRONG><a name="[ce]"></a>color_event_cb</STRONG> (Thumb, 196 bytes, Stack size 88 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = color_event_cb &rArr; lv_theme_default_init &rArr; lv_obj_report_style_change &rArr; report_style_change_core &rArr;  report_style_change_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_series_color
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main (via Veneer)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_user_data
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_demo_widgets.o(.text)
</UL>
<P><STRONG><a name="[39d]"></a>create_shop_item</STRONG> (Thumb, 208 bytes, Stack size 48 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = create_shop_item &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_dsc_array
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_cell
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shop_create
</UL>

<P><STRONG><a name="[d0]"></a>shop_chart_event_cb</STRONG> (Thumb, 398 bytes, Stack size 104 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1228<LI>Call Chain = shop_chart_event_cb &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main (via Veneer)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_demo_widgets.o(.text)
</UL>
<P><STRONG><a name="[c9]"></a>meter3_anim_cb</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = meter3_anim_cb &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_value
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_demo_widgets.o(.text)
</UL>
<P><STRONG><a name="[3ae]"></a>create_meter_box</STRONG> (Thumb, 692 bytes, Stack size 80 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = create_meter_box &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_dsc_array
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_cell
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_create
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_color
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;analytics_create
</UL>

<P><STRONG><a name="[c8]"></a>meter2_timer_cb</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = meter2_timer_cb &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_start_value
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_end_value
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_demo_widgets.o(.text)
</UL>
<P><STRONG><a name="[c7]"></a>meter1_indic3_anim_cb</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = meter1_indic3_anim_cb &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_end_value
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_demo_widgets.o(.text)
</UL>
<P><STRONG><a name="[c6]"></a>meter1_indic2_anim_cb</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = meter1_indic2_anim_cb &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_end_value
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_demo_widgets.o(.text)
</UL>
<P><STRONG><a name="[c5]"></a>meter1_indic1_anim_cb</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = meter1_indic1_anim_cb &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_end_value
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_demo_widgets.o(.text)
</UL>
<P><STRONG><a name="[c4]"></a>chart_event_cb</STRONG> (Thumb, 1206 bytes, Stack size 200 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1324<LI>Call Chain = chart_event_cb &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line_points_init
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_fade_init
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_type
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_series_next
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_pressed_point
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_demo_widgets.o(.text)
</UL>
<P><STRONG><a name="[3c1]"></a>analytics_create</STRONG> (Thumb, 3032 bytes, Stack size 128 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = analytics_create &rArr; create_meter_box &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_primary
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_rand (via Veneer)
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_lighten (via Veneer)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_darken (via Veneer)
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_width
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_radius
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_row
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_right
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_left
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_column
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_outline_width
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_outline_color
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_max_height
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_height
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_border_side
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_dsc_array
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_cell
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_scale_ticks
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_scale_range
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_scale_major_ticks
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_start_value
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_end_value
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_add_scale_lines
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_add_scale
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_add_needle_line
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_add_arc
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_default
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_zoom_x
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_type
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_point_count
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_next_value
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_div_line_count
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_axis_tick
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_create
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_add_series
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_meter_box
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_create (via Veneer)
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_color
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_opa
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_color
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
</UL>

<P><STRONG><a name="[cd]"></a>slider_event_cb</STRONG> (Thumb, 572 bytes, Stack size 160 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = slider_event_cb &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_darken (via Veneer)
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_state
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_value
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_demo_widgets.o(.text)
</UL>
<P><STRONG><a name="[ca]"></a>calendar_event_cb</STRONG> (Thumb, 128 bytes, Stack size 64 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = calendar_event_cb &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr;  lv_textarea_add_text (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_get_pressed_date
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_user_data
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_opa
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_demo_widgets.o(.text)
</UL>
<P><STRONG><a name="[cc]"></a>birthday_event_cb</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = birthday_event_cb &rArr; lv_calendar_set_showed_date &rArr; lv_snprintf &rArr; _vsnprintf &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_header_dropdown_create
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main (via Veneer)
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_create
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_opa
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_color
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_demo_widgets.o(.text)
</UL>
<P><STRONG><a name="[cb]"></a>ta_event_cb</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = ta_event_cb &rArr; lv_obj_scroll_to_view_recursive &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_max_height
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_view_recursive
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_reset
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_set_textarea
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_user_data
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_demo_widgets.o(.text)
</UL>
<P><STRONG><a name="[3fb]"></a>profile_create</STRONG> (Thumb, 2810 bytes, Stack size 168 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = profile_create &rArr; lv_textarea_set_password_mode &rArr; pwd_char_hider &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_password_mode
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_align
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_dsc_array
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_cell
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options_static
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_placeholder_text
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_one_line
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_create
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_switch_create
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_create
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_keyboard_create
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_create
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_create
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
</UL>

<P><STRONG><a name="[415]"></a>color_changer_create</STRONG> (Thumb, 1288 bytes, Stack size 48 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = color_changer_create &rArr; lv_btn_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_shadow_width
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_radius
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_top
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_right
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_left
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_bottom
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_opa
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_img_src
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main (via Veneer)
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_align
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_opa
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_color
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
</UL>

<P><STRONG><a name="[414]"></a>shop_create</STRONG> (Thumb, 1536 bytes, Stack size 80 bytes, lv_demo_widgets.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = shop_create &rArr; create_shop_item &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_primary
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_rand (via Veneer)
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_column
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_bottom
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_max_height
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_dsc_array
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_grid_cell
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_set_text
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_zoom_x
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_type
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_point_count
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_next_value
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_div_line_count
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_axis_tick
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_create
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_add_series
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_shop_item
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main (via Veneer)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_checkbox_create
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_color
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_ver_res
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_demo_widgets
</UL>

<P><STRONG><a name="[d5]"></a>opa_scale_anim</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = opa_scale_anim &rArr; lv_obj_set_style_opa &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_opa
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_disp.o(.text)
</UL>
<P><STRONG><a name="[d4]"></a>set_y_anim</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = set_y_anim &rArr; lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_disp.o(.text)
</UL>
<P><STRONG><a name="[d3]"></a>set_x_anim</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = set_x_anim &rArr; lv_obj_set_x &rArr; lv_obj_set_style_x &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_disp.o(.text)
</UL>
<P><STRONG><a name="[d2]"></a>scr_anim_ready</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = scr_anim_ready &rArr; lv_obj_del &rArr; lv_obj_scrollbar_invalidate &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_local_style_prop
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_disp.o(.text)
</UL>
<P><STRONG><a name="[d1]"></a>scr_load_anim_start</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = scr_load_anim_start &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_default
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_disp.o(.text)
</UL>
<P><STRONG><a name="[437]"></a>event_send_core</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, lv_event.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92 + In Cycle
<LI>Call Chain = event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;event_send_core
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>

<P><STRONG><a name="[445]"></a>get_indev</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, lv_group.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_indev
</UL>
<BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
</UL>
<BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_all_objs
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_del
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;focus_next_core
</UL>

<P><STRONG><a name="[44a]"></a>focus_next_core</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, lv_group.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = focus_next_core &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_indev
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_next
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_prev
</UL>

<P><STRONG><a name="[458]"></a>indev_proc_release</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, lv_indev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = indev_proc_release &rArr; _lv_indev_scroll_throw_handler &rArr; lv_obj_scroll_by &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
</UL>

<P><STRONG><a name="[45c]"></a>indev_proc_press</STRONG> (Thumb, 1174 bytes, Stack size 32 bytes, lv_indev.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = indev_proc_press &rArr; _lv_indev_scroll_handler &rArr; lv_obj_scroll_by &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_focus_obj
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_search_obj
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_read_timer_cb
</UL>

<P><STRONG><a name="[465]"></a>elastic_diff</STRONG> (Thumb, 408 bytes, Stack size 56 bytes, lv_indev_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = elastic_diff &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_y
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_x
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_obj_act
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
</UL>

<P><STRONG><a name="[46a]"></a>find_snap_point_x</STRONG> (Thumb, 278 bytes, Stack size 56 bytes, lv_indev_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = find_snap_point_x &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_x
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_scroll_get_snap_dist
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
</UL>

<P><STRONG><a name="[46c]"></a>find_snap_point_y</STRONG> (Thumb, 278 bytes, Stack size 56 bytes, lv_indev_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = find_snap_point_y &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_snap_y
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_scroll_get_snap_dist
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_throw_handler
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_indev_scroll_handler
</UL>

<P><STRONG><a name="[482]"></a>lv_obj_set_state</STRONG> (Thumb, 576 bytes, Stack size 104 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = lv_obj_set_state &rArr; _lv_obj_style_create_transition &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_style_get_selector_state
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_style_get_selector_part
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_state_compare
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
</UL>

<P><STRONG><a name="[12a]"></a>lv_obj_constructor</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = lv_obj_constructor &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj.o(.constdata)
</UL>
<P><STRONG><a name="[12b]"></a>lv_obj_destructor</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = lv_obj_destructor &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_enable_style_refresh
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_remove_obj
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_event_mark_deleted
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj.o(.constdata)
</UL>
<P><STRONG><a name="[12c]"></a>lv_obj_event</STRONG> (Thumb, 1076 bytes, Stack size 24 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1348<LI>Call Chain = lv_obj_event &rArr; lv_obj_draw &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_view_recursive
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_state
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_x
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_dir
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_editable
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_scroll_obj
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_indev
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj.o(.constdata)
</UL>
<P><STRONG><a name="[47f]"></a>obj_valid_child</STRONG> (Thumb, 52 bytes, Stack size 20 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20 + In Cycle
<LI>Call Chain = obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_valid_child
</UL>
<BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_valid_child
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
</UL>

<P><STRONG><a name="[48d]"></a>lv_obj_draw</STRONG> (Thumb, 1210 bytes, Stack size 200 bytes, lv_obj.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1324<LI>Call Chain = lv_obj_draw &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scrollbar_area
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_custom
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event
</UL>

<P><STRONG><a name="[49d]"></a>lv_obj_construct</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lv_obj_class.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = lv_obj_construct &rArr;  lv_obj_construct (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_construct
</UL>
<BR>[Called By]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_construct
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
</UL>

<P><STRONG><a name="[4bb]"></a>layout_update_core</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, lv_obj_pos.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + In Cycle
<LI>Call Chain = layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_pos
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;layout_update_core
</UL>

<P><STRONG><a name="[db]"></a>scroll_y_anim</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = scroll_y_anim &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj_scroll.o(.text)
</UL>
<P><STRONG><a name="[da]"></a>scroll_x_anim</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = scroll_x_anim &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_allocate_spec_attr
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj_scroll.o(.text)
</UL>
<P><STRONG><a name="[dc]"></a>scroll_anim_ready_cb</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = scroll_anim_ready_cb &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj_scroll.o(.text)
</UL>
<P><STRONG><a name="[4cf]"></a>scroll_area_into_view</STRONG> (Thumb, 710 bytes, Stack size 64 bytes, lv_obj_scroll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = scroll_area_into_view &rArr; lv_obj_scroll_by &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_by
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_right
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_bottom
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_view_recursive
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_view
</UL>

<P><STRONG><a name="[e0]"></a>trans_anim_ready_cb</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = trans_anim_ready_cb &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_remove_style
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_is_empty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj_style.o(.text)
</UL>
<P><STRONG><a name="[df]"></a>trans_anim_start_cb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = trans_anim_start_cb &rArr; trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trans_style
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj_style.o(.text)
</UL>
<P><STRONG><a name="[de]"></a>trans_anim_cb</STRONG> (Thumb, 378 bytes, Stack size 32 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = trans_anim_cb &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_prop
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_get_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj_style.o(.text)
</UL>
<P><STRONG><a name="[e2]"></a>fade_in_anim_ready</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = fade_in_anim_ready &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj_style.o(.text)
</UL>
<P><STRONG><a name="[e1]"></a>fade_anim_cb</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = fade_anim_cb &rArr; lv_obj_set_style_opa &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_opa
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj_style.o(.text)
</UL>
<P><STRONG><a name="[4d7]"></a>refresh_children_style</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164 + In Cycle
<LI>Call Chain = refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_children_style
</UL>

<P><STRONG><a name="[4d8]"></a>trans_del</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = trans_del &rArr; lv_style_remove_prop &rArr; lv_mem_alloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_remove_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
</UL>

<P><STRONG><a name="[4dd]"></a>report_style_change_core</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + In Cycle
<LI>Call Chain = report_style_change_core &rArr;  report_style_change_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_style
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
</UL>
<BR>[Called By]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_report_style_change
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;report_style_change_core
</UL>

<P><STRONG><a name="[4e1]"></a>get_trans_style</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, lv_obj_style.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = get_trans_style &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memclr4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_style_create_transition
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trans_anim_start_cb
</UL>

<P><STRONG><a name="[527]"></a>obj_del_core</STRONG> (Thumb, 534 bytes, Stack size 32 bytes, lv_obj_tree.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + In Cycle
<LI>Call Chain = obj_del_core &rArr;  obj_del_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_reset
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_destruct
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_obj_act
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_id
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clean
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;obj_del_core
</UL>

<P><STRONG><a name="[e3]"></a>lv_obj_del_async_cb</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lv_obj_tree.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = lv_obj_del_async_cb &rArr; lv_obj_del &rArr; lv_obj_scrollbar_invalidate &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_obj_tree.o(.text)
</UL>
<P><STRONG><a name="[534]"></a>walk_core</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, lv_obj_tree.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_next
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;walk_core
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_tree_walk
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;walk_core
</UL>

<P><STRONG><a name="[536]"></a>draw_buf_flush</STRONG> (Thumb, 1154 bytes, Stack size 152 bytes, lv_refr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = draw_buf_flush &rArr; lv_mem_buf_get &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_draw_buf
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[538]"></a>lv_refr_obj</STRONG> (Thumb, 282 bytes, Stack size 64 bytes, lv_refr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + In Cycle
<LI>Call Chain = lv_refr_obj &rArr;  lv_refr_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_obj_get_ext_draw_size
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
</UL>

<P><STRONG><a name="[539]"></a>lv_refr_area_part</STRONG> (Thumb, 506 bytes, Stack size 120 bytes, lv_refr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = lv_refr_area_part &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_sys
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_layer_top
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_draw_buf
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj_and_children
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_buf_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_disp_refr_timer
</UL>

<P><STRONG><a name="[53e]"></a>lv_refr_obj_and_children</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, lv_refr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = lv_refr_obj_and_children &rArr; lv_refr_obj &rArr;  lv_refr_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_scr_act
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[53a]"></a>lv_refr_get_top_obj</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, lv_refr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + In Cycle
<LI>Call Chain = lv_refr_get_top_obj &rArr;  lv_refr_get_top_obj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
</UL>
<BR>[Called By]<UL><LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_get_top_obj
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_refr_area_part
</UL>

<P><STRONG><a name="[548]"></a>apply_theme</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, lv_theme.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = apply_theme &rArr;  apply_theme (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_theme
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_apply
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_theme
</UL>

<P><STRONG><a name="[555]"></a>lv_color_mix</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, lv_draw_blend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_normal
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_blend_true_color_additive
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color_blend_true_color_subtractive
</UL>

<P><STRONG><a name="[e5]"></a>color_blend_true_color_subtractive</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, lv_draw_blend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = color_blend_true_color_subtractive &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_blend.o(.text)
</UL>
<P><STRONG><a name="[e4]"></a>color_blend_true_color_additive</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, lv_draw_blend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = color_blend_true_color_additive &rArr; lv_color_mix
</UL>
<BR>[Calls]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_blend.o(.text)
</UL>
<P><STRONG><a name="[554]"></a>fill_normal</STRONG> (Thumb, 1380 bytes, Stack size 112 bytes, lv_draw_blend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = fill_normal &rArr; lv_color_fill
</UL>
<BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_fill (via Veneer)
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
</UL>

<P><STRONG><a name="[558]"></a>lv_draw_map</STRONG> (Thumb, 1524 bytes, Stack size 264 bytes, lv_draw_img.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = lv_draw_map &rArr; _lv_img_buf_transform &rArr; _lv_img_buf_transform_anti_alias &rArr; lv_img_buf_get_px_alpha
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_hor_res
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_get_size
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_draw_buf
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_refr_get_disp_refreshing
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform_init
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_transform
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_map
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
</UL>

<P><STRONG><a name="[e6]"></a>lv_draw_mask_line</STRONG> (Thumb, 1294 bytes, Stack size 40 bytes, lv_draw_mask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lv_draw_mask_line
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_angle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_mask.o(.text)
</UL>
<P><STRONG><a name="[e7]"></a>lv_draw_mask_angle</STRONG> (Thumb, 780 bytes, Stack size 56 bytes, lv_draw_mask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lv_draw_mask_angle &rArr; lv_draw_mask_line
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_line
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_mask.o(.text)
</UL>
<P><STRONG><a name="[e8]"></a>lv_draw_mask_radius</STRONG> (Thumb, 754 bytes, Stack size 40 bytes, lv_draw_mask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = lv_draw_mask_radius
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_mask.o(.text)
</UL>
<P><STRONG><a name="[e9]"></a>lv_draw_mask_fade</STRONG> (Thumb, 276 bytes, Stack size 12 bytes, lv_draw_mask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lv_draw_mask_fade
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_mask.o(.text)
</UL>
<P><STRONG><a name="[ea]"></a>lv_draw_mask_map</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, lv_draw_mask.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_draw_mask_map
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_draw_mask.o(.text)
</UL>
<P><STRONG><a name="[572]"></a>grad_get</STRONG> (Thumb, 128 bytes, Stack size 12 bytes, lv_draw_rect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = grad_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[570]"></a>shadow_blur_corner</STRONG> (Thumb, 472 bytes, Stack size 72 bytes, lv_draw_rect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = shadow_blur_corner &rArr; lv_mem_buf_get &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_shadow
</UL>

<P><STRONG><a name="[571]"></a>draw_shadow</STRONG> (Thumb, 3670 bytes, Stack size 296 bytes, lv_draw_rect.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = draw_shadow &rArr; _lv_blend_fill &rArr; fill_normal &rArr; lv_color_fill
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_increase
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shadow_blur_corner
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_out
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_is_any
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_apply
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_blend_fill
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
</UL>

<P><STRONG><a name="[58d]"></a>find_track_end</STRONG> (Thumb, 610 bytes, Stack size 64 bytes, lv_flex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = find_track_end &rArr; lv_mem_buf_get &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[f1]"></a>flex_update</STRONG> (Thumb, 1992 bytes, Stack size 208 bytes, lv_flex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = flex_update &rArr; lv_obj_refr_size &rArr; lv_obj_scrollbar_invalidate &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_test
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;place_content
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_track_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_flex.o(.text)
</UL>
<P><STRONG><a name="[ef]"></a>lv_area_get_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_flex.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lv_flex.o(.text)
</UL>
<P><STRONG><a name="[f0]"></a>lv_area_get_height</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_flex.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lv_flex.o(.text)
</UL>
<P><STRONG><a name="[58e]"></a>place_content</STRONG> (Thumb, 142 bytes, Stack size 12 bytes, lv_flex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = place_content
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flex_update
</UL>

<P><STRONG><a name="[59b]"></a>grid_align</STRONG> (Thumb, 412 bytes, Stack size 36 bytes, lv_grid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = grid_align
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_update
</UL>

<P><STRONG><a name="[f2]"></a>grid_update</STRONG> (Thumb, 2206 bytes, Stack size 112 bytes, lv_grid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = grid_update &rArr; lv_obj_refr_size &rArr; lv_obj_scrollbar_invalidate &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_move_children_by
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refr_size
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_flag_any
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_test
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set_height
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;grid_align
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_set_width
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_grid.o(.text)
</UL>
<P><STRONG><a name="[f4]"></a>dark_color_filter_cb</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lv_theme_default.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = dark_color_filter_cb &rArr; lv_color_darken
</UL>
<BR>[Calls]<UL><LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_darken (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_theme_default.o(.text)
</UL>
<P><STRONG><a name="[f5]"></a>grey_filter_cb</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, lv_theme_default.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = grey_filter_cb &rArr; lv_palette_lighten
</UL>
<BR>[Calls]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_lighten (via Veneer)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_darken (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_theme_default.o(.text)
</UL>
<P><STRONG><a name="[5b3]"></a>style_init</STRONG> (Thumb, 5598 bytes, Stack size 40 bytes, lv_theme_default.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = style_init &rArr; lv_style_set_text_color &rArr; lv_style_set_prop &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_color
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_lighten (via Veneer)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_darken (via Veneer)
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main (via Veneer)
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_font
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_width
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_spread
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_opa
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_ofs_y
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_radius
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_width
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_width
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_side
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_opa
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_arc_width
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_reset
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_init
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_transition_dsc_init
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transition
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transform_width
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_transform_height
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_line_space
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_text_align
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_shadow_color
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_width
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_pad
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_opa
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_outline_color
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_max_width
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_max_height
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_height
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_clip_corner
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_post
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_img_src
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_grad_color
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_arc_rounded
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_dpx
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_width
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_top
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_row
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_right
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_left
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_column
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_pad_bottom
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_line_color
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_color_filter_opa
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_color_filter_dsc
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_border_color
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_bg_color
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_arc_color
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_style_set_anim_time
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_default_init
</UL>

<P><STRONG><a name="[f6]"></a>theme_apply</STRONG> (Thumb, 3716 bytes, Stack size 48 bytes, lv_theme_default.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = theme_apply &rArr; lv_obj_add_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_style
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_check_type
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_theme_default.o(.text)
</UL>
<P><STRONG><a name="[5b7]"></a>lv_disp_dpx</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_theme_default.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lv_disp_dpx
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
</UL>
<BR>[Called By]<UL><LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;style_init
</UL>

<P><STRONG><a name="[f7]"></a>draw_part_begin_event_cb</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, lv_calendar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = draw_part_begin_event_cb &rArr; lv_theme_get_color_primary &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_primary
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_palette_main (via Veneer)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_has_btn_ctrl
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_selected_btn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar.o(.text)
</UL>
<P><STRONG><a name="[12d]"></a>lv_calendar_constructor</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, lv_calendar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = lv_calendar_constructor &rArr; lv_calendar_set_showed_date &rArr; lv_snprintf &rArr; _vsnprintf &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;highlight_update
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl_all
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar.o(.constdata)
</UL>
<P><STRONG><a name="[5e2]"></a>highlight_update</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, lv_calendar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = highlight_update &rArr; lv_btnmatrix_set_btn_ctrl &rArr; invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_constructor
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_highlighted_dates
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_today_date
</UL>

<P><STRONG><a name="[f8]"></a>month_event_cb</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, lv_calendar_header_arrow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = month_event_cb &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_user_data
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_get_showed_date
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar_header_arrow.o(.text)
</UL>
<P><STRONG><a name="[12e]"></a>my_constructor</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, lv_calendar_header_arrow.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = my_constructor &rArr; lv_label_set_text_fmt &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_text_align
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_radius
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_top
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_right
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_left
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_column
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_bottom
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_bg_img_src
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btn_create
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_align
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_get_showed_date
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar_header_arrow.o(.constdata)
</UL>
<P><STRONG><a name="[fa]"></a>month_event_cb</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lv_calendar_header_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = month_event_cb &rArr; lv_calendar_set_showed_date &rArr; lv_snprintf &rArr; _vsnprintf &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_user_data
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_selected
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_get_showed_date
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar_header_dropdown.o(.text)
</UL>
<P><STRONG><a name="[f9]"></a>year_event_cb</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lv_calendar_header_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = year_event_cb &rArr; lv_calendar_set_showed_date &rArr; lv_snprintf &rArr; _vsnprintf &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_set_showed_date
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_user_data
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_get_selected
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_get_showed_date
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar_header_dropdown.o(.text)
</UL>
<P><STRONG><a name="[12f]"></a>my_constructor</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, lv_calendar_header_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = my_constructor &rArr; lv_obj_align_to &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_radius
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_top
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_right
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_left
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_column
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_pad_bottom
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_align
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_create
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align_to
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_selected
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_set_options
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_calendar_get_showed_date
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_calendar_header_dropdown.o(.constdata)
</UL>
<P><STRONG><a name="[5f2]"></a>new_points_alloc</STRONG> (Thumb, 392 bytes, Stack size 40 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = new_points_alloc &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_point_count
</UL>

<P><STRONG><a name="[601]"></a>invalidate_point</STRONG> (Thumb, 416 bytes, Stack size 40 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = invalidate_point &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_next_value
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_set_next_value2
</UL>

<P><STRONG><a name="[130]"></a>lv_chart_constructor</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_chart_constructor
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_chart.o(.constdata)
</UL>
<P><STRONG><a name="[131]"></a>lv_chart_destructor</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = lv_chart_destructor &rArr; _lv_ll_clear &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_chart.o(.constdata)
</UL>
<P><STRONG><a name="[609]"></a>draw_x_ticks</STRONG> (Thumb, 892 bytes, Stack size 256 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1060<LI>Call Chain = draw_x_ticks &rArr; lv_draw_label &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[60a]"></a>draw_y_ticks</STRONG> (Thumb, 780 bytes, Stack size 264 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1068<LI>Call Chain = draw_y_ticks &rArr; lv_draw_label &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_event
</UL>

<P><STRONG><a name="[132]"></a>lv_chart_event</STRONG> (Thumb, 4444 bytes, Stack size 304 bytes, lv_chart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428<LI>Call Chain = lv_chart_event &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_left
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_len
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_set_ext_draw_size
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_y_ticks
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_x_ticks
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_point
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_is_empty
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_chart_get_point_pos_by_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_chart.o(.constdata)
</UL>
<P><STRONG><a name="[610]"></a>refr_knob_pos</STRONG> (Thumb, 466 bytes, Stack size 40 bytes, lv_colorwheel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = refr_knob_pos &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_set_mode
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_set_hsv
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_constructor
</UL>

<P><STRONG><a name="[133]"></a>lv_colorwheel_constructor</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, lv_colorwheel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lv_colorwheel_constructor &rArr; refr_knob_pos &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_knob_pos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_colorwheel.o(.constdata)
</UL>
<P><STRONG><a name="[134]"></a>lv_colorwheel_event</STRONG> (Thumb, 2150 bytes, Stack size 192 bytes, lv_colorwheel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1316<LI>Call Chain = lv_colorwheel_event &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_wait_release
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin (via Veneer)
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_hsv_to_rgb (via Veneer)
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_atan2 (via Veneer)
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_set_hsv
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_hsv2rgb
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_knob_pos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_colorwheel.o(.constdata)
</UL>
<P><STRONG><a name="[619]"></a>fast_hsv2rgb</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, lv_colorwheel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fast_hsv2rgb
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_colorwheel_event
</UL>

<P><STRONG><a name="[135]"></a>lv_keyboard_constructor</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, lv_keyboard.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = lv_keyboard_constructor &rArr; lv_btnmatrix_set_ctrl_map &rArr; lv_btnmatrix_set_map &rArr; lv_obj_get_content_height &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_align
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_style_base_dir
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_ctrl_map
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_keyboard.o(.constdata)
</UL>
<P><STRONG><a name="[136]"></a>lv_led_constructor</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lv_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = lv_led_constructor &rArr; lv_theme_get_color_primary &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_theme_get_color_primary
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_led.o(.constdata)
</UL>
<P><STRONG><a name="[137]"></a>lv_led_event</STRONG> (Thumb, 1112 bytes, Stack size 160 bytes, lv_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = lv_led_event &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_color_mix
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_led.o(.constdata)
</UL>
<P><STRONG><a name="[62d]"></a>lv_color_mix</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, lv_led.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lv_color_mix
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_led_event
</UL>

<P><STRONG><a name="[62f]"></a>inv_line</STRONG> (Thumb, 396 bytes, Stack size 64 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = inv_line &rArr; lv_obj_get_content_coords &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_value
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_start_value
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_end_value
</UL>

<P><STRONG><a name="[630]"></a>inv_arc</STRONG> (Thumb, 190 bytes, Stack size 88 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = inv_arc &rArr; lv_obj_get_content_coords &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc_get_area
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_value
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_start_value
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_set_indicator_end_value
</UL>

<P><STRONG><a name="[138]"></a>lv_meter_constructor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_meter_constructor
</UL>
<BR>[Calls]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_meter.o(.constdata)
</UL>
<P><STRONG><a name="[139]"></a>lv_meter_destructor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = lv_meter_destructor &rArr; _lv_ll_clear &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_meter.o(.constdata)
</UL>
<P><STRONG><a name="[13a]"></a>lv_meter_event</STRONG> (Thumb, 1012 bytes, Stack size 280 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1796<LI>Call Chain = lv_meter_event &rArr; lv_draw_arc &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin (via Veneer)
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc_dsc_init
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_ticks_and_labels
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_meter.o(.constdata)
</UL>
<P><STRONG><a name="[632]"></a>draw_ticks_and_labels</STRONG> (Thumb, 1152 bytes, Stack size 392 bytes, lv_meter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1196<LI>Call Chain = draw_ticks_and_labels &rArr; lv_draw_label &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_tail
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_prev
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_meter_event
</UL>

<P><STRONG><a name="[634]"></a>lv_spinbox_updatevalue</STRONG> (Thumb, 358 bytes, Stack size 88 bytes, lv_spinbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 880<LI>Call Chain = lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr;  lv_textarea_add_text (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_decrement
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_increment
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_step_prev
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_step_next
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_set_pos
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_set_range
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_set_step
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_set_digit_format
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_set_value
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_event
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_constructor
</UL>

<P><STRONG><a name="[13b]"></a>lv_spinbox_constructor</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, lv_spinbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = lv_spinbox_constructor &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr;  lv_textarea_add_text (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_one_line
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_click_pos
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_spinbox.o(.constdata)
</UL>
<P><STRONG><a name="[13c]"></a>lv_spinbox_event</STRONG> (Thumb, 710 bytes, Stack size 24 bytes, lv_spinbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = lv_spinbox_event &rArr; lv_spinbox_updatevalue &rArr; lv_textarea_set_text &rArr; lv_textarea_add_char &rArr;  lv_textarea_add_text (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_get_text
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_cursor_left
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_spinbox_updatevalue
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_spinbox.o(.constdata)
</UL>
<P><STRONG><a name="[fd]"></a>arc_anim_start_angle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_spinner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = arc_anim_start_angle &rArr; lv_arc_set_start_angle &rArr; inv_arc_area &rArr; lv_obj_calculate_ext_draw_size &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_spinner.o(.text)
</UL>
<P><STRONG><a name="[fb]"></a>arc_anim_end_angle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_spinner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = arc_anim_end_angle &rArr; lv_arc_set_end_angle &rArr; inv_arc_area &rArr; lv_obj_calculate_ext_draw_size &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_spinner.o(.text)
</UL>
<P><STRONG><a name="[13d]"></a>lv_spinner_constructor</STRONG> (Thumb, 110 bytes, Stack size 80 bytes, lv_spinner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = lv_spinner_constructor &rArr; lv_arc_set_bg_angles &rArr; value_update &rArr; lv_arc_set_start_angle &rArr; inv_arc_area &rArr; lv_obj_calculate_ext_draw_size &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_rotation
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_bg_angles
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_spinner.o(.constdata)
</UL>
<P><STRONG><a name="[ff]"></a>cont_scroll_end_event_cb</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, lv_tabview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = cont_scroll_end_event_cb &rArr; lv_tabview_set_act &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_end
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_tabview.o(.text)
</UL>
<P><STRONG><a name="[fe]"></a>btns_value_changed_event_cb</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lv_tabview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = btns_value_changed_event_cb &rArr; lv_tabview_set_act &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_get_selected_btn
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_tabview.o(.text)
</UL>
<P><STRONG><a name="[13e]"></a>lv_tabview_constructor</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, lv_tabview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = lv_tabview_constructor &rArr; lv_btnmatrix_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_default
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_add_obj
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_height
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_create
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scroll_snap_x
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scrollbar_mode
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_one_checked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_tabview.o(.constdata)
</UL>
<P><STRONG><a name="[13f]"></a>lv_tabview_destructor</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, lv_tabview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_tabview_destructor &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_tabview.o(.constdata)
</UL>
<P><STRONG><a name="[140]"></a>lv_tabview_event</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, lv_tabview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = lv_tabview_event &rArr; lv_tabview_set_act &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tabview_set_act
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_tabview.o(.constdata)
</UL>
<P><STRONG><a name="[100]"></a>tileview_event_cb</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, lv_tileview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = tileview_event_cb &rArr; lv_obj_get_content_height &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child_cnt
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_x
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_end
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scroll_dir
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_tileview.o(.text)
</UL>
<P><STRONG><a name="[141]"></a>lv_tileview_constructor</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lv_tileview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = lv_tileview_constructor &rArr; lv_obj_set_size &rArr; lv_obj_set_style_width &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_event_cb
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scroll_snap_y
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scroll_snap_x
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_tileview.o(.constdata)
</UL>
<P><STRONG><a name="[142]"></a>lv_tileview_tile_constructor</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, lv_tileview.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = lv_tileview_tile_constructor &rArr; lv_obj_update_layout &rArr; layout_update_core &rArr;  layout_update_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_update_layout
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_scroll_dir
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_tileview.o(.constdata)
</UL>
<P><STRONG><a name="[143]"></a>lv_win_constructor</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, lv_win.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = lv_win_constructor &rArr; lv_obj_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_grow
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_align
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_size
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_flex_flow
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_win.o(.constdata)
</UL>
<P><STRONG><a name="[654]"></a>get_bits</STRONG> (Thumb, 118 bytes, Stack size 4 bytes, lv_font_fmt_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = get_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompress_line
</UL>

<P><STRONG><a name="[653]"></a>decompress_line</STRONG> (Thumb, 236 bytes, Stack size 40 bytes, lv_font_fmt_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = decompress_line &rArr; get_bits
</UL>
<BR>[Calls]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_bits
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_bitmap_fmt_txt
</UL>

<P><STRONG><a name="[101]"></a>unicode_list_compare</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_font_fmt_txt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lv_font_fmt_txt.o(.text)
</UL>
<P><STRONG><a name="[655]"></a>get_glyph_dsc_id</STRONG> (Thumb, 316 bytes, Stack size 40 bytes, lv_font_fmt_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = get_glyph_dsc_id &rArr; _lv_utils_bsearch
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_utils_bsearch
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc_fmt_txt
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_bitmap_fmt_txt
</UL>

<P><STRONG><a name="[102]"></a>kern_pair_16_compare</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_font_fmt_txt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lv_font_fmt_txt.o(.text)
</UL>
<P><STRONG><a name="[103]"></a>kern_pair_8_compare</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_font_fmt_txt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lv_font_fmt_txt.o(.text)
</UL>
<P><STRONG><a name="[105]"></a>invalidate_layout_cb</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lv_hal_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = invalidate_layout_cb &rArr; lv_obj_mark_layout_as_dirty &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_mark_layout_as_dirty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_hal_disp.o(.text)
</UL>
<P><STRONG><a name="[65e]"></a>set_px_alpha_generic</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, lv_hal_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = set_px_alpha_generic &rArr; lv_img_buf_get_px_alpha
</UL>
<BR>[Calls]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_set_px_alpha
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_alpha
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_px_cb_alpha1
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_px_cb_alpha2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_px_cb_alpha4
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_px_cb_alpha8
</UL>

<P><STRONG><a name="[10a]"></a>set_px_cb_alpha8</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lv_hal_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = set_px_cb_alpha8 &rArr; set_px_alpha_generic &rArr; lv_img_buf_get_px_alpha
</UL>
<BR>[Calls]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_px_alpha_generic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_hal_disp.o(.text)
</UL>
<P><STRONG><a name="[109]"></a>set_px_cb_alpha4</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lv_hal_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = set_px_cb_alpha4 &rArr; set_px_alpha_generic &rArr; lv_img_buf_get_px_alpha
</UL>
<BR>[Calls]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_px_alpha_generic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_hal_disp.o(.text)
</UL>
<P><STRONG><a name="[106]"></a>set_px_cb_alpha2</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lv_hal_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = set_px_cb_alpha2 &rArr; set_px_alpha_generic &rArr; lv_img_buf_get_px_alpha
</UL>
<BR>[Calls]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_px_alpha_generic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_hal_disp.o(.text)
</UL>
<P><STRONG><a name="[108]"></a>set_px_cb_alpha1</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lv_hal_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = set_px_cb_alpha1 &rArr; set_px_alpha_generic &rArr; lv_img_buf_get_px_alpha
</UL>
<BR>[Calls]<UL><LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_px_alpha_generic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_hal_disp.o(.text)
</UL>
<P><STRONG><a name="[107]"></a>set_px_true_color_alpha</STRONG> (Thumb, 368 bytes, Stack size 56 bytes, lv_hal_disp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = set_px_true_color_alpha &rArr; lv_img_buf_set_px_color &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_set_px_color
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_set_px_alpha
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_alpha
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_buf_get_px_color
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_hal_disp.o(.text)
</UL>
<P><STRONG><a name="[10c]"></a>anim_timer</STRONG> (Thumb, 404 bytes, Stack size 96 bytes, lv_anim.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = anim_timer &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_resume (via Veneer)
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_remove
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_next
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_ll_get_head
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_timer_pause (via Veneer)
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_refr_now
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_anim.o(.text)
</UL>
<P><STRONG><a name="[10d]"></a>lv_async_timer_cb</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lv_async.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_async_timer_cb &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_async.o(.text)
</UL>
<P><STRONG><a name="[668]"></a>rtl_reverse</STRONG> (Thumb, 516 bytes, Stack size 104 bytes, lv_bidi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_process_paragraph
</UL>

<P><STRONG><a name="[66a]"></a>lv_bidi_get_letter_dir</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, lv_bidi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_bidi_get_letter_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bidi_calculate_align
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_process_paragraph
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_process
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_detect_base_dir
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bracket_process
</UL>

<P><STRONG><a name="[669]"></a>bracket_process</STRONG> (Thumb, 270 bytes, Stack size 56 bytes, lv_bidi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bracket_process &rArr; lv_bidi_get_letter_dir
</UL>
<BR>[Calls]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bidi_get_letter_dir
</UL>
<BR>[Called By]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_process_paragraph
</UL>

<P><STRONG><a name="[678]"></a>_vsnprintf</STRONG> (Thumb, 1870 bytes, Stack size 280 bytes, lv_printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _vsnprintf &rArr; _ntoa_format
</UL>
<BR>[Calls]<UL><LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ntoa_format
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_snprintf
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_vsnprintf
</UL>

<P><STRONG><a name="[10f]"></a>_out_buffer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_printf.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lv_printf.o(.text)
</UL>
<P><STRONG><a name="[10e]"></a>_out_null</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_printf.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lv_printf.o(.text)
</UL>
<P><STRONG><a name="[679]"></a>_ntoa_format</STRONG> (Thumb, 352 bytes, Stack size 48 bytes, lv_printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ntoa_format
</UL>
<BR>[Called By]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_vsnprintf
</UL>

<P><STRONG><a name="[4]"></a>lv_txt_utf8_size</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, lv_txt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>lv_txt_unicode_to_utf8</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, lv_txt.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>lv_txt_utf8_next</STRONG> (Thumb, 256 bytes, Stack size 8 bytes, lv_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = lv_txt_utf8_next
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>lv_txt_utf8_prev</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, lv_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_txt_utf8_prev
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>lv_txt_utf8_get_byte_id</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, lv_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_txt_utf8_get_byte_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>lv_txt_utf8_get_char_id</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, lv_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_txt_utf8_get_char_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>lv_txt_utf8_get_length</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, lv_txt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lv_txt_utf8_get_length
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_txt.o(.data)
</UL>
<P><STRONG><a name="[6ad]"></a>inv_arc_area</STRONG> (Thumb, 448 bytes, Stack size 88 bytes, lv_arc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = inv_arc_area &rArr; lv_obj_calculate_ext_draw_size &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_visible
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc_get_area
</UL>
<BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_bg_angles
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_bg_end_angle
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_bg_start_angle
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_angles
</UL>

<P><STRONG><a name="[6af]"></a>value_update</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, lv_arc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = value_update &rArr; lv_arc_set_start_angle &rArr; inv_arc_area &rArr; lv_obj_calculate_ext_draw_size &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_start_angle
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_end_angle
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Called By]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_bg_angles
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_event
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_range
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_mode
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_value
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_bg_end_angle
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_arc_set_bg_start_angle
</UL>

<P><STRONG><a name="[146]"></a>lv_arc_constructor</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lv_arc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = lv_arc_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_ext_click_area
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_arc.o(.constdata)
</UL>
<P><STRONG><a name="[147]"></a>lv_arc_event</STRONG> (Thumb, 2212 bytes, Stack size 224 bytes, lv_arc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740<LI>Call Chain = lv_arc_event &rArr; lv_draw_arc &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_get
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_tick_elaps
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_map (via Veneer)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_arc_dsc
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_trigo_sin (via Veneer)
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_arc_dsc_init
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_atan2 (via Veneer)
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;value_update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_arc.o(.constdata)
</UL>
<P><STRONG><a name="[111]"></a>lv_bar_anim_ready</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, lv_bar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lv_bar_anim_ready &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(.text)
</UL>
<P><STRONG><a name="[110]"></a>lv_bar_anim</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_bar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lv_bar_anim &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(.text)
</UL>
<P><STRONG><a name="[148]"></a>lv_bar_constructor</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, lv_bar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = lv_bar_constructor &rArr; lv_bar_set_value &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(.constdata)
</UL>
<P><STRONG><a name="[149]"></a>lv_bar_destructor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lv_bar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = lv_bar_destructor &rArr; lv_anim_del &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(.constdata)
</UL>
<P><STRONG><a name="[14a]"></a>lv_bar_event</STRONG> (Thumb, 244 bytes, Stack size 24 bytes, lv_bar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1476<LI>Call Chain = lv_bar_event &rArr; draw_indic &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_indic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(.constdata)
</UL>
<P><STRONG><a name="[6c7]"></a>draw_indic</STRONG> (Thumb, 1332 bytes, Stack size 328 bytes, lv_bar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452<LI>Call Chain = draw_indic &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_remove_id
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_add
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_radius_init
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_mask_free_param
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_event
</UL>

<P><STRONG><a name="[112]"></a>lv_area_get_width</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_bar.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(.text)
</UL>
<P><STRONG><a name="[113]"></a>lv_area_get_height</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_bar.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lv_bar.o(.text)
</UL>
<P><STRONG><a name="[14b]"></a>lv_btn_constructor</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lv_btn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = lv_btn_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_btn.o(.constdata)
</UL>
<P><STRONG><a name="[6c8]"></a>invalidate_button_area</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = invalidate_button_area &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_selected_btn
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl_all
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl_all
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_one_checked
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_clear_btn_ctrl
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[14c]"></a>lv_btnmatrix_constructor</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = lv_btnmatrix_constructor &rArr; lv_btnmatrix_set_map &rArr; lv_obj_get_content_height &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_btnmatrix.o(.constdata)
</UL>
<P><STRONG><a name="[14d]"></a>lv_btnmatrix_destructor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_btnmatrix_destructor &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_btnmatrix.o(.constdata)
</UL>
<P><STRONG><a name="[6cd]"></a>get_button_from_point</STRONG> (Thumb, 462 bytes, Stack size 120 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = get_button_from_point &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_event
</UL>

<P><STRONG><a name="[14e]"></a>lv_btnmatrix_event</STRONG> (Thumb, 2566 bytes, Stack size 368 bytes, lv_btnmatrix.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492<LI>Call Chain = lv_btnmatrix_event &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_next
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_reset_long_press
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_map
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_btnmatrix_set_btn_ctrl
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_proc
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_txt_ap_calc_bytes_cnt
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_button_from_point
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invalidate_button_area
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_btnmatrix.o(.constdata)
</UL>
<P><STRONG><a name="[14f]"></a>lv_checkbox_constructor</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lv_checkbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = lv_checkbox_constructor &rArr; lv_obj_add_flag &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_checkbox.o(.constdata)
</UL>
<P><STRONG><a name="[150]"></a>lv_checkbox_destructor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lv_checkbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_checkbox_destructor &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_checkbox.o(.constdata)
</UL>
<P><STRONG><a name="[151]"></a>lv_checkbox_event</STRONG> (Thumb, 824 bytes, Stack size 280 bytes, lv_checkbox.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404<LI>Call Chain = lv_checkbox_event &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_checkbox.o(.constdata)
</UL>
<P><STRONG><a name="[152]"></a>lv_dropdown_constructor</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, lv_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = lv_dropdown_constructor &rArr; lv_obj_add_flag &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_dropdown.o(.constdata)
</UL>
<P><STRONG><a name="[153]"></a>lv_dropdown_destructor</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lv_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = lv_dropdown_destructor &rArr; lv_obj_del &rArr; lv_obj_scrollbar_invalidate &rArr; lv_obj_get_scrollbar_area &rArr; lv_obj_get_scroll_left &rArr; lv_obj_get_self_width &rArr; lv_event_send &rArr; event_send_core &rArr;  event_send_core (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_dropdown.o(.constdata)
</UL>
<P><STRONG><a name="[155]"></a>lv_dropdownlist_constructor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lv_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = lv_dropdownlist_constructor &rArr; lv_label_create &rArr; lv_obj_class_init_obj &rArr; lv_theme_apply &rArr; lv_obj_remove_style &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_dropdown.o(.constdata)
</UL>
<P><STRONG><a name="[156]"></a>lv_dropdownlist_destructor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_dropdown.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lv_dropdown.o(.constdata)
</UL>
<P><STRONG><a name="[154]"></a>lv_dropdown_event</STRONG> (Thumb, 1508 bytes, Stack size 192 bytes, lv_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1140<LI>Call Chain = lv_dropdown_event &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_src_get_type
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_scroll_to_y
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_obj_act
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_scroll_obj
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_decoder_get_info
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_open
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_dropdown.o(.constdata)
</UL>
<P><STRONG><a name="[6e1]"></a>draw_box_label</STRONG> (Thumb, 218 bytes, Stack size 96 bytes, lv_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 900<LI>Call Chain = draw_box_label &rArr; lv_draw_label &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
</UL>

<P><STRONG><a name="[6e3]"></a>draw_box</STRONG> (Thumb, 194 bytes, Stack size 120 bytes, lv_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1244<LI>Call Chain = draw_box &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_dropdown_list_event
</UL>

<P><STRONG><a name="[157]"></a>lv_dropdown_list_event</STRONG> (Thumb, 670 bytes, Stack size 40 bytes, lv_dropdown.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = lv_dropdown_list_event &rArr; draw_box &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_del
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_state
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_scroll_obj
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_box_label
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_dropdown.o(.constdata)
</UL>
<P><STRONG><a name="[158]"></a>lv_img_constructor</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, lv_img.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = lv_img_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img.o(.constdata)
</UL>
<P><STRONG><a name="[159]"></a>lv_img_destructor</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lv_img.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lv_img_destructor &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img.o(.constdata)
</UL>
<P><STRONG><a name="[15a]"></a>lv_img_event</STRONG> (Thumb, 694 bytes, Stack size 48 bytes, lv_img.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1148<LI>Call Chain = lv_img_event &rArr; draw_img &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_set_src
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_click_area
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_img
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_img.o(.constdata)
</UL>
<P><STRONG><a name="[6f3]"></a>draw_img</STRONG> (Thumb, 1356 bytes, Stack size 152 bytes, lv_img.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1100<LI>Call Chain = draw_img &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_img_dsc
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_in
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img_dsc_init
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_img
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_img_buf_get_transformed_area
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_img_event
</UL>

<P><STRONG><a name="[115]"></a>set_ofs_y_anim</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = set_ofs_y_anim &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_label.o(.text)
</UL>
<P><STRONG><a name="[114]"></a>set_ofs_x_anim</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = set_ofs_x_anim &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_label.o(.text)
</UL>
<P><STRONG><a name="[6f7]"></a>lv_label_refr_text</STRONG> (Thumb, 1392 bytes, Stack size 136 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_disp
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_speed_to_time
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_get
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_bidi_detect_base_dir
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_fmt
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_cut_text
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_recolor
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text_static
</UL>

<P><STRONG><a name="[15b]"></a>lv_label_constructor</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = lv_label_constructor &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_label.o(.constdata)
</UL>
<P><STRONG><a name="[15c]"></a>lv_label_destructor</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_label_destructor &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_label.o(.constdata)
</UL>
<P><STRONG><a name="[15d]"></a>lv_label_event</STRONG> (Thumb, 938 bytes, Stack size 104 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 908<LI>Call Chain = lv_label_event &rArr; lv_draw_label &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_coords
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_top
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bidi_calculate_align
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_move
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_revert_dots
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_refr_text
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_label.o(.constdata)
</UL>
<P><STRONG><a name="[6f8]"></a>lv_label_revert_dots</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, lv_label.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_label_revert_dots &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_long_mode
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_event
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_constructor
</UL>

<P><STRONG><a name="[15e]"></a>lv_line_constructor</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lv_line.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = lv_line_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_line.o(.constdata)
</UL>
<P><STRONG><a name="[15f]"></a>lv_line_event</STRONG> (Thumb, 536 bytes, Stack size 72 bytes, lv_line.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = lv_line_event &rArr; lv_draw_line &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_line_dsc
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line_dsc_init
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_line
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_line.o(.constdata)
</UL>
<P><STRONG><a name="[117]"></a>scroll_anim_ready_cb</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lv_roller.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = scroll_anim_ready_cb &rArr; inf_normalize &rArr; lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_roller.o(.text)
</UL>
<P><STRONG><a name="[116]"></a>set_y_anim</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_roller.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = set_y_anim &rArr; lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_roller.o(.text)
</UL>
<P><STRONG><a name="[70b]"></a>refr_position</STRONG> (Thumb, 304 bytes, Stack size 104 bytes, lv_roller.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = refr_position &rArr; inf_normalize &rArr; lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_x
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_width
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inf_normalize
</UL>
<BR>[Called By]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_selected
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_label_event
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_event
</UL>

<P><STRONG><a name="[160]"></a>lv_roller_constructor</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, lv_roller.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = lv_roller_constructor &rArr; lv_roller_set_options &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_init_obj
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_class_create_obj
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_roller.o(.constdata)
</UL>
<P><STRONG><a name="[161]"></a>lv_roller_event</STRONG> (Thumb, 1548 bytes, Stack size 104 bytes, lv_roller.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1228<LI>Call Chain = lv_roller_event &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_y
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_scroll_throw_predict
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_vect
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_selected
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_roller.o(.constdata)
</UL>
<P><STRONG><a name="[162]"></a>lv_roller_label_event</STRONG> (Thumb, 504 bytes, Stack size 120 bytes, lv_roller.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 924<LI>Call Chain = lv_roller_label_event &rArr; lv_draw_label &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_parent
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_roller.o(.constdata)
</UL>
<P><STRONG><a name="[70a]"></a>inf_normalize</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, lv_roller.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = inf_normalize &rArr; lv_obj_set_y &rArr; lv_obj_set_style_y &rArr; lv_obj_set_local_style_prop &rArr; lv_obj_refresh_style &rArr; refresh_children_style &rArr;  refresh_children_style (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_content_height
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_child
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_y
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_roller_set_options
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_position
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scroll_anim_ready_cb
</UL>

<P><STRONG><a name="[163]"></a>lv_slider_constructor</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lv_slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = lv_slider_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_disp_get_dpi
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_ext_click_area
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_slider.o(.constdata)
</UL>
<P><STRONG><a name="[164]"></a>lv_slider_event</STRONG> (Thumb, 1920 bytes, Stack size 216 bytes, lv_slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1340<LI>Call Chain = lv_slider_event &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_ext_draw_size
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_value
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_group
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_set_editing
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_is_point_on
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_group_get_editing
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_start_value
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_get_mode
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_start_value
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_bar_set_value
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;position_knob
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_slider.o(.constdata)
</UL>
<P><STRONG><a name="[715]"></a>position_knob</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, lv_slider.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = position_knob &rArr; lv_obj_get_style_prop &rArr;  lv_obj_get_style_prop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_slider_event
</UL>

<P><STRONG><a name="[165]"></a>lv_switch_constructor</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lv_switch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = lv_switch_constructor &rArr; lv_obj_clear_flag &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_switch.o(.constdata)
</UL>
<P><STRONG><a name="[166]"></a>lv_switch_destructor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lv_switch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = lv_switch_destructor &rArr; lv_anim_del &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_switch.o(.constdata)
</UL>
<P><STRONG><a name="[119]"></a>lv_switch_anim_ready</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lv_switch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lv_switch_anim_ready &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_switch.o(.text)
</UL>
<P><STRONG><a name="[118]"></a>lv_switch_anim_exec_cb</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lv_switch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = lv_switch_anim_exec_cb &rArr; lv_obj_invalidate &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_switch.o(.text)
</UL>
<P><STRONG><a name="[167]"></a>lv_switch_event</STRONG> (Thumb, 814 bytes, Stack size 208 bytes, lv_switch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332<LI>Call Chain = lv_switch_event &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_ext_draw_size
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_state
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_switch.o(.constdata)
</UL>
<P><STRONG><a name="[717]"></a>refr_size</STRONG> (Thumb, 550 bytes, Stack size 176 bytes, lv_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = refr_size &rArr; lv_txt_get_size &rArr; _lv_txt_get_next_line &rArr; lv_font_get_glyph_width
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_refresh_self_size
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_width
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_col_cnt
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_row_cnt
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
</UL>

<P><STRONG><a name="[168]"></a>lv_table_constructor</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lv_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lv_table_constructor &rArr; lv_mem_realloc &rArr; realloc &rArr; malloc &rArr; internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_alloc
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_realloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_table.o(.constdata)
</UL>
<P><STRONG><a name="[169]"></a>lv_table_destructor</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, lv_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_table_destructor &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_table.o(.constdata)
</UL>
<P><STRONG><a name="[16a]"></a>lv_table_event</STRONG> (Thumb, 800 bytes, Stack size 40 bytes, lv_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1588<LI>Call Chain = lv_table_event &rArr; draw_main &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_scroll_obj
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_main
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_size
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_table.o(.constdata)
</UL>
<P><STRONG><a name="[71c]"></a>get_row_height</STRONG> (Thumb, 264 bytes, Stack size 80 bytes, lv_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
</UL>
<BR>[Called By]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_set_cell_value_fmt
</UL>

<P><STRONG><a name="[725]"></a>draw_main</STRONG> (Thumb, 1316 bytes, Stack size 424 bytes, lv_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1548<LI>Call Chain = draw_main &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_txt_get_size
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_lv_area_intersect
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_y
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_scroll_x
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_draw_dsc_init
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_table_event
</UL>

<P><STRONG><a name="[726]"></a>refr_cursor_area</STRONG> (Thumb, 564 bytes, Stack size 56 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = refr_cursor_area &rArr; lv_label_get_letter_pos &rArr; _lv_bidi_get_visual_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_calculate_style_text_align
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_width
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_password_mode
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_event
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
</UL>

<P><STRONG><a name="[11a]"></a>cursor_blink_anim_cb</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = cursor_blink_anim_cb &rArr; lv_obj_invalidate_area &rArr; lv_obj_area_is_visible &rArr; lv_obj_get_disp &rArr; lv_obj_is_valid &rArr; obj_valid_child &rArr;  obj_valid_child (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate_area
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_textarea.o(.text)
</UL>
<P><STRONG><a name="[727]"></a>pwd_char_hider</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = pwd_char_hider &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_release
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_buf_get
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_font_get_glyph_dsc
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen (via Veneer)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_text
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_password_mode
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider_anim_ready
</UL>

<P><STRONG><a name="[11d]"></a>pwd_char_hider_anim_ready</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = pwd_char_hider_anim_ready &rArr; pwd_char_hider &rArr; lv_label_set_text &rArr; lv_label_refr_text &rArr; lv_label_get_letter_on &rArr; _lv_bidi_get_logical_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwd_char_hider
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_textarea.o(.text)
</UL>
<P><STRONG><a name="[11c]"></a>pwd_char_hider_anim</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lv_textarea.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lv_textarea.o(.text)
</UL>
<P><STRONG><a name="[72b]"></a>insert_handler</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156 + In Cycle
<LI>Call Chain = insert_handler &rArr;  lv_textarea_add_text (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_text
</UL>

<P><STRONG><a name="[16b]"></a>lv_textarea_constructor</STRONG> (Thumb, 198 bytes, Stack size 80 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = lv_textarea_constructor &rArr; lv_textarea_set_cursor_pos &rArr; refr_cursor_area &rArr; lv_label_get_letter_pos &rArr; _lv_bidi_get_visual_pos &rArr; _lv_bidi_process_paragraph &rArr; rtl_reverse &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_width
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_create
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_textarea.o(.constdata)
</UL>
<P><STRONG><a name="[16c]"></a>lv_textarea_destructor</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lv_textarea_destructor &rArr; lv_mem_free &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_mem_free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_textarea.o(.constdata)
</UL>
<P><STRONG><a name="[16d]"></a>lv_textarea_event</STRONG> (Thumb, 1988 bytes, Stack size 136 bytes, lv_textarea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = lv_textarea_event &rArr; lv_draw_rect &rArr; lv_draw_img &rArr;  lv_draw_rect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_del
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_invalidate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_param
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect_dsc_init
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_rect
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label_dsc_init
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_draw_label
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_clear_flag
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_add_flag
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_type
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_act
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_target
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_get_code
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_set_pos
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_width
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_height
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_set_text
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_anim_init
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_coords
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_label_dsc
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_init_draw_rect_dsc
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_get_style_prop
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_vect
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_indev_get_point
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_is_valid
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_has_class
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_event_send
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_obj_event_base
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_area_move
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_set_cursor_pos
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_del_char
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_textarea_add_char
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_text
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_is_char_under_pos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_pos
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lv_label_get_letter_on
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refr_cursor_area
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lv_textarea.o(.constdata)
</UL>
<P><STRONG><a name="[11e]"></a>my_flush_cb</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, lvglbsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = my_flush_cb &rArr; _DMA2D_Copy
</UL>
<BR>[Calls]<UL><LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DMA2D_Copy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lvglbsp.o(.text)
</UL>
<P><STRONG><a name="[11f]"></a>my_cleanDcache</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, lvglbsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_cleanDcache
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lvglbsp.o(.text)
</UL>
<P><STRONG><a name="[129]"></a>MyFileSystemCloseDirFunCallBack</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lvglbsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = MyFileSystemCloseDirFunCallBack &rArr; f_closedir &rArr; validate &rArr; ff_req_grant &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir (via Veneer)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lvglbsp.o(.text)
</UL>
<P><STRONG><a name="[128]"></a>MyFileSystemReadDirFunCallBack</STRONG> (Thumb, 88 bytes, Stack size 336 bytes, lvglbsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = MyFileSystemReadDirFunCallBack &rArr; f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir (via Veneer)
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy (via Veneer)
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lvglbsp.o(.text)
</UL>
<P><STRONG><a name="[127]"></a>MyFileSystemOpenDirFunCallBack</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lvglbsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = MyFileSystemOpenDirFunCallBack &rArr; f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir (via Veneer)
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lvglbsp.o(.text)
</UL>
<P><STRONG><a name="[126]"></a>MyFileSystemTellFunCallBack</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lvglbsp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lvglbsp.o(.text)
</UL>
<P><STRONG><a name="[125]"></a>MyFileSystemSeekFunCallBack</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lvglbsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = MyFileSystemSeekFunCallBack &rArr; f_lseek &rArr; validate &rArr; ff_req_grant &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lvglbsp.o(.text)
</UL>
<P><STRONG><a name="[124]"></a>MyFileSystemWriteFunCallBack</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lvglbsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = MyFileSystemWriteFunCallBack &rArr; f_write &rArr; validate &rArr; ff_req_grant &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lvglbsp.o(.text)
</UL>
<P><STRONG><a name="[123]"></a>MyFileSystemReadFunCallBack</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lvglbsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = MyFileSystemReadFunCallBack &rArr; f_read &rArr; validate &rArr; ff_req_grant &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lvglbsp.o(.text)
</UL>
<P><STRONG><a name="[122]"></a>MyFileSystemCloseFunCallBack</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lvglbsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = MyFileSystemCloseFunCallBack &rArr; f_close &rArr; f_sync &rArr; validate &rArr; ff_req_grant &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close (via Veneer)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lvglbsp.o(.text)
</UL>
<P><STRONG><a name="[121]"></a>MyFileSystemOpenFunCallBack</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, lvglbsp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = MyFileSystemOpenFunCallBack &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open (via Veneer)
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek (via Veneer)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc (via Veneer)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lvglbsp.o(.text)
</UL>
<P><STRONG><a name="[120]"></a>MyFileSystemReadyFunCallBack</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lvglbsp.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lvglbsp.o(.text)
</UL>
<P><STRONG><a name="[229]"></a>SCB_DisableDCache</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, sd_diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCB_DisableDCache
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_write
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_read
</UL>

<P><STRONG><a name="[22b]"></a>move_window</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write (via Veneer)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>

<P><STRONG><a name="[22e]"></a>sync_fs</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sync_fs &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl (via Veneer)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write (via Veneer)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[230]"></a>get_fat</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[231]"></a>put_fat</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[232]"></a>create_chain</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
</UL>

<P><STRONG><a name="[233]"></a>dir_sdi</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[234]"></a>dir_next</STRONG> (Thumb, 352 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write (via Veneer)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[235]"></a>dir_read</STRONG> (Thumb, 344 bytes, Stack size 48 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[236]"></a>dir_find</STRONG> (Thumb, 420 bytes, Stack size 48 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper (via Veneer)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[239]"></a>dir_register</STRONG> (Thumb, 710 bytes, Stack size 64 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[23b]"></a>get_fileinfo</STRONG> (Thumb, 842 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_fileinfo
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_oem2uni (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[23d]"></a>follow_path</STRONG> (Thumb, 842 bytes, Stack size 56 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_uni2oem (via Veneer)
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[241]"></a>mount_volume</STRONG> (Thumb, 1150 bytes, Stack size 56 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = mount_volume &rArr; ff_req_grant &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_req_grant (via Veneer)
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize (via Veneer)
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status (via Veneer)
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
</UL>

<P><STRONG><a name="[246]"></a>validate</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = validate &rArr; ff_req_grant &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_req_grant (via Veneer)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_rel_grant (via Veneer)
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
</UL>

<P><STRONG><a name="[24b]"></a>remove_chain</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
</UL>

<P><STRONG><a name="[245]"></a>check_fs</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = check_fs &rArr; move_window &rArr; disk_write
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
</UL>

<P><STRONG><a name="[b0]"></a>rti_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, components.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> components.o(.rti_fn.0)
</UL>
<P><STRONG><a name="[b1]"></a>rti_board_start</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, components.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> components.o(.rti_fn.0.end)
</UL>
<P><STRONG><a name="[b2]"></a>rti_board_end</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, components.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> components.o(.rti_fn.1.end)
</UL>
<P><STRONG><a name="[b3]"></a>rti_end</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, components.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> components.o(.rti_fn.6.end)
</UL>
<P><STRONG><a name="[a8]"></a>rt_thread_idle_entry</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, idle.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = rt_thread_idle_entry &rArr; rt_object_delete &rArr; rt_free &rArr; rt_mutex_take &rArr; rt_thread_control &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_is_systemobject
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_detach
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_object_delete
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> idle.o(.text)
</UL>
<P><STRONG><a name="[2ae]"></a>print_number</STRONG> (Thumb, 440 bytes, Stack size 88 bytes, kservice.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = print_number
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_vsnprintf
</UL>

<P><STRONG><a name="[a9]"></a>_thread_exit</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _thread_exit &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_thread_defunct_enqueue
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_timer_detach
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_remove_thread
</UL>
<BR>[Address Reference Count : 1]<UL><LI> thread.o(.text)
</UL>
<P><STRONG><a name="[aa]"></a>_thread_timeout</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _thread_timeout &rArr; rt_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_enable
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_hw_interrupt_disable
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_schedule_insert_thread
</UL>
<BR>[Address Reference Count : 1]<UL><LI> thread.o(.text)
</UL>
<P><STRONG><a name="[2e7]"></a>internal_alloc</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, mallocr.o(i.internal_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = internal_alloc &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
